// <auto-generated />
#if !EXCLUDE_GENERATED_CODE
#pragma warning disable 162
#pragma warning disable 219
#pragma warning disable 414
#pragma warning disable 618
#pragma warning disable 649
#pragma warning disable 693
#pragma warning disable 1591
#pragma warning disable 1998
using global::Orleans;

[assembly: global::Orleans.Metadata.FeaturePopulatorAttribute(typeof(OrleansGeneratedCode.OrleansCodeGenGrainsFeaturePopulator))]
[assembly: global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Grains, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Common, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("DnsClient, Version=1.6.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100676f9d5ff1e268c55fda5578e9f09f27b5fdfadc2b96eec28616532974ffdab2551ac7082ef0037690e3f859328da8425afc284333a808f01b5bbef674a615723b1085b6404b293e10dc8132d5636b692edab794ada3f53711175f0520d3d84e217fc9269de230ee8ca90415f919514776435bff5cb94cad1652a90ead386fc1"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Google.Protobuf, Version=3.19.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010025800fbcfc63a17c66b303aae80b03a6beaa176bb6bef883be436f2a1579edd80ce23edf151a1f4ced97af83abcd981207041fd5b2da3b498346fcfcd94910d52f25537c4a43ce3fbe17dc7d43e6cbdb4d8f1242dcb6bd9b5906be74da8daa7d7280f97130f318a16c07baf118839b156299a48522f9fae2371c9665c5ae9cb6"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.Win32.Registry, Version=5.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("MongoDB.Bson, Version=2.15.1.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("MongoDB.Driver.Core, Version=2.15.1.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("MongoDB.Driver, Version=2.15.1.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("MongoDB.Libmongocrypt, Version=1.3.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Protocol, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Serilog, Version=2.0.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100fb8d13fd344a1c6fe0fe83ef33c1080bf30690765bc6eb0df26ebfdf8f21670c64265b30db09f73a0dea5b3db4c9d18dbf6d5a25af5ce9016f281014d79dc3b4201ac646c451830fc7e61a2dfd633d34c39f87b81894191652df5ac63cc40c77f3542f702bda692e6e8a9158353df189007a49da0f3cfd55eb250066b19485ec"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Serilog.Sinks.Console, Version=3.1.1.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100fb8d13fd344a1c6fe0fe83ef33c1080bf30690765bc6eb0df26ebfdf8f21670c64265b30db09f73a0dea5b3db4c9d18dbf6d5a25af5ce9016f281014d79dc3b4201ac646c451830fc7e61a2dfd633d34c39f87b81894191652df5ac63cc40c77f3542f702bda692e6e8a9158353df189007a49da0f3cfd55eb250066b19485ec"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Serilog.Sinks.File, Version=2.0.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100fb8d13fd344a1c6fe0fe83ef33c1080bf30690765bc6eb0df26ebfdf8f21670c64265b30db09f73a0dea5b3db4c9d18dbf6d5a25af5ce9016f281014d79dc3b4201ac646c451830fc7e61a2dfd633d34c39f87b81894191652df5ac63cc40c77f3542f702bda692e6e8a9158353df189007a49da0f3cfd55eb250066b19485ec"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("SharpCompress, Version=0.30.1.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010059acfa17d26c447a4d03f16eaa72c9187c04f16e6569dd168b080e39a6f5c9fd00f28c768cd8e9a089d5a0e1b34ccd971488e7afe030ce5ce8df2053cf12ec89f6d38065c434c09ee6af3ee284c5dc08f44774b679bf39298e57efe30d4b00aecf9e4f6f8448b2cb0146d8956dfcab606cc64a0ac38c60a7d78b0d65d3b98dc0"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Runtime.CompilerServices.Unsafe, Version=5.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Security.AccessControl, Version=5.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Security.Principal.Windows, Version=5.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293")]
namespace OrleansGeneratedCode
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0")]
    internal sealed class OrleansCodeGenGrainsFeaturePopulator : global::Orleans.Metadata.IFeaturePopulator<global::Orleans.Metadata.GrainInterfaceFeature>, global::Orleans.Metadata.IFeaturePopulator<global::Orleans.Metadata.GrainClassFeature>, global::Orleans.Metadata.IFeaturePopulator<global::Orleans.Serialization.SerializerFeature>
    {
        public void Populate(global::Orleans.Metadata.GrainInterfaceFeature feature)
        {
        }

        public void Populate(global::Orleans.Metadata.GrainClassFeature feature)
        {
            feature.Classes.Add(new global::Orleans.Metadata.GrainClassMetadata(typeof(global::IGrains.LoginGrain)));
            feature.Classes.Add(new global::Orleans.Metadata.GrainClassMetadata(typeof(global::IGrains.PacketRouterGrain)));
        }

        public void Populate(global::Orleans.Serialization.SerializerFeature feature)
        {
            feature.AddKnownType("IGrains.LoginGrain,Grains", "IGrains.LoginGrain");
            feature.AddKnownType("IGrains.PacketRouterGrain,Grains", "IGrains.PacketRouterGrain");
            feature.AddKnownType("Common.Logger,Common", "Common.Logger");
            feature.AddKnownType("Common.DB.AccountDB,Common", "Common.DB.AccountDB");
            feature.AddKnownType("Common.DB.Person,Common", "Common.DB.Person");
            feature.AddKnownType("Common.DB.GenderEnum,Common", "Common.DB.GenderEnum");
            feature.AddKnownType("Common.DB.Pet,Common", "Common.DB.Pet");
            feature.AddKnownType("Common.DB.UserDB,Common", "Common.DB.UserDB");
            feature.AddKnownType("Common.ORM.DBEntity,Common", "Common.ORM.DBEntity");
            feature.AddKnownType("Common.ORM.Table`1,Common", "Common.ORM.Table`1'1");
            feature.AddKnownType("Interop+IpHlpApi+FIXED_INFO,DnsClient", "<global namespace>.FIXED_INFO");
            feature.AddKnownType("Interop+IpHlpApi+IP_ADDR_STRING,DnsClient", "<global namespace>.IP_ADDR_STRING");
            feature.AddKnownType("DnsClient.DnsDatagramReader,DnsClient", "DnsClient.DnsDatagramReader");
            feature.AddKnownType("DnsClient.DnsDatagramWriter,DnsClient", "DnsClient.DnsDatagramWriter");
            feature.AddKnownType("DnsClient.DnsMessageHandleType,DnsClient", "DnsClient.DnsMessageHandleType");
            feature.AddKnownType("DnsClient.DnsMessageHandler,DnsClient", "DnsClient.DnsMessageHandler");
            feature.AddKnownType("DnsClient.DnsOpCode,DnsClient", "DnsClient.DnsOpCode");
            feature.AddKnownType("DnsClient.ServiceHostEntry,DnsClient", "DnsClient.ServiceHostEntry");
            feature.AddKnownType("DnsClient.DnsQueryOptions,DnsClient", "DnsClient.DnsQueryOptions");
            feature.AddKnownType("DnsClient.DnsQueryAndServerOptions,DnsClient", "DnsClient.DnsQueryAndServerOptions");
            feature.AddKnownType("DnsClient.LookupClientOptions,DnsClient", "DnsClient.LookupClientOptions");
            feature.AddKnownType("DnsClient.DnsQuerySettings,DnsClient", "DnsClient.DnsQuerySettings");
            feature.AddKnownType("DnsClient.DnsQueryAndServerSettings,DnsClient", "DnsClient.DnsQueryAndServerSettings");
            feature.AddKnownType("DnsClient.LookupClientSettings,DnsClient", "DnsClient.LookupClientSettings");
            feature.AddKnownType("DnsClient.TruncatedQueryResponse,DnsClient", "DnsClient.TruncatedQueryResponse");
            feature.AddKnownType("DnsClient.DnsQueryResponse,DnsClient", "DnsClient.DnsQueryResponse");
            feature.AddKnownType("DnsClient.DnsQuestion,DnsClient", "DnsClient.DnsQuestion");
            feature.AddKnownType("DnsClient.DnsRecordFactory,DnsClient", "DnsClient.DnsRecordFactory");
            feature.AddKnownType("DnsClient.DnsRequestHeader,DnsClient", "DnsClient.DnsRequestHeader");
            feature.AddKnownType("DnsClient.DnsRequestMessage,DnsClient", "DnsClient.DnsRequestMessage");
            feature.AddKnownType("DnsClient.DnsHeaderResponseCode,DnsClient", "DnsClient.DnsHeaderResponseCode");
            feature.AddKnownType("DnsClient.DnsResponseCode,DnsClient", "DnsClient.DnsResponseCode");
            feature.AddKnownType("DnsClient.DnsResponseException,DnsClient", "DnsClient.DnsResponseException");
            feature.AddKnownType("DnsClient.DnsResponseHeader,DnsClient", "DnsClient.DnsResponseHeader");
            feature.AddKnownType("DnsClient.DnsResponseMessage,DnsClient", "DnsClient.DnsResponseMessage");
            feature.AddKnownType("DnsClient.DnsResponseParseException,DnsClient", "DnsClient.DnsResponseParseException");
            feature.AddKnownType("DnsClient.DnsString,DnsClient", "DnsClient.DnsString");
            feature.AddKnownType("DnsClient.DnsTcpMessageHandler,DnsClient", "DnsClient.DnsTcpMessageHandler");
            feature.AddKnownType("DnsClient.DnsTcpMessageHandler+ClientPool,DnsClient", "DnsClient.ClientPool");
            feature.AddKnownType("DnsClient.DnsTcpMessageHandler+ClientPool+ClientEntry,DnsClient", "DnsClient.DnsClient.ClientPool.ClientEntry");
            feature.AddKnownType("DnsClient.DnsUdpMessageHandler,DnsClient", "DnsClient.DnsUdpMessageHandler");
            feature.AddKnownType("DnsClient.DnsXidMismatchException,DnsClient", "DnsClient.DnsXidMismatchException");
            feature.AddKnownType("DnsClient.IDnsQuery,DnsClient", "DnsClient.IDnsQuery");
            feature.AddKnownType("DnsClient.IDnsQueryResponse,DnsClient", "DnsClient.IDnsQueryResponse");
            feature.AddKnownType("DnsClient.ILookupClient,DnsClient", "DnsClient.ILookupClient");
            feature.AddKnownType("DnsClient.DisposableIntPtr,DnsClient", "DnsClient.DisposableIntPtr");
            feature.AddKnownType("DnsClient.LookupClient,DnsClient", "DnsClient.LookupClient");
            feature.AddKnownType("DnsClient.LookupClient+HandleError,DnsClient", "DnsClient.HandleError");
            feature.AddKnownType("DnsClient.LookupClient+SkipWorker,DnsClient", "DnsClient.SkipWorker");
            feature.AddKnownType("DnsClient.LookupClientAudit,DnsClient", "DnsClient.LookupClientAudit");
            feature.AddKnownType("DnsClient.NameServer,DnsClient", "DnsClient.NameServer");
            feature.AddKnownType("DnsClient.QueryClass,DnsClient", "DnsClient.QueryClass");
            feature.AddKnownType("DnsClient.QueryType,DnsClient", "DnsClient.QueryType");
            feature.AddKnownType("DnsClient.ResponseCache,DnsClient", "DnsClient.ResponseCache");
            feature.AddKnownType("DnsClient.ResponseCache+ResponseEntry,DnsClient", "DnsClient.ResponseEntry");
            feature.AddKnownType("DnsClient.Tracing+TraceLoggerFactory,DnsClient", "DnsClient.TraceLoggerFactory");
            feature.AddKnownType("DnsClient.Tracing+TraceLoggerFactory+TraceLogger,DnsClient", "DnsClient.TraceLogger");
            feature.AddKnownType("DnsClient.Internal.ILogger,DnsClient", "DnsClient.Internal.ILogger");
            feature.AddKnownType("DnsClient.Internal.ILoggerFactory,DnsClient", "DnsClient.Internal.ILoggerFactory");
            feature.AddKnownType("DnsClient.Internal.LogLevel,DnsClient", "DnsClient.Internal.LogLevel");
            feature.AddKnownType("DnsClient.Internal.NullLoggerFactory,DnsClient", "DnsClient.Internal.NullLoggerFactory");
            feature.AddKnownType("DnsClient.Internal.NullLoggerFactory+NullLogger,DnsClient", "DnsClient.Internal.NullLogger");
            feature.AddKnownType("DnsClient.Internal.PooledBytes,DnsClient", "DnsClient.Internal.PooledBytes");
            feature.AddKnownType("DnsClient.Internal.StringBuilderObjectPool,DnsClient", "DnsClient.Internal.StringBuilderObjectPool");
            feature.AddKnownType("DnsClient.Internal.IPooledObjectPolicy`1,DnsClient", "DnsClient.Internal.IPooledObjectPolicy`1'1");
            feature.AddKnownType("DnsClient.Internal.DefaultObjectPool`1,DnsClient", "DnsClient.Internal.DefaultObjectPool`1'1");
            feature.AddKnownType("DnsClient.Internal.DefaultObjectPool`1+ObjectWrapper,DnsClient", "DnsClient.Internal.ObjectWrapper'1");
            feature.AddKnownType("DnsClient.Internal.DefaultObjectPoolProvider,DnsClient", "DnsClient.Internal.DefaultObjectPoolProvider");
            feature.AddKnownType("DnsClient.Internal.DefaultPooledObjectPolicy`1,DnsClient", "DnsClient.Internal.DefaultPooledObjectPolicy`1'1");
            feature.AddKnownType("DnsClient.Internal.ObjectPool`1,DnsClient", "DnsClient.Internal.ObjectPool`1'1");
            feature.AddKnownType("DnsClient.Internal.ObjectPoolProvider,DnsClient", "DnsClient.Internal.ObjectPoolProvider");
            feature.AddKnownType("DnsClient.Internal.PooledObjectPolicy`1,DnsClient", "DnsClient.Internal.PooledObjectPolicy`1'1");
            feature.AddKnownType("DnsClient.Internal.StringBuilderPooledObjectPolicy,DnsClient", "DnsClient.Internal.StringBuilderPooledObjectPolicy");
            feature.AddKnownType("DnsClient.Protocol.DnsHeaderFlag,DnsClient", "DnsClient.Protocol.DnsHeaderFlag");
            feature.AddKnownType("DnsClient.Protocol.AaaaRecord,DnsClient", "DnsClient.Protocol.AaaaRecord");
            feature.AddKnownType("DnsClient.Protocol.AddressRecord,DnsClient", "DnsClient.Protocol.AddressRecord");
            feature.AddKnownType("DnsClient.Protocol.AfsDbRecord,DnsClient", "DnsClient.Protocol.AfsDbRecord");
            feature.AddKnownType("DnsClient.Protocol.AfsType,DnsClient", "DnsClient.Protocol.AfsType");
            feature.AddKnownType("DnsClient.Protocol.ARecord,DnsClient", "DnsClient.Protocol.ARecord");
            feature.AddKnownType("DnsClient.Protocol.CaaRecord,DnsClient", "DnsClient.Protocol.CaaRecord");
            feature.AddKnownType("DnsClient.Protocol.CNameRecord,DnsClient", "DnsClient.Protocol.CNameRecord");
            feature.AddKnownType("DnsClient.Protocol.DnsKeyRecord,DnsClient", "DnsClient.Protocol.DnsKeyRecord");
            feature.AddKnownType("DnsClient.Protocol.DnsResourceRecord,DnsClient", "DnsClient.Protocol.DnsResourceRecord");
            feature.AddKnownType("DnsClient.Protocol.ResourceRecordInfo,DnsClient", "DnsClient.Protocol.ResourceRecordInfo");
            feature.AddKnownType("DnsClient.Protocol.DnsSecurityAlgorithm,DnsClient", "DnsClient.Protocol.DnsSecurityAlgorithm");
            feature.AddKnownType("DnsClient.Protocol.DsRecord,DnsClient", "DnsClient.Protocol.DsRecord");
            feature.AddKnownType("DnsClient.Protocol.EmptyRecord,DnsClient", "DnsClient.Protocol.EmptyRecord");
            feature.AddKnownType("DnsClient.Protocol.HInfoRecord,DnsClient", "DnsClient.Protocol.HInfoRecord");
            feature.AddKnownType("DnsClient.Protocol.MbRecord,DnsClient", "DnsClient.Protocol.MbRecord");
            feature.AddKnownType("DnsClient.Protocol.MgRecord,DnsClient", "DnsClient.Protocol.MgRecord");
            feature.AddKnownType("DnsClient.Protocol.MInfoRecord,DnsClient", "DnsClient.Protocol.MInfoRecord");
            feature.AddKnownType("DnsClient.Protocol.MrRecord,DnsClient", "DnsClient.Protocol.MrRecord");
            feature.AddKnownType("DnsClient.Protocol.MxRecord,DnsClient", "DnsClient.Protocol.MxRecord");
            feature.AddKnownType("DnsClient.Protocol.NAPtrRecord,DnsClient", "DnsClient.Protocol.NAPtrRecord");
            feature.AddKnownType("DnsClient.Protocol.NSec3ParamRecord,DnsClient", "DnsClient.Protocol.NSec3ParamRecord");
            feature.AddKnownType("DnsClient.Protocol.NSec3Record,DnsClient", "DnsClient.Protocol.NSec3Record");
            feature.AddKnownType("DnsClient.Protocol.NSecRecord,DnsClient", "DnsClient.Protocol.NSecRecord");
            feature.AddKnownType("DnsClient.Protocol.NsRecord,DnsClient", "DnsClient.Protocol.NsRecord");
            feature.AddKnownType("DnsClient.Protocol.NullRecord,DnsClient", "DnsClient.Protocol.NullRecord");
            feature.AddKnownType("DnsClient.Protocol.PtrRecord,DnsClient", "DnsClient.Protocol.PtrRecord");
            feature.AddKnownType("DnsClient.Protocol.ResourceRecordType,DnsClient", "DnsClient.Protocol.ResourceRecordType");
            feature.AddKnownType("DnsClient.Protocol.RpRecord,DnsClient", "DnsClient.Protocol.RpRecord");
            feature.AddKnownType("DnsClient.Protocol.RRSigRecord,DnsClient", "DnsClient.Protocol.RRSigRecord");
            feature.AddKnownType("DnsClient.Protocol.SoaRecord,DnsClient", "DnsClient.Protocol.SoaRecord");
            feature.AddKnownType("DnsClient.Protocol.SrvRecord,DnsClient", "DnsClient.Protocol.SrvRecord");
            feature.AddKnownType("DnsClient.Protocol.SshfpRecord,DnsClient", "DnsClient.Protocol.SshfpRecord");
            feature.AddKnownType("DnsClient.Protocol.SshfpAlgorithm,DnsClient", "DnsClient.Protocol.SshfpAlgorithm");
            feature.AddKnownType("DnsClient.Protocol.SshfpFingerprintType,DnsClient", "DnsClient.Protocol.SshfpFingerprintType");
            feature.AddKnownType("DnsClient.Protocol.TlsaRecord,DnsClient", "DnsClient.Protocol.TlsaRecord");
            feature.AddKnownType("DnsClient.Protocol.TlsaCertificateUsage,DnsClient", "DnsClient.Protocol.TlsaCertificateUsage");
            feature.AddKnownType("DnsClient.Protocol.TlsaSelector,DnsClient", "DnsClient.Protocol.TlsaSelector");
            feature.AddKnownType("DnsClient.Protocol.TlsaMatchingType,DnsClient", "DnsClient.Protocol.TlsaMatchingType");
            feature.AddKnownType("DnsClient.Protocol.TxtRecord,DnsClient", "DnsClient.Protocol.TxtRecord");
            feature.AddKnownType("DnsClient.Protocol.UnknownRecord,DnsClient", "DnsClient.Protocol.UnknownRecord");
            feature.AddKnownType("DnsClient.Protocol.UriRecord,DnsClient", "DnsClient.Protocol.UriRecord");
            feature.AddKnownType("DnsClient.Protocol.WksRecord,DnsClient", "DnsClient.Protocol.WksRecord");
            feature.AddKnownType("DnsClient.Protocol.Options.OptRecord,DnsClient", "DnsClient.Protocol.Options.OptRecord");
            feature.AddKnownType("DnsClient.Windows.IpHlpApi.FixedNetworkInformation,DnsClient", "DnsClient.Windows.IpHlpApi.FixedNetworkInformation");
            feature.AddKnownType("System.IO.RowConfigReader", "RowConfigReader");
            feature.AddKnownType("Google.Protobuf.ByteString,Google.Protobuf", "Google.Protobuf.ByteString");
            feature.AddKnownType("Google.Protobuf.CodedInputStream,Google.Protobuf", "Google.Protobuf.CodedInputStream");
            feature.AddKnownType("Google.Protobuf.CodedOutputStream,Google.Protobuf", "Google.Protobuf.CodedOutputStream");
            feature.AddKnownType("Google.Protobuf.CodedOutputStream+OutOfSpaceException,Google.Protobuf", "Google.Protobuf.Google.Protobuf.CodedOutputStream.OutOfSpaceException");
            feature.AddKnownType("Google.Protobuf.Extension,Google.Protobuf", "Google.Protobuf.Extension");
            feature.AddKnownType("Google.Protobuf.Extension`2,Google.Protobuf", "Google.Protobuf.Extension`2'2");
            feature.AddKnownType("Google.Protobuf.RepeatedExtension`2,Google.Protobuf", "Google.Protobuf.RepeatedExtension`2'2");
            feature.AddKnownType("Google.Protobuf.ExtensionRegistry,Google.Protobuf", "Google.Protobuf.ExtensionRegistry");
            feature.AddKnownType("Google.Protobuf.ExtensionRegistry+ExtensionComparer,Google.Protobuf", "Google.Protobuf.ExtensionComparer");
            feature.AddKnownType("Google.Protobuf.ExtensionSet`1,Google.Protobuf", "Google.Protobuf.ExtensionSet`1'1");
            feature.AddKnownType("Google.Protobuf.IExtensionValue,Google.Protobuf", "Google.Protobuf.IExtensionValue");
            feature.AddKnownType("Google.Protobuf.ExtensionValue`1,Google.Protobuf", "Google.Protobuf.ExtensionValue`1'1");
            feature.AddKnownType("Google.Protobuf.RepeatedExtensionValue`1,Google.Protobuf", "Google.Protobuf.RepeatedExtensionValue`1'1");
            feature.AddKnownType("Google.Protobuf.FieldCodec`1,Google.Protobuf", "Google.Protobuf.FieldCodec`1'1");
            feature.AddKnownType("Google.Protobuf.FieldMaskTree,Google.Protobuf", "Google.Protobuf.FieldMaskTree");
            feature.AddKnownType("Google.Protobuf.FieldMaskTree+Node,Google.Protobuf", "Google.Protobuf.Node");
            feature.AddKnownType("Google.Protobuf.IBufferMessage,Google.Protobuf", "Google.Protobuf.IBufferMessage");
            feature.AddKnownType("Google.Protobuf.ICustomDiagnosticMessage,Google.Protobuf", "Google.Protobuf.ICustomDiagnosticMessage");
            feature.AddKnownType("Google.Protobuf.IDeepCloneable`1,Google.Protobuf", "Google.Protobuf.IDeepCloneable`1'1");
            feature.AddKnownType("Google.Protobuf.IExtendableMessage`1,Google.Protobuf", "Google.Protobuf.IExtendableMessage`1'1");
            feature.AddKnownType("Google.Protobuf.IMessage,Google.Protobuf", "Google.Protobuf.IMessage");
            feature.AddKnownType("Google.Protobuf.IMessage`1,Google.Protobuf", "Google.Protobuf.IMessage`1'1");
            feature.AddKnownType("Google.Protobuf.InvalidJsonException,Google.Protobuf", "Google.Protobuf.InvalidJsonException");
            feature.AddKnownType("Google.Protobuf.InvalidProtocolBufferException,Google.Protobuf", "Google.Protobuf.InvalidProtocolBufferException");
            feature.AddKnownType("Google.Protobuf.JsonFormatter,Google.Protobuf", "Google.Protobuf.JsonFormatter");
            feature.AddKnownType("Google.Protobuf.JsonFormatter+Settings,Google.Protobuf", "Google.Protobuf.Google.Protobuf.JsonFormatter.Settings");
            feature.AddKnownType("Google.Protobuf.JsonParser,Google.Protobuf", "Google.Protobuf.JsonParser");
            feature.AddKnownType("Google.Protobuf.JsonParser+Settings,Google.Protobuf", "Google.Protobuf.Google.Protobuf.JsonParser.Settings");
            feature.AddKnownType("Google.Protobuf.JsonToken,Google.Protobuf", "Google.Protobuf.JsonToken");
            feature.AddKnownType("Google.Protobuf.JsonToken+TokenType,Google.Protobuf", "Google.Protobuf.TokenType");
            feature.AddKnownType("Google.Protobuf.JsonTokenizer,Google.Protobuf", "Google.Protobuf.JsonTokenizer");
            feature.AddKnownType("Google.Protobuf.JsonTokenizer+JsonReplayTokenizer,Google.Protobuf", "Google.Protobuf.JsonReplayTokenizer");
            feature.AddKnownType("Google.Protobuf.JsonTokenizer+JsonTextTokenizer,Google.Protobuf", "Google.Protobuf.JsonTextTokenizer");
            feature.AddKnownType("Google.Protobuf.JsonTokenizer+JsonTextTokenizer+ContainerType,Google.Protobuf", "Google.Protobuf.ContainerType");
            feature.AddKnownType("Google.Protobuf.JsonTokenizer+JsonTextTokenizer+State,Google.Protobuf", "Google.Protobuf.State");
            feature.AddKnownType("Google.Protobuf.JsonTokenizer+JsonTextTokenizer+PushBackReader,Google.Protobuf", "Google.Protobuf.PushBackReader");
            feature.AddKnownType("Google.Protobuf.LimitedInputStream,Google.Protobuf", "Google.Protobuf.LimitedInputStream");
            feature.AddKnownType("Google.Protobuf.MessageParser,Google.Protobuf", "Google.Protobuf.MessageParser");
            feature.AddKnownType("Google.Protobuf.MessageParser`1,Google.Protobuf", "Google.Protobuf.MessageParser`1'1");
            feature.AddKnownType("Google.Protobuf.ObjectIntPair`1,Google.Protobuf", "Google.Protobuf.ObjectIntPair`1'1");
            feature.AddKnownType("Google.Protobuf.ParseContext,Google.Protobuf", "Google.Protobuf.ParseContext");
            feature.AddKnownType("Google.Protobuf.ParserInternalState,Google.Protobuf", "Google.Protobuf.ParserInternalState");
            feature.AddKnownType("Google.Protobuf.SegmentedBufferHelper,Google.Protobuf", "Google.Protobuf.SegmentedBufferHelper");
            feature.AddKnownType("Google.Protobuf.UnknownField,Google.Protobuf", "Google.Protobuf.UnknownField");
            feature.AddKnownType("Google.Protobuf.UnknownFieldSet,Google.Protobuf", "Google.Protobuf.UnknownFieldSet");
            feature.AddKnownType("Google.Protobuf.WireFormat+WireType,Google.Protobuf", "Google.Protobuf.Google.Protobuf.WireFormat.WireType");
            feature.AddKnownType("Google.Protobuf.WriteBufferHelper,Google.Protobuf", "Google.Protobuf.WriteBufferHelper");
            feature.AddKnownType("Google.Protobuf.WriteContext,Google.Protobuf", "Google.Protobuf.WriteContext");
            feature.AddKnownType("Google.Protobuf.WriterInternalState,Google.Protobuf", "Google.Protobuf.WriterInternalState");
            feature.AddKnownType("Google.Protobuf.Collections.MapField`2,Google.Protobuf", "Google.Protobuf.Collections.MapField`2'2");
            feature.AddKnownType("Google.Protobuf.Collections.MapField`2+DictionaryEnumerator,Google.Protobuf", "Google.Protobuf.Collections.DictionaryEnumerator'2");
            feature.AddKnownType("Google.Protobuf.Collections.MapField`2+Codec,Google.Protobuf", "Google.Protobuf.Collections.Google.Protobuf.Collections.MapField`2'2.Codec'2");
            feature.AddKnownType("Google.Protobuf.Collections.MapField`2+MapView`1,Google.Protobuf", "Google.Protobuf.Collections.MapView`1'3");
            feature.AddKnownType("Google.Protobuf.Collections.ProtobufEqualityComparers+BitwiseDoubleEqualityComparerImpl,Google.Protobuf", "Google.Protobuf.Collections.BitwiseDoubleEqualityComparerImpl");
            feature.AddKnownType("Google.Protobuf.Collections.ProtobufEqualityComparers+BitwiseSingleEqualityComparerImpl,Google.Protobuf", "Google.Protobuf.Collections.BitwiseSingleEqualityComparerImpl");
            feature.AddKnownType("Google.Protobuf.Collections.ProtobufEqualityComparers+BitwiseNullableDoubleEqualityComparerImpl,Google.Protobuf", "Google.Protobuf.Collections.BitwiseNullableDoubleEqualityComparerImpl");
            feature.AddKnownType("Google.Protobuf.Collections.ProtobufEqualityComparers+BitwiseNullableSingleEqualityComparerImpl,Google.Protobuf", "Google.Protobuf.Collections.BitwiseNullableSingleEqualityComparerImpl");
            feature.AddKnownType("Google.Protobuf.Collections.ReadOnlyDictionary`2,Google.Protobuf", "Google.Protobuf.Collections.ReadOnlyDictionary`2'2");
            feature.AddKnownType("Google.Protobuf.Collections.RepeatedField`1,Google.Protobuf", "Google.Protobuf.Collections.RepeatedField`1'1");
            feature.AddKnownType("Google.Protobuf.Reflection.CustomOptions,Google.Protobuf", "Google.Protobuf.Reflection.CustomOptions");
            feature.AddKnownType("Google.Protobuf.Reflection.FileDescriptorSet,Google.Protobuf", "Google.Protobuf.Reflection.FileDescriptorSet");
            feature.AddKnownType("Google.Protobuf.Reflection.FileDescriptorProto,Google.Protobuf", "Google.Protobuf.Reflection.FileDescriptorProto");
            feature.AddKnownType("Google.Protobuf.Reflection.DescriptorProto,Google.Protobuf", "Google.Protobuf.Reflection.DescriptorProto");
            feature.AddKnownType("Google.Protobuf.Reflection.DescriptorProto+Types+ExtensionRange,Google.Protobuf", "Google.Protobuf.Reflection.Google.Protobuf.Reflection.Google.Protobuf.Reflection.DescriptorProto.Types.ExtensionRange");
            feature.AddKnownType("Google.Protobuf.Reflection.DescriptorProto+Types+ReservedRange,Google.Protobuf", "Google.Protobuf.Reflection.Google.Protobuf.Reflection.Google.Protobuf.Reflection.DescriptorProto.Types.ReservedRange");
            feature.AddKnownType("Google.Protobuf.Reflection.ExtensionRangeOptions,Google.Protobuf", "Google.Protobuf.Reflection.ExtensionRangeOptions");
            feature.AddKnownType("Google.Protobuf.Reflection.FieldDescriptorProto,Google.Protobuf", "Google.Protobuf.Reflection.FieldDescriptorProto");
            feature.AddKnownType("Google.Protobuf.Reflection.FieldDescriptorProto+Types+Type,Google.Protobuf", "Google.Protobuf.Reflection.Google.Protobuf.Reflection.Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type");
            feature.AddKnownType("Google.Protobuf.Reflection.FieldDescriptorProto+Types+Label,Google.Protobuf", "Google.Protobuf.Reflection.Google.Protobuf.Reflection.Google.Protobuf.Reflection.FieldDescriptorProto.Types.Label");
            feature.AddKnownType("Google.Protobuf.Reflection.OneofDescriptorProto,Google.Protobuf", "Google.Protobuf.Reflection.OneofDescriptorProto");
            feature.AddKnownType("Google.Protobuf.Reflection.EnumDescriptorProto,Google.Protobuf", "Google.Protobuf.Reflection.EnumDescriptorProto");
            feature.AddKnownType("Google.Protobuf.Reflection.EnumDescriptorProto+Types+EnumReservedRange,Google.Protobuf", "Google.Protobuf.Reflection.Google.Protobuf.Reflection.Google.Protobuf.Reflection.EnumDescriptorProto.Types.EnumReservedRange");
            feature.AddKnownType("Google.Protobuf.Reflection.EnumValueDescriptorProto,Google.Protobuf", "Google.Protobuf.Reflection.EnumValueDescriptorProto");
            feature.AddKnownType("Google.Protobuf.Reflection.ServiceDescriptorProto,Google.Protobuf", "Google.Protobuf.Reflection.ServiceDescriptorProto");
            feature.AddKnownType("Google.Protobuf.Reflection.MethodDescriptorProto,Google.Protobuf", "Google.Protobuf.Reflection.MethodDescriptorProto");
            feature.AddKnownType("Google.Protobuf.Reflection.FileOptions,Google.Protobuf", "Google.Protobuf.Reflection.FileOptions");
            feature.AddKnownType("Google.Protobuf.Reflection.FileOptions+Types+OptimizeMode,Google.Protobuf", "Google.Protobuf.Reflection.Google.Protobuf.Reflection.Google.Protobuf.Reflection.FileOptions.Types.OptimizeMode");
            feature.AddKnownType("Google.Protobuf.Reflection.MessageOptions,Google.Protobuf", "Google.Protobuf.Reflection.MessageOptions");
            feature.AddKnownType("Google.Protobuf.Reflection.FieldOptions,Google.Protobuf", "Google.Protobuf.Reflection.FieldOptions");
            feature.AddKnownType("Google.Protobuf.Reflection.FieldOptions+Types+CType,Google.Protobuf", "Google.Protobuf.Reflection.Google.Protobuf.Reflection.Google.Protobuf.Reflection.FieldOptions.Types.CType");
            feature.AddKnownType("Google.Protobuf.Reflection.FieldOptions+Types+JSType,Google.Protobuf", "Google.Protobuf.Reflection.Google.Protobuf.Reflection.Google.Protobuf.Reflection.FieldOptions.Types.JSType");
            feature.AddKnownType("Google.Protobuf.Reflection.OneofOptions,Google.Protobuf", "Google.Protobuf.Reflection.OneofOptions");
            feature.AddKnownType("Google.Protobuf.Reflection.EnumOptions,Google.Protobuf", "Google.Protobuf.Reflection.EnumOptions");
            feature.AddKnownType("Google.Protobuf.Reflection.EnumValueOptions,Google.Protobuf", "Google.Protobuf.Reflection.EnumValueOptions");
            feature.AddKnownType("Google.Protobuf.Reflection.ServiceOptions,Google.Protobuf", "Google.Protobuf.Reflection.ServiceOptions");
            feature.AddKnownType("Google.Protobuf.Reflection.MethodOptions,Google.Protobuf", "Google.Protobuf.Reflection.MethodOptions");
            feature.AddKnownType("Google.Protobuf.Reflection.MethodOptions+Types+IdempotencyLevel,Google.Protobuf", "Google.Protobuf.Reflection.Google.Protobuf.Reflection.Google.Protobuf.Reflection.MethodOptions.Types.IdempotencyLevel");
            feature.AddKnownType("Google.Protobuf.Reflection.UninterpretedOption,Google.Protobuf", "Google.Protobuf.Reflection.UninterpretedOption");
            feature.AddKnownType("Google.Protobuf.Reflection.UninterpretedOption+Types+NamePart,Google.Protobuf", "Google.Protobuf.Reflection.Google.Protobuf.Reflection.Google.Protobuf.Reflection.UninterpretedOption.Types.NamePart");
            feature.AddKnownType("Google.Protobuf.Reflection.SourceCodeInfo,Google.Protobuf", "Google.Protobuf.Reflection.SourceCodeInfo");
            feature.AddKnownType("Google.Protobuf.Reflection.SourceCodeInfo+Types+Location,Google.Protobuf", "Google.Protobuf.Reflection.Google.Protobuf.Reflection.Google.Protobuf.Reflection.SourceCodeInfo.Types.Location");
            feature.AddKnownType("Google.Protobuf.Reflection.GeneratedCodeInfo,Google.Protobuf", "Google.Protobuf.Reflection.GeneratedCodeInfo");
            feature.AddKnownType("Google.Protobuf.Reflection.GeneratedCodeInfo+Types+Annotation,Google.Protobuf", "Google.Protobuf.Reflection.Google.Protobuf.Reflection.Google.Protobuf.Reflection.GeneratedCodeInfo.Types.Annotation");
            feature.AddKnownType("Google.Protobuf.Reflection.DescriptorBase,Google.Protobuf", "Google.Protobuf.Reflection.DescriptorBase");
            feature.AddKnownType("Google.Protobuf.Reflection.DescriptorDeclaration,Google.Protobuf", "Google.Protobuf.Reflection.DescriptorDeclaration");
            feature.AddKnownType("Google.Protobuf.Reflection.DescriptorPool,Google.Protobuf", "Google.Protobuf.Reflection.DescriptorPool");
            feature.AddKnownType("Google.Protobuf.Reflection.DescriptorValidationException,Google.Protobuf", "Google.Protobuf.Reflection.DescriptorValidationException");
            feature.AddKnownType("Google.Protobuf.Reflection.EnumDescriptor,Google.Protobuf", "Google.Protobuf.Reflection.EnumDescriptor");
            feature.AddKnownType("Google.Protobuf.Reflection.EnumValueDescriptor,Google.Protobuf", "Google.Protobuf.Reflection.EnumValueDescriptor");
            feature.AddKnownType("Google.Protobuf.Reflection.ExtensionAccessor,Google.Protobuf", "Google.Protobuf.Reflection.ExtensionAccessor");
            feature.AddKnownType("Google.Protobuf.Reflection.ExtensionCollection,Google.Protobuf", "Google.Protobuf.Reflection.ExtensionCollection");
            feature.AddKnownType("Google.Protobuf.Reflection.FieldAccessorBase,Google.Protobuf", "Google.Protobuf.Reflection.FieldAccessorBase");
            feature.AddKnownType("Google.Protobuf.Reflection.FieldDescriptor,Google.Protobuf", "Google.Protobuf.Reflection.FieldDescriptor");
            feature.AddKnownType("Google.Protobuf.Reflection.FieldType,Google.Protobuf", "Google.Protobuf.Reflection.FieldType");
            feature.AddKnownType("Google.Protobuf.Reflection.Syntax,Google.Protobuf", "Google.Protobuf.Reflection.Syntax");
            feature.AddKnownType("Google.Protobuf.Reflection.FileDescriptor,Google.Protobuf", "Google.Protobuf.Reflection.FileDescriptor");
            feature.AddKnownType("Google.Protobuf.Reflection.GeneratedClrTypeInfo,Google.Protobuf", "Google.Protobuf.Reflection.GeneratedClrTypeInfo");
            feature.AddKnownType("Google.Protobuf.Reflection.IDescriptor,Google.Protobuf", "Google.Protobuf.Reflection.IDescriptor");
            feature.AddKnownType("Google.Protobuf.Reflection.IFieldAccessor,Google.Protobuf", "Google.Protobuf.Reflection.IFieldAccessor");
            feature.AddKnownType("Google.Protobuf.Reflection.MapFieldAccessor,Google.Protobuf", "Google.Protobuf.Reflection.MapFieldAccessor");
            feature.AddKnownType("Google.Protobuf.Reflection.MessageDescriptor,Google.Protobuf", "Google.Protobuf.Reflection.MessageDescriptor");
            feature.AddKnownType("Google.Protobuf.Reflection.MessageDescriptor+FieldCollection,Google.Protobuf", "Google.Protobuf.Reflection.Google.Protobuf.Reflection.MessageDescriptor.FieldCollection");
            feature.AddKnownType("Google.Protobuf.Reflection.MethodDescriptor,Google.Protobuf", "Google.Protobuf.Reflection.MethodDescriptor");
            feature.AddKnownType("Google.Protobuf.Reflection.OneofAccessor,Google.Protobuf", "Google.Protobuf.Reflection.OneofAccessor");
            feature.AddKnownType("Google.Protobuf.Reflection.OneofDescriptor,Google.Protobuf", "Google.Protobuf.Reflection.OneofDescriptor");
            feature.AddKnownType("Google.Protobuf.Reflection.OriginalNameAttribute,Google.Protobuf", "Google.Protobuf.Reflection.OriginalNameAttribute");
            feature.AddKnownType("Google.Protobuf.Reflection.PackageDescriptor,Google.Protobuf", "Google.Protobuf.Reflection.PackageDescriptor");
            feature.AddKnownType("Google.Protobuf.Reflection.ReflectionUtil+IReflectionHelper,Google.Protobuf", "Google.Protobuf.Reflection.IReflectionHelper");
            feature.AddKnownType("Google.Protobuf.Reflection.ReflectionUtil+IExtensionReflectionHelper,Google.Protobuf", "Google.Protobuf.Reflection.IExtensionReflectionHelper");
            feature.AddKnownType("Google.Protobuf.Reflection.ReflectionUtil+IExtensionSetReflector,Google.Protobuf", "Google.Protobuf.Reflection.IExtensionSetReflector");
            feature.AddKnownType("Google.Protobuf.Reflection.ReflectionUtil+ReflectionHelper`2,Google.Protobuf", "Google.Protobuf.Reflection.ReflectionHelper`2'2");
            feature.AddKnownType("Google.Protobuf.Reflection.ReflectionUtil+ExtensionReflectionHelper`2,Google.Protobuf", "Google.Protobuf.Reflection.ExtensionReflectionHelper`2'2");
            feature.AddKnownType("Google.Protobuf.Reflection.ReflectionUtil+ExtensionSetReflector`1,Google.Protobuf", "Google.Protobuf.Reflection.ExtensionSetReflector`1'1");
            feature.AddKnownType("Google.Protobuf.Reflection.ReflectionUtil+SampleEnum,Google.Protobuf", "Google.Protobuf.Reflection.Google.Protobuf.Reflection.ReflectionUtil.SampleEnum");
            feature.AddKnownType("Google.Protobuf.Reflection.RepeatedFieldAccessor,Google.Protobuf", "Google.Protobuf.Reflection.RepeatedFieldAccessor");
            feature.AddKnownType("Google.Protobuf.Reflection.ServiceDescriptor,Google.Protobuf", "Google.Protobuf.Reflection.ServiceDescriptor");
            feature.AddKnownType("Google.Protobuf.Reflection.SingleFieldAccessor,Google.Protobuf", "Google.Protobuf.Reflection.SingleFieldAccessor");
            feature.AddKnownType("Google.Protobuf.Reflection.TypeRegistry,Google.Protobuf", "Google.Protobuf.Reflection.TypeRegistry");
            feature.AddKnownType("Google.Protobuf.Reflection.TypeRegistry+Builder,Google.Protobuf", "Google.Protobuf.Reflection.Builder");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.Any,Google.Protobuf", "Google.Protobuf.WellKnownTypes.Any");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.Api,Google.Protobuf", "Google.Protobuf.WellKnownTypes.Api");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.Method,Google.Protobuf", "Google.Protobuf.WellKnownTypes.Method");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.Mixin,Google.Protobuf", "Google.Protobuf.WellKnownTypes.Mixin");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.Duration,Google.Protobuf", "Google.Protobuf.WellKnownTypes.Duration");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.Empty,Google.Protobuf", "Google.Protobuf.WellKnownTypes.Empty");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.FieldMask,Google.Protobuf", "Google.Protobuf.WellKnownTypes.FieldMask");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.FieldMask+MergeOptions,Google.Protobuf", "Google.Protobuf.WellKnownTypes.Google.Protobuf.WellKnownTypes.FieldMask.MergeOptions");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.SourceContext,Google.Protobuf", "Google.Protobuf.WellKnownTypes.SourceContext");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.NullValue,Google.Protobuf", "Google.Protobuf.WellKnownTypes.NullValue");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.Struct,Google.Protobuf", "Google.Protobuf.WellKnownTypes.Struct");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.Value,Google.Protobuf", "Google.Protobuf.WellKnownTypes.Value");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.Value+KindOneofCase,Google.Protobuf", "Google.Protobuf.WellKnownTypes.Google.Protobuf.WellKnownTypes.Value.KindOneofCase");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.ListValue,Google.Protobuf", "Google.Protobuf.WellKnownTypes.ListValue");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.Timestamp,Google.Protobuf", "Google.Protobuf.WellKnownTypes.Timestamp");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.Syntax,Google.Protobuf", "Google.Protobuf.WellKnownTypes.Syntax");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.Type,Google.Protobuf", "Google.Protobuf.WellKnownTypes.Type");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.Field,Google.Protobuf", "Google.Protobuf.WellKnownTypes.Field");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.Field+Types+Kind,Google.Protobuf", "Google.Protobuf.WellKnownTypes.Google.Protobuf.WellKnownTypes.Google.Protobuf.WellKnownTypes.Field.Types.Kind");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.Field+Types+Cardinality,Google.Protobuf", "Google.Protobuf.WellKnownTypes.Google.Protobuf.WellKnownTypes.Google.Protobuf.WellKnownTypes.Field.Types.Cardinality");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.Enum,Google.Protobuf", "Google.Protobuf.WellKnownTypes.Enum");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.EnumValue,Google.Protobuf", "Google.Protobuf.WellKnownTypes.EnumValue");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.Option,Google.Protobuf", "Google.Protobuf.WellKnownTypes.Option");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.DoubleValue,Google.Protobuf", "Google.Protobuf.WellKnownTypes.DoubleValue");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.FloatValue,Google.Protobuf", "Google.Protobuf.WellKnownTypes.FloatValue");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.Int64Value,Google.Protobuf", "Google.Protobuf.WellKnownTypes.Int64Value");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.UInt64Value,Google.Protobuf", "Google.Protobuf.WellKnownTypes.UInt64Value");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.Int32Value,Google.Protobuf", "Google.Protobuf.WellKnownTypes.Int32Value");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.UInt32Value,Google.Protobuf", "Google.Protobuf.WellKnownTypes.UInt32Value");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.BoolValue,Google.Protobuf", "Google.Protobuf.WellKnownTypes.BoolValue");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.StringValue,Google.Protobuf", "Google.Protobuf.WellKnownTypes.StringValue");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.BytesValue,Google.Protobuf", "Google.Protobuf.WellKnownTypes.BytesValue");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Google.Protobuf", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.IsByRefLikeAttribute", "IsByRefLikeAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Microsoft.Win32.Registry", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("Microsoft.Win32.RegistryHive,Microsoft.Win32.Registry", "Microsoft.Win32.RegistryHive");
            feature.AddKnownType("Microsoft.Win32.RegistryKey,Microsoft.Win32.Registry", "Microsoft.Win32.RegistryKey");
            feature.AddKnownType("Microsoft.Win32.RegistryKeyPermissionCheck,Microsoft.Win32.Registry", "Microsoft.Win32.RegistryKeyPermissionCheck");
            feature.AddKnownType("Microsoft.Win32.RegistryOptions,Microsoft.Win32.Registry", "Microsoft.Win32.RegistryOptions");
            feature.AddKnownType("Microsoft.Win32.RegistryValueKind,Microsoft.Win32.Registry", "Microsoft.Win32.RegistryValueKind");
            feature.AddKnownType("Microsoft.Win32.RegistryValueOptions,Microsoft.Win32.Registry", "Microsoft.Win32.RegistryValueOptions");
            feature.AddKnownType("Microsoft.Win32.RegistryView,Microsoft.Win32.Registry", "Microsoft.Win32.RegistryView");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeRegistryHandle,Microsoft.Win32.Registry", "Microsoft.Win32.SafeHandles.SafeRegistryHandle");
            feature.AddKnownType("System.Diagnostics.CodeAnalysis.AllowNullAttribute", "AllowNullAttribute");
            feature.AddKnownType("System.Diagnostics.CodeAnalysis.DisallowNullAttribute", "DisallowNullAttribute");
            feature.AddKnownType("System.Diagnostics.CodeAnalysis.MaybeNullAttribute", "MaybeNullAttribute");
            feature.AddKnownType("System.Diagnostics.CodeAnalysis.NotNullAttribute", "NotNullAttribute");
            feature.AddKnownType("System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute", "MaybeNullWhenAttribute");
            feature.AddKnownType("System.Diagnostics.CodeAnalysis.NotNullWhenAttribute", "NotNullWhenAttribute");
            feature.AddKnownType("System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute", "NotNullIfNotNullAttribute");
            feature.AddKnownType("System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute", "DoesNotReturnAttribute");
            feature.AddKnownType("System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute", "DoesNotReturnIfAttribute");
            feature.AddKnownType("System.Diagnostics.CodeAnalysis.MemberNotNullAttribute", "MemberNotNullAttribute");
            feature.AddKnownType("System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute", "MemberNotNullWhenAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.Versioning.OSPlatformAttribute", "OSPlatformAttribute");
            feature.AddKnownType("System.Runtime.Versioning.TargetPlatformAttribute", "TargetPlatformAttribute");
            feature.AddKnownType("System.Runtime.Versioning.SupportedOSPlatformAttribute", "SupportedOSPlatformAttribute");
            feature.AddKnownType("System.Runtime.Versioning.UnsupportedOSPlatformAttribute", "UnsupportedOSPlatformAttribute");
            feature.AddKnownType("System.Security.AccessControl.RegistryAccessRule", "RegistryAccessRule");
            feature.AddKnownType("System.Security.AccessControl.RegistryAuditRule", "RegistryAuditRule");
            feature.AddKnownType("System.Security.AccessControl.RegistryRights", "RegistryRights");
            feature.AddKnownType("System.Security.AccessControl.RegistrySecurity", "RegistrySecurity");
            feature.AddKnownType("MongoDB.Bson.BsonException,MongoDB.Bson", "MongoDB.Bson.BsonException");
            feature.AddKnownType("MongoDB.Bson.BsonInternalException,MongoDB.Bson", "MongoDB.Bson.BsonInternalException");
            feature.AddKnownType("MongoDB.Bson.BsonSerializationException,MongoDB.Bson", "MongoDB.Bson.BsonSerializationException");
            feature.AddKnownType("MongoDB.Bson.DuplicateBsonMemberMapAttributeException,MongoDB.Bson", "MongoDB.Bson.DuplicateBsonMemberMapAttributeException");
            feature.AddKnownType("MongoDB.Bson.TruncationException,MongoDB.Bson", "MongoDB.Bson.TruncationException");
            feature.AddKnownType("MongoDB.Bson.BsonArray,MongoDB.Bson", "MongoDB.Bson.BsonArray");
            feature.AddKnownType("MongoDB.Bson.BsonBinaryData,MongoDB.Bson", "MongoDB.Bson.BsonBinaryData");
            feature.AddKnownType("MongoDB.Bson.BsonBinarySubType,MongoDB.Bson", "MongoDB.Bson.BsonBinarySubType");
            feature.AddKnownType("MongoDB.Bson.BsonBoolean,MongoDB.Bson", "MongoDB.Bson.BsonBoolean");
            feature.AddKnownType("MongoDB.Bson.BsonDateTime,MongoDB.Bson", "MongoDB.Bson.BsonDateTime");
            feature.AddKnownType("MongoDB.Bson.BsonDecimal128,MongoDB.Bson", "MongoDB.Bson.BsonDecimal128");
            feature.AddKnownType("MongoDB.Bson.BsonDocument,MongoDB.Bson", "MongoDB.Bson.BsonDocument");
            feature.AddKnownType("MongoDB.Bson.BsonDocumentWrapper,MongoDB.Bson", "MongoDB.Bson.BsonDocumentWrapper");
            feature.AddKnownType("MongoDB.Bson.BsonDouble,MongoDB.Bson", "MongoDB.Bson.BsonDouble");
            feature.AddKnownType("MongoDB.Bson.BsonElement,MongoDB.Bson", "MongoDB.Bson.BsonElement");
            feature.AddKnownType("MongoDB.Bson.BsonInt32,MongoDB.Bson", "MongoDB.Bson.BsonInt32");
            feature.AddKnownType("MongoDB.Bson.BsonInt64,MongoDB.Bson", "MongoDB.Bson.BsonInt64");
            feature.AddKnownType("MongoDB.Bson.BsonJavaScript,MongoDB.Bson", "MongoDB.Bson.BsonJavaScript");
            feature.AddKnownType("MongoDB.Bson.BsonJavaScriptWithScope,MongoDB.Bson", "MongoDB.Bson.BsonJavaScriptWithScope");
            feature.AddKnownType("MongoDB.Bson.BsonMaxKey,MongoDB.Bson", "MongoDB.Bson.BsonMaxKey");
            feature.AddKnownType("MongoDB.Bson.BsonMinKey,MongoDB.Bson", "MongoDB.Bson.BsonMinKey");
            feature.AddKnownType("MongoDB.Bson.BsonNull,MongoDB.Bson", "MongoDB.Bson.BsonNull");
            feature.AddKnownType("MongoDB.Bson.BsonObjectId,MongoDB.Bson", "MongoDB.Bson.BsonObjectId");
            feature.AddKnownType("MongoDB.Bson.BsonRegularExpression,MongoDB.Bson", "MongoDB.Bson.BsonRegularExpression");
            feature.AddKnownType("MongoDB.Bson.BsonString,MongoDB.Bson", "MongoDB.Bson.BsonString");
            feature.AddKnownType("MongoDB.Bson.BsonSymbol,MongoDB.Bson", "MongoDB.Bson.BsonSymbol");
            feature.AddKnownType("MongoDB.Bson.BsonTimestamp,MongoDB.Bson", "MongoDB.Bson.BsonTimestamp");
            feature.AddKnownType("MongoDB.Bson.BsonType,MongoDB.Bson", "MongoDB.Bson.BsonType");
            feature.AddKnownType("MongoDB.Bson.BsonTypeMapper+Conversion,MongoDB.Bson", "MongoDB.Bson.Conversion");
            feature.AddKnownType("MongoDB.Bson.BsonTypeMapper+Mapping,MongoDB.Bson", "MongoDB.Bson.Mapping");
            feature.AddKnownType("MongoDB.Bson.DuplicateNameHandling,MongoDB.Bson", "MongoDB.Bson.DuplicateNameHandling");
            feature.AddKnownType("MongoDB.Bson.BsonTypeMapperOptions,MongoDB.Bson", "MongoDB.Bson.BsonTypeMapperOptions");
            feature.AddKnownType("MongoDB.Bson.BsonUndefined,MongoDB.Bson", "MongoDB.Bson.BsonUndefined");
            feature.AddKnownType("MongoDB.Bson.BsonValue,MongoDB.Bson", "MongoDB.Bson.BsonValue");
            feature.AddKnownType("MongoDB.Bson.Decimal128,MongoDB.Bson", "MongoDB.Bson.Decimal128");
            feature.AddKnownType("MongoDB.Bson.Decimal128+Decimal128Comparer,MongoDB.Bson", "MongoDB.Bson.Decimal128Comparer");
            feature.AddKnownType("MongoDB.Bson.Decimal128+Decimal128Comparer+Decimal128Type,MongoDB.Bson", "MongoDB.Bson.Decimal128Type");
            feature.AddKnownType("MongoDB.Bson.Decimal128+Decimal128Comparer+NumberClass,MongoDB.Bson", "MongoDB.Bson.NumberClass");
            feature.AddKnownType("MongoDB.Bson.GuidRepresentation,MongoDB.Bson", "MongoDB.Bson.GuidRepresentation");
            feature.AddKnownType("MongoDB.Bson.GuidRepresentationMode,MongoDB.Bson", "MongoDB.Bson.GuidRepresentationMode");
            feature.AddKnownType("MongoDB.Bson.IConvertibleToBsonDocument,MongoDB.Bson", "MongoDB.Bson.IConvertibleToBsonDocument");
            feature.AddKnownType("MongoDB.Bson.ICustomBsonTypeMapper,MongoDB.Bson", "MongoDB.Bson.ICustomBsonTypeMapper");
            feature.AddKnownType("MongoDB.Bson.LazyBsonArray,MongoDB.Bson", "MongoDB.Bson.LazyBsonArray");
            feature.AddKnownType("MongoDB.Bson.LazyBsonDocument,MongoDB.Bson", "MongoDB.Bson.LazyBsonDocument");
            feature.AddKnownType("MongoDB.Bson.MaterializedOnDemandBsonArray,MongoDB.Bson", "MongoDB.Bson.MaterializedOnDemandBsonArray");
            feature.AddKnownType("MongoDB.Bson.MaterializedOnDemandBsonArray+MaterializedOnDemandBsonArraySerializer,MongoDB.Bson", "MongoDB.Bson.MaterializedOnDemandBsonArraySerializer");
            feature.AddKnownType("MongoDB.Bson.MaterializedOnDemandBsonDocument,MongoDB.Bson", "MongoDB.Bson.MaterializedOnDemandBsonDocument");
            feature.AddKnownType("MongoDB.Bson.MaterializedOnDemandBsonDocumentSerializer,MongoDB.Bson", "MongoDB.Bson.MaterializedOnDemandBsonDocumentSerializer");
            feature.AddKnownType("MongoDB.Bson.ObjectId,MongoDB.Bson", "MongoDB.Bson.ObjectId");
            feature.AddKnownType("MongoDB.Bson.RawBsonArray,MongoDB.Bson", "MongoDB.Bson.RawBsonArray");
            feature.AddKnownType("MongoDB.Bson.RawBsonDocument,MongoDB.Bson", "MongoDB.Bson.RawBsonDocument");
            feature.AddKnownType("MongoDB.Bson.UInt128,MongoDB.Bson", "MongoDB.Bson.UInt128");
            feature.AddKnownType("MongoDB.Bson.PreserveAttribute,MongoDB.Bson", "MongoDB.Bson.PreserveAttribute");
            feature.AddKnownType("MongoDB.Bson.IO.IArrayElementNameAccelerator,MongoDB.Bson", "MongoDB.Bson.IO.IArrayElementNameAccelerator");
            feature.AddKnownType("MongoDB.Bson.IO.ArrayElementNameAccelerator,MongoDB.Bson", "MongoDB.Bson.IO.ArrayElementNameAccelerator");
            feature.AddKnownType("MongoDB.Bson.IO.BsonBinaryReader,MongoDB.Bson", "MongoDB.Bson.IO.BsonBinaryReader");
            feature.AddKnownType("MongoDB.Bson.IO.BsonBinaryReaderBookmark,MongoDB.Bson", "MongoDB.Bson.IO.BsonBinaryReaderBookmark");
            feature.AddKnownType("MongoDB.Bson.IO.BsonBinaryReaderContext,MongoDB.Bson", "MongoDB.Bson.IO.BsonBinaryReaderContext");
            feature.AddKnownType("MongoDB.Bson.IO.BsonBinaryReaderSettings,MongoDB.Bson", "MongoDB.Bson.IO.BsonBinaryReaderSettings");
            feature.AddKnownType("MongoDB.Bson.IO.BsonBinaryWriter,MongoDB.Bson", "MongoDB.Bson.IO.BsonBinaryWriter");
            feature.AddKnownType("MongoDB.Bson.IO.BsonBinaryWriterContext,MongoDB.Bson", "MongoDB.Bson.IO.BsonBinaryWriterContext");
            feature.AddKnownType("MongoDB.Bson.IO.BsonBinaryWriterSettings,MongoDB.Bson", "MongoDB.Bson.IO.BsonBinaryWriterSettings");
            feature.AddKnownType("MongoDB.Bson.IO.BsonChunkPool,MongoDB.Bson", "MongoDB.Bson.IO.BsonChunkPool");
            feature.AddKnownType("MongoDB.Bson.IO.BsonChunkPool+DisposableChunk,MongoDB.Bson", "MongoDB.Bson.IO.DisposableChunk");
            feature.AddKnownType("MongoDB.Bson.IO.BsonChunkPool+ReferenceCountedChunk,MongoDB.Bson", "MongoDB.Bson.IO.ReferenceCountedChunk");
            feature.AddKnownType("MongoDB.Bson.IO.BsonDocumentReader,MongoDB.Bson", "MongoDB.Bson.IO.BsonDocumentReader");
            feature.AddKnownType("MongoDB.Bson.IO.BsonDocumentReaderBookmark,MongoDB.Bson", "MongoDB.Bson.IO.BsonDocumentReaderBookmark");
            feature.AddKnownType("MongoDB.Bson.IO.BsonDocumentReaderContext,MongoDB.Bson", "MongoDB.Bson.IO.BsonDocumentReaderContext");
            feature.AddKnownType("MongoDB.Bson.IO.BsonDocumentReaderSettings,MongoDB.Bson", "MongoDB.Bson.IO.BsonDocumentReaderSettings");
            feature.AddKnownType("MongoDB.Bson.IO.BsonDocumentWriter,MongoDB.Bson", "MongoDB.Bson.IO.BsonDocumentWriter");
            feature.AddKnownType("MongoDB.Bson.IO.BsonDocumentWriterContext,MongoDB.Bson", "MongoDB.Bson.IO.BsonDocumentWriterContext");
            feature.AddKnownType("MongoDB.Bson.IO.BsonDocumentWriterSettings,MongoDB.Bson", "MongoDB.Bson.IO.BsonDocumentWriterSettings");
            feature.AddKnownType("MongoDB.Bson.IO.BsonReader,MongoDB.Bson", "MongoDB.Bson.IO.BsonReader");
            feature.AddKnownType("MongoDB.Bson.IO.BsonReaderBookmark,MongoDB.Bson", "MongoDB.Bson.IO.BsonReaderBookmark");
            feature.AddKnownType("MongoDB.Bson.IO.BsonReaderSettings,MongoDB.Bson", "MongoDB.Bson.IO.BsonReaderSettings");
            feature.AddKnownType("MongoDB.Bson.IO.BsonReaderState,MongoDB.Bson", "MongoDB.Bson.IO.BsonReaderState");
            feature.AddKnownType("MongoDB.Bson.IO.BsonStream,MongoDB.Bson", "MongoDB.Bson.IO.BsonStream");
            feature.AddKnownType("MongoDB.Bson.IO.BsonStreamAdapter,MongoDB.Bson", "MongoDB.Bson.IO.BsonStreamAdapter");
            feature.AddKnownType("MongoDB.Bson.IO.BsonTrie`1,MongoDB.Bson", "MongoDB.Bson.IO.BsonTrie`1'1");
            feature.AddKnownType("MongoDB.Bson.IO.BsonTrieNode`1,MongoDB.Bson", "MongoDB.Bson.IO.BsonTrieNode`1'1");
            feature.AddKnownType("MongoDB.Bson.IO.BsonWriter,MongoDB.Bson", "MongoDB.Bson.IO.BsonWriter");
            feature.AddKnownType("MongoDB.Bson.IO.BsonWriterSettings,MongoDB.Bson", "MongoDB.Bson.IO.BsonWriterSettings");
            feature.AddKnownType("MongoDB.Bson.IO.BsonWriterState,MongoDB.Bson", "MongoDB.Bson.IO.BsonWriterState");
            feature.AddKnownType("MongoDB.Bson.IO.ByteArrayBuffer,MongoDB.Bson", "MongoDB.Bson.IO.ByteArrayBuffer");
            feature.AddKnownType("MongoDB.Bson.IO.ByteArrayChunk,MongoDB.Bson", "MongoDB.Bson.IO.ByteArrayChunk");
            feature.AddKnownType("MongoDB.Bson.IO.ByteBufferSlice,MongoDB.Bson", "MongoDB.Bson.IO.ByteBufferSlice");
            feature.AddKnownType("MongoDB.Bson.IO.ByteBufferStream,MongoDB.Bson", "MongoDB.Bson.IO.ByteBufferStream");
            feature.AddKnownType("MongoDB.Bson.IO.ContextType,MongoDB.Bson", "MongoDB.Bson.IO.ContextType");
            feature.AddKnownType("MongoDB.Bson.IO.ElementAppendingBsonWriter,MongoDB.Bson", "MongoDB.Bson.IO.ElementAppendingBsonWriter");
            feature.AddKnownType("MongoDB.Bson.IO.EncodingHelper+DisposableSegment,MongoDB.Bson", "MongoDB.Bson.IO.MongoDB.Bson.IO.EncodingHelper.DisposableSegment");
            feature.AddKnownType("MongoDB.Bson.IO.IBsonChunk,MongoDB.Bson", "MongoDB.Bson.IO.IBsonChunk");
            feature.AddKnownType("MongoDB.Bson.IO.IBsonChunkSource,MongoDB.Bson", "MongoDB.Bson.IO.IBsonChunkSource");
            feature.AddKnownType("MongoDB.Bson.IO.IBsonReader,MongoDB.Bson", "MongoDB.Bson.IO.IBsonReader");
            feature.AddKnownType("MongoDB.Bson.IO.IBsonWriter,MongoDB.Bson", "MongoDB.Bson.IO.IBsonWriter");
            feature.AddKnownType("MongoDB.Bson.IO.IByteBuffer,MongoDB.Bson", "MongoDB.Bson.IO.IByteBuffer");
            feature.AddKnownType("MongoDB.Bson.IO.IElementNameValidator,MongoDB.Bson", "MongoDB.Bson.IO.IElementNameValidator");
            feature.AddKnownType("MongoDB.Bson.IO.INameDecoder,MongoDB.Bson", "MongoDB.Bson.IO.INameDecoder");
            feature.AddKnownType("MongoDB.Bson.IO.InputBufferChunkSource,MongoDB.Bson", "MongoDB.Bson.IO.InputBufferChunkSource");
            feature.AddKnownType("MongoDB.Bson.IO.IStreamEfficientCopyTo,MongoDB.Bson", "MongoDB.Bson.IO.IStreamEfficientCopyTo");
            feature.AddKnownType("MongoDB.Bson.IO.JsonBuffer,MongoDB.Bson", "MongoDB.Bson.IO.JsonBuffer");
            feature.AddKnownType("MongoDB.Bson.IO.JsonOutputMode,MongoDB.Bson", "MongoDB.Bson.IO.JsonOutputMode");
            feature.AddKnownType("MongoDB.Bson.IO.JsonReader,MongoDB.Bson", "MongoDB.Bson.IO.JsonReader");
            feature.AddKnownType("MongoDB.Bson.IO.JsonReaderBookmark,MongoDB.Bson", "MongoDB.Bson.IO.JsonReaderBookmark");
            feature.AddKnownType("MongoDB.Bson.IO.JsonReaderContext,MongoDB.Bson", "MongoDB.Bson.IO.JsonReaderContext");
            feature.AddKnownType("MongoDB.Bson.IO.JsonReaderSettings,MongoDB.Bson", "MongoDB.Bson.IO.JsonReaderSettings");
            feature.AddKnownType("MongoDB.Bson.IO.JsonScanner+NumberState,MongoDB.Bson", "MongoDB.Bson.IO.NumberState");
            feature.AddKnownType("MongoDB.Bson.IO.JsonScanner+RegularExpressionState,MongoDB.Bson", "MongoDB.Bson.IO.RegularExpressionState");
            feature.AddKnownType("MongoDB.Bson.IO.JsonTokenType,MongoDB.Bson", "MongoDB.Bson.IO.JsonTokenType");
            feature.AddKnownType("MongoDB.Bson.IO.JsonToken,MongoDB.Bson", "MongoDB.Bson.IO.JsonToken");
            feature.AddKnownType("MongoDB.Bson.IO.DateTimeJsonToken,MongoDB.Bson", "MongoDB.Bson.IO.DateTimeJsonToken");
            feature.AddKnownType("MongoDB.Bson.IO.DoubleJsonToken,MongoDB.Bson", "MongoDB.Bson.IO.DoubleJsonToken");
            feature.AddKnownType("MongoDB.Bson.IO.Int32JsonToken,MongoDB.Bson", "MongoDB.Bson.IO.Int32JsonToken");
            feature.AddKnownType("MongoDB.Bson.IO.Int64JsonToken,MongoDB.Bson", "MongoDB.Bson.IO.Int64JsonToken");
            feature.AddKnownType("MongoDB.Bson.IO.ObjectIdJsonToken,MongoDB.Bson", "MongoDB.Bson.IO.ObjectIdJsonToken");
            feature.AddKnownType("MongoDB.Bson.IO.RegularExpressionJsonToken,MongoDB.Bson", "MongoDB.Bson.IO.RegularExpressionJsonToken");
            feature.AddKnownType("MongoDB.Bson.IO.StringJsonToken,MongoDB.Bson", "MongoDB.Bson.IO.StringJsonToken");
            feature.AddKnownType("MongoDB.Bson.IO.JsonWriter,MongoDB.Bson", "MongoDB.Bson.IO.JsonWriter");
            feature.AddKnownType("MongoDB.Bson.IO.JsonWriterContext,MongoDB.Bson", "MongoDB.Bson.IO.JsonWriterContext");
            feature.AddKnownType("MongoDB.Bson.IO.JsonWriterSettings,MongoDB.Bson", "MongoDB.Bson.IO.JsonWriterSettings");
            feature.AddKnownType("MongoDB.Bson.IO.MultiChunkBuffer,MongoDB.Bson", "MongoDB.Bson.IO.MultiChunkBuffer");
            feature.AddKnownType("MongoDB.Bson.IO.NoOpElementNameValidator,MongoDB.Bson", "MongoDB.Bson.IO.NoOpElementNameValidator");
            feature.AddKnownType("MongoDB.Bson.IO.OutputBufferChunkSource,MongoDB.Bson", "MongoDB.Bson.IO.OutputBufferChunkSource");
            feature.AddKnownType("MongoDB.Bson.IO.SingleChunkBuffer,MongoDB.Bson", "MongoDB.Bson.IO.SingleChunkBuffer");
            feature.AddKnownType("MongoDB.Bson.IO.ThreadStaticBuffer+RentedBuffer,MongoDB.Bson", "MongoDB.Bson.IO.MongoDB.Bson.IO.ThreadStaticBuffer.RentedBuffer");
            feature.AddKnownType("MongoDB.Bson.IO.TrieNameDecoder`1,MongoDB.Bson", "MongoDB.Bson.IO.TrieNameDecoder`1'1");
            feature.AddKnownType("MongoDB.Bson.IO.Utf8NameDecoder,MongoDB.Bson", "MongoDB.Bson.IO.Utf8NameDecoder");
            feature.AddKnownType("MongoDB.Bson.IO.WrappingBsonWriter,MongoDB.Bson", "MongoDB.Bson.IO.WrappingBsonWriter");
            feature.AddKnownType("MongoDB.Bson.Serialization.AttributedSerializationProvider,MongoDB.Bson", "MongoDB.Bson.Serialization.AttributedSerializationProvider");
            feature.AddKnownType("MongoDB.Bson.Serialization.BsonMemberMapAttributeUsageAttribute,MongoDB.Bson", "MongoDB.Bson.Serialization.BsonMemberMapAttributeUsageAttribute");
            feature.AddKnownType("MongoDB.Bson.Serialization.IBsonClassMapAttribute,MongoDB.Bson", "MongoDB.Bson.Serialization.IBsonClassMapAttribute");
            feature.AddKnownType("MongoDB.Bson.Serialization.IBsonCreatorMapAttribute,MongoDB.Bson", "MongoDB.Bson.Serialization.IBsonCreatorMapAttribute");
            feature.AddKnownType("MongoDB.Bson.Serialization.IBsonMemberMapAttribute,MongoDB.Bson", "MongoDB.Bson.Serialization.IBsonMemberMapAttribute");
            feature.AddKnownType("MongoDB.Bson.Serialization.IBsonPostProcessingAttribute,MongoDB.Bson", "MongoDB.Bson.Serialization.IBsonPostProcessingAttribute");
            feature.AddKnownType("MongoDB.Bson.Serialization.BsonClassMap,MongoDB.Bson", "MongoDB.Bson.Serialization.BsonClassMap");
            feature.AddKnownType("MongoDB.Bson.Serialization.BsonClassMap`1,MongoDB.Bson", "MongoDB.Bson.Serialization.BsonClassMap`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.BsonClassMapSerializationProvider,MongoDB.Bson", "MongoDB.Bson.Serialization.BsonClassMapSerializationProvider");
            feature.AddKnownType("MongoDB.Bson.Serialization.BsonCreatorMap,MongoDB.Bson", "MongoDB.Bson.Serialization.BsonCreatorMap");
            feature.AddKnownType("MongoDB.Bson.Serialization.BsonDeserializationArgs,MongoDB.Bson", "MongoDB.Bson.Serialization.BsonDeserializationArgs");
            feature.AddKnownType("MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson", "MongoDB.Bson.Serialization.BsonDeserializationContext");
            feature.AddKnownType("MongoDB.Bson.Serialization.BsonDeserializationContext+Builder,MongoDB.Bson", "MongoDB.Bson.Serialization.MongoDB.Bson.Serialization.BsonDeserializationContext.Builder");
            feature.AddKnownType("MongoDB.Bson.Serialization.BsonDocumentBackedClass,MongoDB.Bson", "MongoDB.Bson.Serialization.BsonDocumentBackedClass");
            feature.AddKnownType("MongoDB.Bson.Serialization.BsonMemberMap,MongoDB.Bson", "MongoDB.Bson.Serialization.BsonMemberMap");
            feature.AddKnownType("MongoDB.Bson.Serialization.BsonObjectModelSerializationProvider,MongoDB.Bson", "MongoDB.Bson.Serialization.BsonObjectModelSerializationProvider");
            feature.AddKnownType("MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Bson", "MongoDB.Bson.Serialization.BsonSerializationArgs");
            feature.AddKnownType("MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson", "MongoDB.Bson.Serialization.BsonSerializationContext");
            feature.AddKnownType("MongoDB.Bson.Serialization.BsonSerializationContext+Builder,MongoDB.Bson", "MongoDB.Bson.Serialization.MongoDB.Bson.Serialization.BsonSerializationContext.Builder");
            feature.AddKnownType("MongoDB.Bson.Serialization.BsonSerializationInfo,MongoDB.Bson", "MongoDB.Bson.Serialization.BsonSerializationInfo");
            feature.AddKnownType("MongoDB.Bson.Serialization.BsonSerializationProviderBase,MongoDB.Bson", "MongoDB.Bson.Serialization.BsonSerializationProviderBase");
            feature.AddKnownType("MongoDB.Bson.Serialization.BsonSerializerRegistry,MongoDB.Bson", "MongoDB.Bson.Serialization.BsonSerializerRegistry");
            feature.AddKnownType("MongoDB.Bson.Serialization.CollectionsSerializationProvider,MongoDB.Bson", "MongoDB.Bson.Serialization.CollectionsSerializationProvider");
            feature.AddKnownType("MongoDB.Bson.Serialization.CreatorMapDelegateCompiler,MongoDB.Bson", "MongoDB.Bson.Serialization.CreatorMapDelegateCompiler");
            feature.AddKnownType("MongoDB.Bson.Serialization.DiscriminatedInterfaceSerializationProvider,MongoDB.Bson", "MongoDB.Bson.Serialization.DiscriminatedInterfaceSerializationProvider");
            feature.AddKnownType("MongoDB.Bson.Serialization.ExpressionVisitor,MongoDB.Bson", "MongoDB.Bson.Serialization.ExpressionVisitor");
            feature.AddKnownType("MongoDB.Bson.Serialization.IBsonArraySerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.IBsonArraySerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.IBsonDictionarySerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.IBsonDictionarySerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.IBsonDocumentSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.IBsonDocumentSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.IBsonIdProvider,MongoDB.Bson", "MongoDB.Bson.Serialization.IBsonIdProvider");
            feature.AddKnownType("MongoDB.Bson.Serialization.IBsonPolymorphicSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.IBsonPolymorphicSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.IBsonSerializationProvider,MongoDB.Bson", "MongoDB.Bson.Serialization.IBsonSerializationProvider");
            feature.AddKnownType("MongoDB.Bson.Serialization.IRegistryAwareBsonSerializationProvider,MongoDB.Bson", "MongoDB.Bson.Serialization.IRegistryAwareBsonSerializationProvider");
            feature.AddKnownType("MongoDB.Bson.Serialization.IBsonSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.IBsonSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.IBsonSerializer`1,MongoDB.Bson", "MongoDB.Bson.Serialization.IBsonSerializer`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.IBsonSerializerRegistry,MongoDB.Bson", "MongoDB.Bson.Serialization.IBsonSerializerRegistry");
            feature.AddKnownType("MongoDB.Bson.Serialization.IChildSerializerConfigurable,MongoDB.Bson", "MongoDB.Bson.Serialization.IChildSerializerConfigurable");
            feature.AddKnownType("MongoDB.Bson.Serialization.ICreatorSelector,MongoDB.Bson", "MongoDB.Bson.Serialization.ICreatorSelector");
            feature.AddKnownType("MongoDB.Bson.Serialization.IDictionaryRepresentationConfigurable,MongoDB.Bson", "MongoDB.Bson.Serialization.IDictionaryRepresentationConfigurable");
            feature.AddKnownType("MongoDB.Bson.Serialization.IDictionaryRepresentationConfigurable`1,MongoDB.Bson", "MongoDB.Bson.Serialization.IDictionaryRepresentationConfigurable`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.IIdGenerator,MongoDB.Bson", "MongoDB.Bson.Serialization.IIdGenerator");
            feature.AddKnownType("MongoDB.Bson.Serialization.IRepresentationConfigurable,MongoDB.Bson", "MongoDB.Bson.Serialization.IRepresentationConfigurable");
            feature.AddKnownType("MongoDB.Bson.Serialization.IRepresentationConfigurable`1,MongoDB.Bson", "MongoDB.Bson.Serialization.IRepresentationConfigurable`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.IRepresentationConverterConfigurable,MongoDB.Bson", "MongoDB.Bson.Serialization.IRepresentationConverterConfigurable");
            feature.AddKnownType("MongoDB.Bson.Serialization.IRepresentationConverterConfigurable`1,MongoDB.Bson", "MongoDB.Bson.Serialization.IRepresentationConverterConfigurable`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.MostArgumentsCreatorSelector,MongoDB.Bson", "MongoDB.Bson.Serialization.MostArgumentsCreatorSelector");
            feature.AddKnownType("MongoDB.Bson.Serialization.MostArgumentsCreatorSelector+MatchData,MongoDB.Bson", "MongoDB.Bson.Serialization.MatchData");
            feature.AddKnownType("MongoDB.Bson.Serialization.PrimitiveSerializationProvider,MongoDB.Bson", "MongoDB.Bson.Serialization.PrimitiveSerializationProvider");
            feature.AddKnownType("MongoDB.Bson.Serialization.BsonClassMapSerializer`1,MongoDB.Bson", "MongoDB.Bson.Serialization.BsonClassMapSerializer`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.BsonDocumentBackedClassSerializer`1,MongoDB.Bson", "MongoDB.Bson.Serialization.BsonDocumentBackedClassSerializer`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.TypeMappingSerializationProvider,MongoDB.Bson", "MongoDB.Bson.Serialization.TypeMappingSerializationProvider");
            feature.AddKnownType("MongoDB.Bson.Serialization.Attributes.BsonConstructorAttribute,MongoDB.Bson", "MongoDB.Bson.Serialization.Attributes.BsonConstructorAttribute");
            feature.AddKnownType("MongoDB.Bson.Serialization.Attributes.BsonDateTimeOptionsAttribute,MongoDB.Bson", "MongoDB.Bson.Serialization.Attributes.BsonDateTimeOptionsAttribute");
            feature.AddKnownType("MongoDB.Bson.Serialization.Attributes.BsonDefaultValueAttribute,MongoDB.Bson", "MongoDB.Bson.Serialization.Attributes.BsonDefaultValueAttribute");
            feature.AddKnownType("MongoDB.Bson.Serialization.Attributes.BsonDictionaryOptionsAttribute,MongoDB.Bson", "MongoDB.Bson.Serialization.Attributes.BsonDictionaryOptionsAttribute");
            feature.AddKnownType("MongoDB.Bson.Serialization.Attributes.BsonDiscriminatorAttribute,MongoDB.Bson", "MongoDB.Bson.Serialization.Attributes.BsonDiscriminatorAttribute");
            feature.AddKnownType("MongoDB.Bson.Serialization.Attributes.BsonElementAttribute,MongoDB.Bson", "MongoDB.Bson.Serialization.Attributes.BsonElementAttribute");
            feature.AddKnownType("MongoDB.Bson.Serialization.Attributes.BsonExtraElementsAttribute,MongoDB.Bson", "MongoDB.Bson.Serialization.Attributes.BsonExtraElementsAttribute");
            feature.AddKnownType("MongoDB.Bson.Serialization.Attributes.BsonFactoryMethodAttribute,MongoDB.Bson", "MongoDB.Bson.Serialization.Attributes.BsonFactoryMethodAttribute");
            feature.AddKnownType("MongoDB.Bson.Serialization.Attributes.BsonGuidRepresentationAttribute,MongoDB.Bson", "MongoDB.Bson.Serialization.Attributes.BsonGuidRepresentationAttribute");
            feature.AddKnownType("MongoDB.Bson.Serialization.Attributes.BsonIdAttribute,MongoDB.Bson", "MongoDB.Bson.Serialization.Attributes.BsonIdAttribute");
            feature.AddKnownType("MongoDB.Bson.Serialization.Attributes.BsonIgnoreAttribute,MongoDB.Bson", "MongoDB.Bson.Serialization.Attributes.BsonIgnoreAttribute");
            feature.AddKnownType("MongoDB.Bson.Serialization.Attributes.BsonIgnoreExtraElementsAttribute,MongoDB.Bson", "MongoDB.Bson.Serialization.Attributes.BsonIgnoreExtraElementsAttribute");
            feature.AddKnownType("MongoDB.Bson.Serialization.Attributes.BsonIgnoreIfDefaultAttribute,MongoDB.Bson", "MongoDB.Bson.Serialization.Attributes.BsonIgnoreIfDefaultAttribute");
            feature.AddKnownType("MongoDB.Bson.Serialization.Attributes.BsonIgnoreIfNullAttribute,MongoDB.Bson", "MongoDB.Bson.Serialization.Attributes.BsonIgnoreIfNullAttribute");
            feature.AddKnownType("MongoDB.Bson.Serialization.Attributes.BsonKnownTypesAttribute,MongoDB.Bson", "MongoDB.Bson.Serialization.Attributes.BsonKnownTypesAttribute");
            feature.AddKnownType("MongoDB.Bson.Serialization.Attributes.BsonNoIdAttribute,MongoDB.Bson", "MongoDB.Bson.Serialization.Attributes.BsonNoIdAttribute");
            feature.AddKnownType("MongoDB.Bson.Serialization.Attributes.BsonRepresentationAttribute,MongoDB.Bson", "MongoDB.Bson.Serialization.Attributes.BsonRepresentationAttribute");
            feature.AddKnownType("MongoDB.Bson.Serialization.Attributes.BsonRequiredAttribute,MongoDB.Bson", "MongoDB.Bson.Serialization.Attributes.BsonRequiredAttribute");
            feature.AddKnownType("MongoDB.Bson.Serialization.Attributes.BsonSerializationOptionsAttribute,MongoDB.Bson", "MongoDB.Bson.Serialization.Attributes.BsonSerializationOptionsAttribute");
            feature.AddKnownType("MongoDB.Bson.Serialization.Attributes.BsonSerializerAttribute,MongoDB.Bson", "MongoDB.Bson.Serialization.Attributes.BsonSerializerAttribute");
            feature.AddKnownType("MongoDB.Bson.Serialization.Attributes.BsonTimeSpanOptionsAttribute,MongoDB.Bson", "MongoDB.Bson.Serialization.Attributes.BsonTimeSpanOptionsAttribute");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.AttributeConventionPack,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.AttributeConventionPack");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.AttributeConventionPack+AttributeConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.AttributeConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.CamelCaseElementNameConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.CamelCaseElementNameConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.ConventionBase,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.ConventionBase");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.ConventionPack,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.ConventionPack");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.ConventionRegistry+ConventionPackContainer,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.ConventionPackContainer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.ConventionRunner,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.ConventionRunner");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.DefaultConventionPack,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.DefaultConventionPack");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.DelegateClassMapConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.DelegateClassMapConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.DelegateMemberMapConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.DelegateMemberMapConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.DelegatePostProcessingConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.DelegatePostProcessingConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.EnumRepresentationConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.EnumRepresentationConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.HierarchicalDiscriminatorConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.HierarchicalDiscriminatorConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.IClassMapConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.IClassMapConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.IConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.IConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.IConventionPack,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.IConventionPack");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.ICreatorMapConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.ICreatorMapConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.IDiscriminatorConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.IDiscriminatorConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.IgnoreExtraElementsConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.IgnoreExtraElementsConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.IgnoreIfDefaultConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.IgnoreIfDefaultConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.IgnoreIfNullConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.IgnoreIfNullConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.IMemberMapConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.IMemberMapConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.ImmutableTypeClassMapConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.ImmutableTypeClassMapConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.IPostProcessingConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.IPostProcessingConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.LookupIdGeneratorConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.LookupIdGeneratorConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.MemberDefaultValueConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.MemberDefaultValueConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.MemberNameElementNameConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.MemberNameElementNameConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.NamedExtraElementsMemberConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.NamedExtraElementsMemberConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.NamedIdMemberConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.NamedIdMemberConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.NamedParameterCreatorMapConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.NamedParameterCreatorMapConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.NoIdMemberConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.NoIdMemberConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.ObjectDiscriminatorConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.ObjectDiscriminatorConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.ReadWriteMemberFinderConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.ReadWriteMemberFinderConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.ResetClassMapConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.ResetClassMapConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.ResetMemberMapsConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.ResetMemberMapsConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.ScalarDiscriminatorConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.ScalarDiscriminatorConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.StandardDiscriminatorConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.StandardDiscriminatorConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.StringIdStoredAsObjectIdConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.StringIdStoredAsObjectIdConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.StringObjectIdIdGeneratorConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.StringObjectIdIdGeneratorConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.IdGenerators.AscendingGuidGenerator,MongoDB.Bson", "MongoDB.Bson.Serialization.IdGenerators.AscendingGuidGenerator");
            feature.AddKnownType("MongoDB.Bson.Serialization.IdGenerators.BsonBinaryDataGuidGenerator,MongoDB.Bson", "MongoDB.Bson.Serialization.IdGenerators.BsonBinaryDataGuidGenerator");
            feature.AddKnownType("MongoDB.Bson.Serialization.IdGenerators.BsonObjectIdGenerator,MongoDB.Bson", "MongoDB.Bson.Serialization.IdGenerators.BsonObjectIdGenerator");
            feature.AddKnownType("MongoDB.Bson.Serialization.IdGenerators.CombGuidGenerator,MongoDB.Bson", "MongoDB.Bson.Serialization.IdGenerators.CombGuidGenerator");
            feature.AddKnownType("MongoDB.Bson.Serialization.IdGenerators.GuidGenerator,MongoDB.Bson", "MongoDB.Bson.Serialization.IdGenerators.GuidGenerator");
            feature.AddKnownType("MongoDB.Bson.Serialization.IdGenerators.NullIdChecker,MongoDB.Bson", "MongoDB.Bson.Serialization.IdGenerators.NullIdChecker");
            feature.AddKnownType("MongoDB.Bson.Serialization.IdGenerators.ObjectIdGenerator,MongoDB.Bson", "MongoDB.Bson.Serialization.IdGenerators.ObjectIdGenerator");
            feature.AddKnownType("MongoDB.Bson.Serialization.IdGenerators.StringObjectIdGenerator,MongoDB.Bson", "MongoDB.Bson.Serialization.IdGenerators.StringObjectIdGenerator");
            feature.AddKnownType("MongoDB.Bson.Serialization.IdGenerators.ZeroIdChecker`1,MongoDB.Bson", "MongoDB.Bson.Serialization.IdGenerators.ZeroIdChecker`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.Options.DictionaryRepresentation,MongoDB.Bson", "MongoDB.Bson.Serialization.Options.DictionaryRepresentation");
            feature.AddKnownType("MongoDB.Bson.Serialization.Options.RepresentationConverter,MongoDB.Bson", "MongoDB.Bson.Serialization.Options.RepresentationConverter");
            feature.AddKnownType("MongoDB.Bson.Serialization.Options.TimeSpanUnits,MongoDB.Bson", "MongoDB.Bson.Serialization.Options.TimeSpanUnits");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.AbstractClassSerializer`1,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.AbstractClassSerializer`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.ArraySerializer`1,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.ArraySerializer`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.BitArraySerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.BitArraySerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.BooleanSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.BooleanSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.BsonArraySerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.BsonArraySerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.BsonBinaryDataSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.BsonBinaryDataSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.BsonBooleanSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.BsonBooleanSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.BsonDateTimeSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.BsonDateTimeSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.BsonDecimal128Serializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.BsonDecimal128Serializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.BsonDocumentSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.BsonDocumentSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.BsonDocumentWrapperSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.BsonDocumentWrapperSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.BsonDoubleSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.BsonDoubleSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.BsonInt32Serializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.BsonInt32Serializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.BsonInt64Serializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.BsonInt64Serializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.BsonJavaScriptSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.BsonJavaScriptSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.BsonJavaScriptWithScopeSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.BsonJavaScriptWithScopeSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.BsonMaxKeySerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.BsonMaxKeySerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.BsonMinKeySerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.BsonMinKeySerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.BsonNullSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.BsonNullSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.BsonObjectIdSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.BsonObjectIdSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.BsonRegularExpressionSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.BsonRegularExpressionSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.BsonStringSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.BsonStringSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.BsonSymbolSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.BsonSymbolSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.BsonTimestampSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.BsonTimestampSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.BsonUndefinedSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.BsonUndefinedSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.BsonValueCSharpNullSerializer`1,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.BsonValueCSharpNullSerializer`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.BsonValueCSharpNullArrayAndDocumentSerializer`1,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.BsonValueCSharpNullArrayAndDocumentSerializer`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.BsonValueCSharpNullArraySerializer`1,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.BsonValueCSharpNullArraySerializer`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.BsonValueCSharpNullDocumentSerializer`1,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.BsonValueCSharpNullDocumentSerializer`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.BsonValueSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.BsonValueSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.BsonValueSerializerBase`1,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.BsonValueSerializerBase`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.ByteArraySerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.ByteArraySerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.ByteSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.ByteSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.CharSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.CharSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.ClassSerializerBase`1,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.ClassSerializerBase`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.CultureInfoSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.CultureInfoSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.DateTimeOffsetSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.DateTimeOffsetSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.DateTimeSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.DateTimeSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.Decimal128Serializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.Decimal128Serializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.DecimalSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.DecimalSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.DictionaryInterfaceImplementerSerializer`1,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.DictionaryInterfaceImplementerSerializer`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.DictionaryInterfaceImplementerSerializer`3,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.DictionaryInterfaceImplementerSerializer`3'3");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.DictionarySerializerBase`1,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.DictionarySerializerBase`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.DictionarySerializerBase`3,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.DictionarySerializerBase`3'3");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.DiscriminatedInterfaceSerializer`1,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.DiscriminatedInterfaceSerializer`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.DiscriminatedWrapperSerializer`1,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.DiscriminatedWrapperSerializer`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.DoubleSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.DoubleSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.DynamicDocumentBaseSerializer`1,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.DynamicDocumentBaseSerializer`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.ElementAppendingSerializer`1,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.ElementAppendingSerializer`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.EnumerableInterfaceImplementerSerializer`1,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.EnumerableInterfaceImplementerSerializer`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.EnumerableInterfaceImplementerSerializer`2,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.EnumerableInterfaceImplementerSerializer`2'2");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.EnumerableInterfaceImplementerSerializerBase`1,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.EnumerableInterfaceImplementerSerializerBase`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.EnumerableInterfaceImplementerSerializerBase`2,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.EnumerableInterfaceImplementerSerializerBase`2'2");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.EnumerableSerializerBase`1,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.EnumerableSerializerBase`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.EnumerableSerializerBase`2,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.EnumerableSerializerBase`2'2");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.EnumSerializer`1,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.EnumSerializer`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.ExpandoObjectSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.ExpandoObjectSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.GuidSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.GuidSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.ImpliedImplementationInterfaceSerializer`2,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.ImpliedImplementationInterfaceSerializer`2'2");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.Int16Serializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.Int16Serializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.Int32Serializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.Int32Serializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.Int64Serializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.Int64Serializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.IPAddressSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.IPAddressSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.IPEndPointSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.IPEndPointSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.KeyValuePairSerializer`2,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.KeyValuePairSerializer`2'2");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.LazyBsonArraySerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.LazyBsonArraySerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.LazyBsonDocumentSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.LazyBsonDocumentSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.NullableSerializer`1,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.NullableSerializer`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.ObjectIdSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.ObjectIdSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.ObjectSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.ObjectSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.PartiallyRawBsonDocumentSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.PartiallyRawBsonDocumentSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.ProjectingDeserializer`2,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.ProjectingDeserializer`2'2");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.QueueSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.QueueSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.QueueSerializer`1,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.QueueSerializer`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.RawBsonArraySerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.RawBsonArraySerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.RawBsonDocumentSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.RawBsonDocumentSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.ReadOnlyCollectionSerializer`1,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.ReadOnlyCollectionSerializer`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.ReadOnlyCollectionSubclassSerializer`2,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.ReadOnlyCollectionSubclassSerializer`2'2");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.ReadOnlyDictionaryInterfaceImplementerSerializer`3,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.ReadOnlyDictionaryInterfaceImplementerSerializer`3'3");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.SByteSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.SByteSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.SealedClassSerializerBase`1,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.SealedClassSerializerBase`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.SerializeAsNominalTypeSerializer`2,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.SerializeAsNominalTypeSerializer`2'2");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.SerializerBase`1,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.SerializerBase`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.SerializerHelper,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.SerializerHelper");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.SerializerHelper+Member,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.MongoDB.Bson.Serialization.Serializers.SerializerHelper.Member");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.SingleSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.SingleSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.StackSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.StackSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.StackSerializer`1,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.StackSerializer`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.StringSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.StringSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.StructSerializerBase`1,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.StructSerializerBase`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.ThreeDimensionalArraySerializer`1,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.ThreeDimensionalArraySerializer`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.TimeSpanSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.TimeSpanSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.TupleSerializer`1,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.TupleSerializer`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.TupleSerializer`2,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.TupleSerializer`2'2");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.TupleSerializer`3,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.TupleSerializer`3'3");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.TupleSerializer`4,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.TupleSerializer`4'4");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.TupleSerializer`5,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.TupleSerializer`5'5");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.TupleSerializer`6,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.TupleSerializer`6'6");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.TupleSerializer`7,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.TupleSerializer`7'7");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.TupleSerializer`8,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.TupleSerializer`8'8");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.TwoDimensionalArraySerializer`1,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.TwoDimensionalArraySerializer`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.UInt16Serializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.UInt16Serializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.UInt32Serializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.UInt32Serializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.UInt64Serializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.UInt64Serializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.UndiscriminatedActualTypeSerializer`1,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.UndiscriminatedActualTypeSerializer`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.UriSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.UriSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.VersionSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.VersionSerializer");
            feature.AddKnownType("MongoDB.Shared.Hasher,MongoDB.Bson", "MongoDB.Shared.Hasher");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,MongoDB.Driver.Core", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("MongoDB.Driver.BatchTransformingAsyncCursor`2,MongoDB.Driver.Core", "MongoDB.Driver.BatchTransformingAsyncCursor`2'2");
            feature.AddKnownType("MongoDB.Driver.ChangeStreamDocument`1,MongoDB.Driver.Core", "MongoDB.Driver.ChangeStreamDocument`1'1");
            feature.AddKnownType("MongoDB.Driver.ChangeStreamDocumentCollectionNamespaceSerializer,MongoDB.Driver.Core", "MongoDB.Driver.ChangeStreamDocumentCollectionNamespaceSerializer");
            feature.AddKnownType("MongoDB.Driver.ChangeStreamDocumentSerializer`1,MongoDB.Driver.Core", "MongoDB.Driver.ChangeStreamDocumentSerializer`1'1");
            feature.AddKnownType("MongoDB.Driver.ChangeStreamFullDocumentOption,MongoDB.Driver.Core", "MongoDB.Driver.ChangeStreamFullDocumentOption");
            feature.AddKnownType("MongoDB.Driver.ChangeStreamOperationType,MongoDB.Driver.Core", "MongoDB.Driver.ChangeStreamOperationType");
            feature.AddKnownType("MongoDB.Driver.ChangeStreamOperationTypeSerializer,MongoDB.Driver.Core", "MongoDB.Driver.ChangeStreamOperationTypeSerializer");
            feature.AddKnownType("MongoDB.Driver.ChangeStreamUpdateDescription,MongoDB.Driver.Core", "MongoDB.Driver.ChangeStreamUpdateDescription");
            feature.AddKnownType("MongoDB.Driver.ChangeStreamUpdateDescriptionSerializer,MongoDB.Driver.Core", "MongoDB.Driver.ChangeStreamUpdateDescriptionSerializer");
            feature.AddKnownType("MongoDB.Driver.CollationAlternate,MongoDB.Driver.Core", "MongoDB.Driver.CollationAlternate");
            feature.AddKnownType("MongoDB.Driver.CollationCaseFirst,MongoDB.Driver.Core", "MongoDB.Driver.CollationCaseFirst");
            feature.AddKnownType("MongoDB.Driver.CollationMaxVariable,MongoDB.Driver.Core", "MongoDB.Driver.CollationMaxVariable");
            feature.AddKnownType("MongoDB.Driver.CollationStrength,MongoDB.Driver.Core", "MongoDB.Driver.CollationStrength");
            feature.AddKnownType("MongoDB.Driver.Collation,MongoDB.Driver.Core", "MongoDB.Driver.Collation");
            feature.AddKnownType("MongoDB.Driver.CollectionNamespace,MongoDB.Driver.Core", "MongoDB.Driver.CollectionNamespace");
            feature.AddKnownType("MongoDB.Driver.CoreServerSession,MongoDB.Driver.Core", "MongoDB.Driver.CoreServerSession");
            feature.AddKnownType("MongoDB.Driver.CoreServerSessionPool,MongoDB.Driver.Core", "MongoDB.Driver.CoreServerSessionPool");
            feature.AddKnownType("MongoDB.Driver.CoreServerSessionPool+ReleaseOnDisposeCoreServerSession,MongoDB.Driver.Core", "MongoDB.Driver.ReleaseOnDisposeCoreServerSession");
            feature.AddKnownType("MongoDB.Driver.ICoreServerSessionPool,MongoDB.Driver.Core", "MongoDB.Driver.ICoreServerSessionPool");
            feature.AddKnownType("MongoDB.Driver.ICoreServerSession,MongoDB.Driver.Core", "MongoDB.Driver.ICoreServerSession");
            feature.AddKnownType("MongoDB.Driver.WrappingCoreServerSession,MongoDB.Driver.Core", "MongoDB.Driver.WrappingCoreServerSession");
            feature.AddKnownType("MongoDB.Driver.CreateIndexCommitQuorum,MongoDB.Driver.Core", "MongoDB.Driver.CreateIndexCommitQuorum");
            feature.AddKnownType("MongoDB.Driver.CreateIndexCommitQuorumWithMode,MongoDB.Driver.Core", "MongoDB.Driver.CreateIndexCommitQuorumWithMode");
            feature.AddKnownType("MongoDB.Driver.CreateIndexCommitQuorumWithW,MongoDB.Driver.Core", "MongoDB.Driver.CreateIndexCommitQuorumWithW");
            feature.AddKnownType("MongoDB.Driver.DatabaseNamespace,MongoDB.Driver.Core", "MongoDB.Driver.DatabaseNamespace");
            feature.AddKnownType("MongoDB.Driver.DeferredAsyncCursor`1,MongoDB.Driver.Core", "MongoDB.Driver.DeferredAsyncCursor`1'1");
            feature.AddKnownType("MongoDB.Driver.DocumentValidationAction,MongoDB.Driver.Core", "MongoDB.Driver.DocumentValidationAction");
            feature.AddKnownType("MongoDB.Driver.DocumentValidationLevel,MongoDB.Driver.Core", "MongoDB.Driver.DocumentValidationLevel");
            feature.AddKnownType("MongoDB.Driver.IAsyncCursor`1,MongoDB.Driver.Core", "MongoDB.Driver.IAsyncCursor`1'1");
            feature.AddKnownType("MongoDB.Driver.IChangeStreamCursor`1,MongoDB.Driver.Core", "MongoDB.Driver.IChangeStreamCursor`1'1");
            feature.AddKnownType("MongoDB.Driver.ICursorBatchInfo,MongoDB.Driver.Core", "MongoDB.Driver.ICursorBatchInfo");
            feature.AddKnownType("MongoDB.Driver.IAsyncCursorSource`1,MongoDB.Driver.Core", "MongoDB.Driver.IAsyncCursorSource`1'1");
            feature.AddKnownType("MongoDB.Driver.MongoAuthenticationException,MongoDB.Driver.Core", "MongoDB.Driver.MongoAuthenticationException");
            feature.AddKnownType("MongoDB.Driver.MongoClientException,MongoDB.Driver.Core", "MongoDB.Driver.MongoClientException");
            feature.AddKnownType("MongoDB.Driver.MongoCommandException,MongoDB.Driver.Core", "MongoDB.Driver.MongoCommandException");
            feature.AddKnownType("MongoDB.Driver.MongoConfigurationException,MongoDB.Driver.Core", "MongoDB.Driver.MongoConfigurationException");
            feature.AddKnownType("MongoDB.Driver.MongoConnectionClosedException,MongoDB.Driver.Core", "MongoDB.Driver.MongoConnectionClosedException");
            feature.AddKnownType("MongoDB.Driver.MongoConnectionException,MongoDB.Driver.Core", "MongoDB.Driver.MongoConnectionException");
            feature.AddKnownType("MongoDB.Driver.MongoConnectionPoolPausedException,MongoDB.Driver.Core", "MongoDB.Driver.MongoConnectionPoolPausedException");
            feature.AddKnownType("MongoDB.Driver.MongoCursorNotFoundException,MongoDB.Driver.Core", "MongoDB.Driver.MongoCursorNotFoundException");
            feature.AddKnownType("MongoDB.Driver.MongoDuplicateKeyException,MongoDB.Driver.Core", "MongoDB.Driver.MongoDuplicateKeyException");
            feature.AddKnownType("MongoDB.Driver.MongoException,MongoDB.Driver.Core", "MongoDB.Driver.MongoException");
            feature.AddKnownType("MongoDB.Driver.MongoExecutionTimeoutException,MongoDB.Driver.Core", "MongoDB.Driver.MongoExecutionTimeoutException");
            feature.AddKnownType("MongoDB.Driver.MongoIncompatibleDriverException,MongoDB.Driver.Core", "MongoDB.Driver.MongoIncompatibleDriverException");
            feature.AddKnownType("MongoDB.Driver.MongoInternalException,MongoDB.Driver.Core", "MongoDB.Driver.MongoInternalException");
            feature.AddKnownType("MongoDB.Driver.MongoNodeIsRecoveringException,MongoDB.Driver.Core", "MongoDB.Driver.MongoNodeIsRecoveringException");
            feature.AddKnownType("MongoDB.Driver.MongoNotPrimaryException,MongoDB.Driver.Core", "MongoDB.Driver.MongoNotPrimaryException");
            feature.AddKnownType("MongoDB.Driver.MongoQueryException,MongoDB.Driver.Core", "MongoDB.Driver.MongoQueryException");
            feature.AddKnownType("MongoDB.Driver.MongoServerException,MongoDB.Driver.Core", "MongoDB.Driver.MongoServerException");
            feature.AddKnownType("MongoDB.Driver.MongoWaitQueueFullException,MongoDB.Driver.Core", "MongoDB.Driver.MongoWaitQueueFullException");
            feature.AddKnownType("MongoDB.Driver.MongoWriteConcernException,MongoDB.Driver.Core", "MongoDB.Driver.MongoWriteConcernException");
            feature.AddKnownType("MongoDB.Driver.Optional`1,MongoDB.Driver.Core", "MongoDB.Driver.Optional`1'1");
            feature.AddKnownType("MongoDB.Driver.ReadConcern,MongoDB.Driver.Core", "MongoDB.Driver.ReadConcern");
            feature.AddKnownType("MongoDB.Driver.ReadConcernLevel,MongoDB.Driver.Core", "MongoDB.Driver.ReadConcernLevel");
            feature.AddKnownType("MongoDB.Driver.ReadPreference,MongoDB.Driver.Core", "MongoDB.Driver.ReadPreference");
            feature.AddKnownType("MongoDB.Driver.ReadPreferenceHedge,MongoDB.Driver.Core", "MongoDB.Driver.ReadPreferenceHedge");
            feature.AddKnownType("MongoDB.Driver.ReadPreferenceMode,MongoDB.Driver.Core", "MongoDB.Driver.ReadPreferenceMode");
            feature.AddKnownType("MongoDB.Driver.ServerApi,MongoDB.Driver.Core", "MongoDB.Driver.ServerApi");
            feature.AddKnownType("MongoDB.Driver.ServerApiVersion,MongoDB.Driver.Core", "MongoDB.Driver.ServerApiVersion");
            feature.AddKnownType("MongoDB.Driver.ServerErrorCategory,MongoDB.Driver.Core", "MongoDB.Driver.ServerErrorCategory");
            feature.AddKnownType("MongoDB.Driver.ServerErrorCode,MongoDB.Driver.Core", "MongoDB.Driver.ServerErrorCode");
            feature.AddKnownType("MongoDB.Driver.SingleBatchAsyncCursor`1,MongoDB.Driver.Core", "MongoDB.Driver.SingleBatchAsyncCursor`1'1");
            feature.AddKnownType("MongoDB.Driver.Tag,MongoDB.Driver.Core", "MongoDB.Driver.Tag");
            feature.AddKnownType("MongoDB.Driver.TagSet,MongoDB.Driver.Core", "MongoDB.Driver.TagSet");
            feature.AddKnownType("MongoDB.Driver.TimeSeriesGranularity,MongoDB.Driver.Core", "MongoDB.Driver.TimeSeriesGranularity");
            feature.AddKnownType("MongoDB.Driver.TimeSeriesOptions,MongoDB.Driver.Core", "MongoDB.Driver.TimeSeriesOptions");
            feature.AddKnownType("MongoDB.Driver.TransactionOptions,MongoDB.Driver.Core", "MongoDB.Driver.TransactionOptions");
            feature.AddKnownType("MongoDB.Driver.WriteConcern,MongoDB.Driver.Core", "MongoDB.Driver.WriteConcern");
            feature.AddKnownType("MongoDB.Driver.WriteConcern+WValue,MongoDB.Driver.Core", "MongoDB.Driver.MongoDB.Driver.WriteConcern.WValue");
            feature.AddKnownType("MongoDB.Driver.WriteConcern+WCount,MongoDB.Driver.Core", "MongoDB.Driver.MongoDB.Driver.WriteConcern.WCount");
            feature.AddKnownType("MongoDB.Driver.WriteConcern+WMode,MongoDB.Driver.Core", "MongoDB.Driver.MongoDB.Driver.WriteConcern.WMode");
            feature.AddKnownType("MongoDB.Driver.WriteConcernResult,MongoDB.Driver.Core", "MongoDB.Driver.WriteConcernResult");
            feature.AddKnownType("MongoDB.Driver.Core.Async.AsyncQueue`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Async.AsyncQueue`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.AuthenticatorFactory,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.AuthenticatorFactory");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.DefaultAuthenticator,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.DefaultAuthenticator");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.GssapiAuthenticator,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.GssapiAuthenticator");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.GssapiAuthenticator+GssapiMechanism,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.GssapiMechanism");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.GssapiAuthenticator+FirstStep,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.FirstStep");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.GssapiAuthenticator+InitializeStep,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.InitializeStep");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.GssapiAuthenticator+NegotiateStep,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.NegotiateStep");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.GssapiException,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.GssapiException");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.IAuthenticator,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.IAuthenticator");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.IAuthenticatorFactory,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.IAuthenticatorFactory");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.ISecurityContext,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.ISecurityContext");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.MongoAWSAuthenticator,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.MongoAWSAuthenticator");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.MongoAWSAuthenticator+AwsCredentials,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.AwsCredentials");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.MongoAWSAuthenticator+MongoAWSMechanism,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.MongoAWSMechanism");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.MongoAWSAuthenticator+ClientFirst,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.ClientFirst");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.MongoAWSAuthenticator+ClientLast,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.ClientLast");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.MongoDBCRAuthenticator,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.MongoDBCRAuthenticator");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.MongoDBX509Authenticator,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.MongoDBX509Authenticator");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.PlainAuthenticator,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.PlainAuthenticator");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.PlainAuthenticator+PlainMechanism,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.PlainMechanism");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.SaslAuthenticator,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.SaslAuthenticator");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.SaslAuthenticator+SaslConversation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.SaslConversation");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.SaslAuthenticator+ISaslMechanism,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.ISaslMechanism");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.SaslAuthenticator+ISaslStep,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.ISaslStep");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.SaslAuthenticator+CompletedStep,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.CompletedStep");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.ScramCache,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.ScramCache");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.ScramCacheKey,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.ScramCacheKey");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.ScramCacheEntry,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.ScramCacheEntry");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.ScramSha1Authenticator,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.ScramSha1Authenticator");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.ScramSha256Authenticator,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.ScramSha256Authenticator");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.ScramShaAuthenticator,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.ScramShaAuthenticator");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.ScramShaAuthenticator+ScramShaMechanism,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.ScramShaMechanism");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.ScramShaAuthenticator+ClientFirst,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.ClientFirst");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.ScramShaAuthenticator+ClientLast,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.ClientLast");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.UsernamePasswordCredential,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.UsernamePasswordCredential");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.Libgssapi.GssapiSafeHandle,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.Libgssapi.GssapiSafeHandle");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.Libgssapi.GssapiSecurityContext,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.Libgssapi.GssapiSecurityContext");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.Libgssapi.GssapiSecurityCredential,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.Libgssapi.GssapiSecurityCredential");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.Libgssapi.GssapiServicePrincipalName,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.Libgssapi.GssapiServicePrincipalName");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.Libgssapi.GssCode,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.Libgssapi.GssCode");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.Libgssapi.GssCredentialUsage,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.Libgssapi.GssCredentialUsage");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.Libgssapi.GssFlags,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.Libgssapi.GssFlags");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.Libgssapi.GssStatus,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.Libgssapi.GssStatus");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.Libgssapi.GssInputBuffer,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.Libgssapi.GssInputBuffer");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.Libgssapi.GssOutputBuffer,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.Libgssapi.GssOutputBuffer");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.Libgssapi.LibgssapiException,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.Libgssapi.LibgssapiException");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.Libgssapi.Oid,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.Libgssapi.Oid");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.Sspi.AuthIdentity,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.Sspi.AuthIdentity");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.Sspi.AuthIdentityFlag,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.Sspi.AuthIdentityFlag");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.Sspi.DataRepresentation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.Sspi.DataRepresentation");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.Sspi.EncryptQualityOfProtection,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.Sspi.EncryptQualityOfProtection");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.Sspi.QueryContextAttributes,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.Sspi.QueryContextAttributes");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.Sspi.SecurityBuffer,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.Sspi.SecurityBuffer");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.Sspi.SecurityBufferDescriptor,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.Sspi.SecurityBufferDescriptor");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.Sspi.SecurityBufferType,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.Sspi.SecurityBufferType");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.Sspi.SecurityCredentialUse,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.Sspi.SecurityCredentialUse");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.Sspi.SecurityPackageContextSizes,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.Sspi.SecurityPackageContextSizes");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.Sspi.SecurityPackageInfo,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.Sspi.SecurityPackageInfo");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.Sspi.SspiContextFlags,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.Sspi.SspiContextFlags");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.Sspi.SspiHandle,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.Sspi.SspiHandle");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.Sspi.SspiPackage,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.Sspi.SspiPackage");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.Sspi.SspiSecurityContext,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.Sspi.SspiSecurityContext");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.Sspi.SspiSecurityCredential,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.Sspi.SspiSecurityCredential");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.Sspi.Win32Exception,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.Sspi.Win32Exception");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.Vendored.Rfc2898DeriveBytes,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.Vendored.Rfc2898DeriveBytes");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.ChannelChannelSource,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.ChannelChannelSource");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.ChannelReadBinding,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.ChannelReadBinding");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.ChannelReadWriteBinding,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.ChannelReadWriteBinding");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.ChannelSourceHandle,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.ChannelSourceHandle");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.ChannelSourceReadWriteBinding,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.ChannelSourceReadWriteBinding");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.CoreSession,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.CoreSession");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.CoreSessionHandle,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.CoreSessionHandle");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.CoreSessionOptions,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.CoreSessionOptions");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.CoreTransaction,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.CoreTransaction");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.CoreTransactionState,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.CoreTransactionState");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.IBinding,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.IBinding");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.IReadBinding,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.IReadBinding");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.IWriteBinding,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.IWriteBinding");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.IReadWriteBinding,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.IReadWriteBinding");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.IReadBindingHandle,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.IReadBindingHandle");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.IWriteBindingHandle,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.IWriteBindingHandle");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.IReadWriteBindingHandle,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.IReadWriteBindingHandle");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.IMayUseSecondaryCriteria,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.IMayUseSecondaryCriteria");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.IChannel,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.IChannel");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.IChannelHandle,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.IChannelHandle");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.IChannelSource,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.IChannelSource");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.IChannelSourceHandle,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.IChannelSourceHandle");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.ICoreSession,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.ICoreSession");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.ICoreSessionHandle,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.ICoreSessionHandle");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.NoCoreServerSession,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.NoCoreServerSession");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.NoCoreSession,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.NoCoreSession");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.NonDisposingCoreSessionHandle,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.NonDisposingCoreSessionHandle");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.ReadBindingHandle,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.ReadBindingHandle");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.ReadPreferenceBinding,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.ReadPreferenceBinding");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.ReadWriteBindingHandle,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.ReadWriteBindingHandle");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.ReferenceCountedCoreSession,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.ReferenceCountedCoreSession");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.ServerChannelSource,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.ServerChannelSource");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.SingleServerReadBinding,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.SingleServerReadBinding");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.SingleServerReadWriteBinding,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.SingleServerReadWriteBinding");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.WrappingCoreSession,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.WrappingCoreSession");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.WritableServerBinding,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.WritableServerBinding");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.Cluster,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.Cluster");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.Cluster+SelectServerHelper,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.SelectServerHelper");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.Cluster+WaitForDescriptionChangedHelper,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.WaitForDescriptionChangedHelper");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.ClusterClock,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.ClusterClock");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.NoClusterClock,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.NoClusterClock");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.ClusterConnectionMode,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.ClusterConnectionMode");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.ClusterDescription,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.ClusterDescription");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.ClusterDescriptionChangedEventArgs,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.ClusterDescriptionChangedEventArgs");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.ClusterFactory,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.ClusterFactory");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.ClusterId,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.ClusterId");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.ClusterState,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.ClusterState");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.ClusterType,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.ClusterType");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.ConnectionModeSwitch,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.ConnectionModeSwitch");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.CryptClientCreator,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.CryptClientCreator");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.DnsMonitor,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.DnsMonitor");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.DnsMonitorFactory,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.DnsMonitorFactory");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.ElectionId,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.ElectionId");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.ICluster,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.ICluster");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.IClusterClock,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.IClusterClock");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.IClusterFactory,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.IClusterFactory");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.DnsMonitorState,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.DnsMonitorState");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.IDnsMonitor,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.IDnsMonitor");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.IDnsMonitorFactory,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.IDnsMonitorFactory");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.IDnsMonitoringCluster,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.IDnsMonitoringCluster");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.LoadBalancedCluster,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.LoadBalancedCluster");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.MultiServerCluster,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.MultiServerCluster");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.MultiServerCluster+ElectionInfo,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.ElectionInfo");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.ReplicaSetConfig,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.ReplicaSetConfig");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.SingleServerCluster,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.SingleServerCluster");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.ServerSelectors.CompositeServerSelector,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.ServerSelectors.CompositeServerSelector");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.ServerSelectors.DelegateServerSelector,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.ServerSelectors.DelegateServerSelector");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.ServerSelectors.EndPointServerSelector,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.ServerSelectors.EndPointServerSelector");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.ServerSelectors.IServerSelector,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.ServerSelectors.IServerSelector");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.ServerSelectors.LatencyLimitingServerSelector,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.ServerSelectors.LatencyLimitingServerSelector");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.ServerSelectors.OperationsCountServerSelector,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.ServerSelectors.OperationsCountServerSelector");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.ServerSelectors.RandomServerSelector,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.ServerSelectors.RandomServerSelector");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.ServerSelectors.ReadPreferenceServerSelector,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.ServerSelectors.ReadPreferenceServerSelector");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.ServerSelectors.WritableServerSelector,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.ServerSelectors.WritableServerSelector");
            feature.AddKnownType("MongoDB.Driver.Core.Compression.ICompressorSource,MongoDB.Driver.Core", "MongoDB.Driver.Core.Compression.ICompressorSource");
            feature.AddKnownType("MongoDB.Driver.Core.Compression.CompressorSource,MongoDB.Driver.Core", "MongoDB.Driver.Core.Compression.CompressorSource");
            feature.AddKnownType("MongoDB.Driver.Core.Compression.CompressorType,MongoDB.Driver.Core", "MongoDB.Driver.Core.Compression.CompressorType");
            feature.AddKnownType("MongoDB.Driver.Core.Compression.ICompressor,MongoDB.Driver.Core", "MongoDB.Driver.Core.Compression.ICompressor");
            feature.AddKnownType("MongoDB.Driver.Core.Compression.NoopCompressor,MongoDB.Driver.Core", "MongoDB.Driver.Core.Compression.NoopCompressor");
            feature.AddKnownType("MongoDB.Driver.Core.Compression.SnappyCompressor,MongoDB.Driver.Core", "MongoDB.Driver.Core.Compression.SnappyCompressor");
            feature.AddKnownType("MongoDB.Driver.Core.Compression.ZlibCompressor,MongoDB.Driver.Core", "MongoDB.Driver.Core.Compression.ZlibCompressor");
            feature.AddKnownType("MongoDB.Driver.Core.Compression.ZstandardCompressor,MongoDB.Driver.Core", "MongoDB.Driver.Core.Compression.ZstandardCompressor");
            feature.AddKnownType("MongoDB.Driver.Core.Compression.Snappy.Snappy32NativeMethods+Delegates32,MongoDB.Driver.Core", "MongoDB.Driver.Core.Compression.Snappy.Delegates32");
            feature.AddKnownType("MongoDB.Driver.Core.Compression.Snappy.Snappy32NativeMethods+SnappyLocator,MongoDB.Driver.Core", "MongoDB.Driver.Core.Compression.Snappy.SnappyLocator");
            feature.AddKnownType("MongoDB.Driver.Core.Compression.Snappy.Snappy64NativeMethods+Delegates64,MongoDB.Driver.Core", "MongoDB.Driver.Core.Compression.Snappy.Delegates64");
            feature.AddKnownType("MongoDB.Driver.Core.Compression.Snappy.Snappy64NativeMethods+SnappyLocator,MongoDB.Driver.Core", "MongoDB.Driver.Core.Compression.Snappy.SnappyLocator");
            feature.AddKnownType("MongoDB.Driver.Core.Compression.Snappy.SnappyStatus,MongoDB.Driver.Core", "MongoDB.Driver.Core.Compression.Snappy.SnappyStatus");
            feature.AddKnownType("MongoDB.Driver.Core.Compression.Zstandard.NativeBufferInfo,MongoDB.Driver.Core", "MongoDB.Driver.Core.Compression.Zstandard.NativeBufferInfo");
            feature.AddKnownType("MongoDB.Driver.Core.Compression.Zstandard.PinnedBufferWalker,MongoDB.Driver.Core", "MongoDB.Driver.Core.Compression.Zstandard.PinnedBufferWalker");
            feature.AddKnownType("MongoDB.Driver.Core.Compression.Zstandard.Zstandard64NativeMethods,MongoDB.Driver.Core", "MongoDB.Driver.Core.Compression.Zstandard.Zstandard64NativeMethods");
            feature.AddKnownType("MongoDB.Driver.Core.Compression.Zstandard.Zstandard64NativeMethods+Delegates64,MongoDB.Driver.Core", "MongoDB.Driver.Core.Compression.Zstandard.Delegates64");
            feature.AddKnownType("MongoDB.Driver.Core.Compression.Zstandard.Zstandard64NativeMethods+ZstandardLocator,MongoDB.Driver.Core", "MongoDB.Driver.Core.Compression.Zstandard.ZstandardLocator");
            feature.AddKnownType("MongoDB.Driver.Core.Compression.Zstandard.ZstandardNativeWrapper,MongoDB.Driver.Core", "MongoDB.Driver.Core.Compression.Zstandard.ZstandardNativeWrapper");
            feature.AddKnownType("MongoDB.Driver.Core.Compression.Zstandard.ZstandardNativeWrapper+OperationContext,MongoDB.Driver.Core", "MongoDB.Driver.Core.Compression.Zstandard.OperationContext");
            feature.AddKnownType("MongoDB.Driver.Core.Compression.Zstandard.BufferInfo,MongoDB.Driver.Core", "MongoDB.Driver.Core.Compression.Zstandard.BufferInfo");
            feature.AddKnownType("MongoDB.Driver.Core.Compression.Zstandard.ZstandardStream,MongoDB.Driver.Core", "MongoDB.Driver.Core.Compression.Zstandard.ZstandardStream");
            feature.AddKnownType("MongoDB.Driver.Core.Compression.Zstandard.ZstandardStream+StreamReadHelper,MongoDB.Driver.Core", "MongoDB.Driver.Core.Compression.Zstandard.StreamReadHelper");
            feature.AddKnownType("MongoDB.Driver.Core.Compression.Zstandard.ZstandardStream+StreamReadHelper+ReadingState,MongoDB.Driver.Core", "MongoDB.Driver.Core.Compression.Zstandard.ReadingState");
            feature.AddKnownType("MongoDB.Driver.Core.Compression.Zstandard.ZstandardStream+StreamWriteHelper,MongoDB.Driver.Core", "MongoDB.Driver.Core.Compression.Zstandard.StreamWriteHelper");
            feature.AddKnownType("MongoDB.Driver.Core.Configuration.ClusterBuilder,MongoDB.Driver.Core", "MongoDB.Driver.Core.Configuration.ClusterBuilder");
            feature.AddKnownType("MongoDB.Driver.Core.Configuration.ClusterSettings,MongoDB.Driver.Core", "MongoDB.Driver.Core.Configuration.ClusterSettings");
            feature.AddKnownType("MongoDB.Driver.Core.Configuration.CompressorConfiguration,MongoDB.Driver.Core", "MongoDB.Driver.Core.Configuration.CompressorConfiguration");
            feature.AddKnownType("MongoDB.Driver.Core.Configuration.ConnectionPoolSettings,MongoDB.Driver.Core", "MongoDB.Driver.Core.Configuration.ConnectionPoolSettings");
            feature.AddKnownType("MongoDB.Driver.Core.Configuration.ConnectionSettings,MongoDB.Driver.Core", "MongoDB.Driver.Core.Configuration.ConnectionSettings");
            feature.AddKnownType("MongoDB.Driver.Core.Configuration.ConnectionStringScheme,MongoDB.Driver.Core", "MongoDB.Driver.Core.Configuration.ConnectionStringScheme");
            feature.AddKnownType("MongoDB.Driver.Core.Configuration.ConnectionString,MongoDB.Driver.Core", "MongoDB.Driver.Core.Configuration.ConnectionString");
            feature.AddKnownType("MongoDB.Driver.Core.Configuration.ConnectionString+CompressorsOptions,MongoDB.Driver.Core", "MongoDB.Driver.Core.Configuration.CompressorsOptions");
            feature.AddKnownType("MongoDB.Driver.Core.Configuration.SdamLoggingSettings,MongoDB.Driver.Core", "MongoDB.Driver.Core.Configuration.SdamLoggingSettings");
            feature.AddKnownType("MongoDB.Driver.Core.Configuration.ServerSettings,MongoDB.Driver.Core", "MongoDB.Driver.Core.Configuration.ServerSettings");
            feature.AddKnownType("MongoDB.Driver.Core.Configuration.SslStreamSettings,MongoDB.Driver.Core", "MongoDB.Driver.Core.Configuration.SslStreamSettings");
            feature.AddKnownType("MongoDB.Driver.Core.Configuration.TcpStreamSettings,MongoDB.Driver.Core", "MongoDB.Driver.Core.Configuration.TcpStreamSettings");
            feature.AddKnownType("MongoDB.Driver.Core.ConnectionPools.CheckOutReason,MongoDB.Driver.Core", "MongoDB.Driver.Core.ConnectionPools.CheckOutReason");
            feature.AddKnownType("MongoDB.Driver.Core.ConnectionPools.ICheckOutReasonTracker,MongoDB.Driver.Core", "MongoDB.Driver.Core.ConnectionPools.ICheckOutReasonTracker");
            feature.AddKnownType("MongoDB.Driver.Core.ConnectionPools.CheckOutReasonCounter,MongoDB.Driver.Core", "MongoDB.Driver.Core.ConnectionPools.CheckOutReasonCounter");
            feature.AddKnownType("MongoDB.Driver.Core.ConnectionPools.ExclusiveConnectionPool,MongoDB.Driver.Core", "MongoDB.Driver.Core.ConnectionPools.ExclusiveConnectionPool");
            feature.AddKnownType("MongoDB.Driver.Core.ConnectionPools.ExclusiveConnectionPool+State,MongoDB.Driver.Core", "MongoDB.Driver.Core.ConnectionPools.State");
            feature.AddKnownType("MongoDB.Driver.Core.ConnectionPools.ExclusiveConnectionPool+PoolState,MongoDB.Driver.Core", "MongoDB.Driver.Core.ConnectionPools.PoolState");
            feature.AddKnownType("MongoDB.Driver.Core.ConnectionPools.ExclusiveConnectionPool+MaintenanceHelper,MongoDB.Driver.Core", "MongoDB.Driver.Core.ConnectionPools.MaintenanceHelper");
            feature.AddKnownType("MongoDB.Driver.Core.ConnectionPools.ExclusiveConnectionPool+AcquireConnectionHelper,MongoDB.Driver.Core", "MongoDB.Driver.Core.ConnectionPools.AcquireConnectionHelper");
            feature.AddKnownType("MongoDB.Driver.Core.ConnectionPools.ExclusiveConnectionPool+PooledConnection,MongoDB.Driver.Core", "MongoDB.Driver.Core.ConnectionPools.PooledConnection");
            feature.AddKnownType("MongoDB.Driver.Core.ConnectionPools.ExclusiveConnectionPool+AcquiredConnection,MongoDB.Driver.Core", "MongoDB.Driver.Core.ConnectionPools.AcquiredConnection");
            feature.AddKnownType("MongoDB.Driver.Core.ConnectionPools.ExclusiveConnectionPool+ListConnectionHolder,MongoDB.Driver.Core", "MongoDB.Driver.Core.ConnectionPools.ListConnectionHolder");
            feature.AddKnownType("MongoDB.Driver.Core.ConnectionPools.ExclusiveConnectionPool+ConnectionCreator,MongoDB.Driver.Core", "MongoDB.Driver.Core.ConnectionPools.ConnectionCreator");
            feature.AddKnownType("MongoDB.Driver.Core.ConnectionPools.ExclusiveConnectionPoolFactory,MongoDB.Driver.Core", "MongoDB.Driver.Core.ConnectionPools.ExclusiveConnectionPoolFactory");
            feature.AddKnownType("MongoDB.Driver.Core.ConnectionPools.IConnectionPool,MongoDB.Driver.Core", "MongoDB.Driver.Core.ConnectionPools.IConnectionPool");
            feature.AddKnownType("MongoDB.Driver.Core.ConnectionPools.IConnectionExceptionHandler,MongoDB.Driver.Core", "MongoDB.Driver.Core.ConnectionPools.IConnectionExceptionHandler");
            feature.AddKnownType("MongoDB.Driver.Core.ConnectionPools.IConnectionPoolFactory,MongoDB.Driver.Core", "MongoDB.Driver.Core.ConnectionPools.IConnectionPoolFactory");
            feature.AddKnownType("MongoDB.Driver.Core.ConnectionPools.ServiceStates,MongoDB.Driver.Core", "MongoDB.Driver.Core.ConnectionPools.ServiceStates");
            feature.AddKnownType("MongoDB.Driver.Core.ConnectionPools.ServiceStates+ServiceState,MongoDB.Driver.Core", "MongoDB.Driver.Core.ConnectionPools.ServiceState");
            feature.AddKnownType("MongoDB.Driver.Core.Connections.BinaryConnection,MongoDB.Driver.Core", "MongoDB.Driver.Core.Connections.BinaryConnection");
            feature.AddKnownType("MongoDB.Driver.Core.Connections.BinaryConnection+Dropbox,MongoDB.Driver.Core", "MongoDB.Driver.Core.Connections.Dropbox");
            feature.AddKnownType("MongoDB.Driver.Core.Connections.BinaryConnection+OpenConnectionHelper,MongoDB.Driver.Core", "MongoDB.Driver.Core.Connections.OpenConnectionHelper");
            feature.AddKnownType("MongoDB.Driver.Core.Connections.BinaryConnection+ReceiveMessageHelper,MongoDB.Driver.Core", "MongoDB.Driver.Core.Connections.ReceiveMessageHelper");
            feature.AddKnownType("MongoDB.Driver.Core.Connections.BinaryConnection+SendMessagesHelper,MongoDB.Driver.Core", "MongoDB.Driver.Core.Connections.SendMessagesHelper");
            feature.AddKnownType("MongoDB.Driver.Core.Connections.BinaryConnectionFactory,MongoDB.Driver.Core", "MongoDB.Driver.Core.Connections.BinaryConnectionFactory");
            feature.AddKnownType("MongoDB.Driver.Core.Connections.ClientDocumentHelper,MongoDB.Driver.Core", "MongoDB.Driver.Core.Connections.ClientDocumentHelper");
            feature.AddKnownType("MongoDB.Driver.Core.Connections.CommandEventHelper,MongoDB.Driver.Core", "MongoDB.Driver.Core.Connections.CommandEventHelper");
            feature.AddKnownType("MongoDB.Driver.Core.Connections.CommandEventHelper+ExpectedResponseType,MongoDB.Driver.Core", "MongoDB.Driver.Core.Connections.ExpectedResponseType");
            feature.AddKnownType("MongoDB.Driver.Core.Connections.CommandEventHelper+CommandState,MongoDB.Driver.Core", "MongoDB.Driver.Core.Connections.CommandState");
            feature.AddKnownType("MongoDB.Driver.Core.Connections.ConnectionDescription,MongoDB.Driver.Core", "MongoDB.Driver.Core.Connections.ConnectionDescription");
            feature.AddKnownType("MongoDB.Driver.Core.Connections.ConnectionId,MongoDB.Driver.Core", "MongoDB.Driver.Core.Connections.ConnectionId");
            feature.AddKnownType("MongoDB.Driver.Core.Connections.ConnectionInitializer,MongoDB.Driver.Core", "MongoDB.Driver.Core.Connections.ConnectionInitializer");
            feature.AddKnownType("MongoDB.Driver.Core.Connections.HelloResult,MongoDB.Driver.Core", "MongoDB.Driver.Core.Connections.HelloResult");
            feature.AddKnownType("MongoDB.Driver.Core.Connections.IConnection,MongoDB.Driver.Core", "MongoDB.Driver.Core.Connections.IConnection");
            feature.AddKnownType("MongoDB.Driver.Core.Connections.IConnectionHandle,MongoDB.Driver.Core", "MongoDB.Driver.Core.Connections.IConnectionHandle");
            feature.AddKnownType("MongoDB.Driver.Core.Connections.IConnectionFactory,MongoDB.Driver.Core", "MongoDB.Driver.Core.Connections.IConnectionFactory");
            feature.AddKnownType("MongoDB.Driver.Core.Connections.IConnectionInitializer,MongoDB.Driver.Core", "MongoDB.Driver.Core.Connections.IConnectionInitializer");
            feature.AddKnownType("MongoDB.Driver.Core.Connections.IsMasterResult,MongoDB.Driver.Core", "MongoDB.Driver.Core.Connections.IsMasterResult");
            feature.AddKnownType("MongoDB.Driver.Core.Connections.IStreamFactory,MongoDB.Driver.Core", "MongoDB.Driver.Core.Connections.IStreamFactory");
            feature.AddKnownType("MongoDB.Driver.Core.Connections.KeepAliveValues,MongoDB.Driver.Core", "MongoDB.Driver.Core.Connections.KeepAliveValues");
            feature.AddKnownType("MongoDB.Driver.Core.Connections.SslStreamFactory,MongoDB.Driver.Core", "MongoDB.Driver.Core.Connections.SslStreamFactory");
            feature.AddKnownType("MongoDB.Driver.Core.Connections.TcpStreamFactory,MongoDB.Driver.Core", "MongoDB.Driver.Core.Connections.TcpStreamFactory");
            feature.AddKnownType("MongoDB.Driver.Core.Connections.TcpStreamFactory+PreferredAddressFamilyComparer,MongoDB.Driver.Core", "MongoDB.Driver.Core.Connections.PreferredAddressFamilyComparer");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ClusterAddedServerEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ClusterAddedServerEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ClusterAddingServerEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ClusterAddingServerEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ClusterClosedEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ClusterClosedEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ClusterClosingEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ClusterClosingEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ClusterDescriptionChangedEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ClusterDescriptionChangedEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ClusterOpenedEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ClusterOpenedEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ClusterOpeningEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ClusterOpeningEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ClusterRemovedServerEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ClusterRemovedServerEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ClusterRemovingServerEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ClusterRemovingServerEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ClusterSelectedServerEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ClusterSelectedServerEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ClusterSelectingServerEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ClusterSelectingServerEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ClusterSelectingServerFailedEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ClusterSelectingServerFailedEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.CommandFailedEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.CommandFailedEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.CommandStartedEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.CommandStartedEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.CommandSucceededEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.CommandSucceededEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ConnectionCheckOutFailedReason,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ConnectionCheckOutFailedReason");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ConnectionClosedEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ConnectionClosedEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ConnectionClosedReason,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ConnectionClosedReason");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ConnectionClosingEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ConnectionClosingEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ConnectionCreatedEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ConnectionCreatedEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ConnectionFailedEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ConnectionFailedEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ConnectionOpenedEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ConnectionOpenedEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ConnectionOpeningEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ConnectionOpeningEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ConnectionOpeningFailedEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ConnectionOpeningFailedEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ConnectionPoolAddedConnectionEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ConnectionPoolAddedConnectionEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ConnectionPoolAddingConnectionEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ConnectionPoolAddingConnectionEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ConnectionPoolCheckedInConnectionEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ConnectionPoolCheckedInConnectionEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ConnectionPoolCheckedOutConnectionEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ConnectionPoolCheckedOutConnectionEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ConnectionPoolCheckingInConnectionEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ConnectionPoolCheckingInConnectionEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ConnectionPoolCheckingOutConnectionEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ConnectionPoolCheckingOutConnectionEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ConnectionPoolCheckingOutConnectionFailedEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ConnectionPoolCheckingOutConnectionFailedEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ConnectionPoolClearedEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ConnectionPoolClearedEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ConnectionPoolClearingEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ConnectionPoolClearingEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ConnectionPoolClosedEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ConnectionPoolClosedEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ConnectionPoolClosingEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ConnectionPoolClosingEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ConnectionPoolOpenedEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ConnectionPoolOpenedEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ConnectionPoolOpeningEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ConnectionPoolOpeningEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ConnectionPoolReadyEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ConnectionPoolReadyEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ConnectionPoolRemovedConnectionEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ConnectionPoolRemovedConnectionEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ConnectionPoolRemovingConnectionEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ConnectionPoolRemovingConnectionEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ConnectionReceivedMessageEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ConnectionReceivedMessageEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ConnectionReceivingMessageEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ConnectionReceivingMessageEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ConnectionReceivingMessageFailedEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ConnectionReceivingMessageFailedEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ConnectionSendingMessagesEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ConnectionSendingMessagesEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ConnectionSendingMessagesFailedEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ConnectionSendingMessagesFailedEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ConnectionSentMessagesEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ConnectionSentMessagesEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.EventAggregator,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.EventAggregator");
            feature.AddKnownType("MongoDB.Driver.Core.Events.EventContext+NoOpDisposer,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.NoOpDisposer");
            feature.AddKnownType("MongoDB.Driver.Core.Events.EventContext+FindOperationDisposer,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.FindOperationDisposer");
            feature.AddKnownType("MongoDB.Driver.Core.Events.EventContext+KillCursorsOperationDisposer,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.KillCursorsOperationDisposer");
            feature.AddKnownType("MongoDB.Driver.Core.Events.EventContext+OperationIdDisposer,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.OperationIdDisposer");
            feature.AddKnownType("MongoDB.Driver.Core.Events.IEventSubscriber,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.IEventSubscriber");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ReflectionEventSubscriber,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ReflectionEventSubscriber");
            feature.AddKnownType("MongoDB.Driver.Core.Events.SdamInformationEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.SdamInformationEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ServerClosedEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ServerClosedEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ServerClosingEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ServerClosingEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ServerDescriptionChangedEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ServerDescriptionChangedEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ServerHeartbeatFailedEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ServerHeartbeatFailedEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ServerHeartbeatStartedEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ServerHeartbeatStartedEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ServerHeartbeatSucceededEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ServerHeartbeatSucceededEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ServerOpenedEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ServerOpenedEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ServerOpeningEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ServerOpeningEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.SingleEventSubscriber`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.SingleEventSubscriber`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Events.Diagnostics.TraceSourceCommandEventSubscriber,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.Diagnostics.TraceSourceCommandEventSubscriber");
            feature.AddKnownType("MongoDB.Driver.Core.Events.Diagnostics.TraceSourceEventSubscriber,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.Diagnostics.TraceSourceEventSubscriber");
            feature.AddKnownType("MongoDB.Driver.Core.Events.Diagnostics.TraceSourceSdamEventSubscriber,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.Diagnostics.TraceSourceSdamEventSubscriber");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.BatchableSource`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.BatchableSource`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.CachedEnumerable`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.CachedEnumerable`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.DecryptedSecureString,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.DecryptedSecureString");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.DefaultRandomByteGenerator,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.DefaultRandomByteGenerator");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.DefaultRandomStringGenerator,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.DefaultRandomStringGenerator");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.DnsClientWrapper,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.DnsClientWrapper");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.EndPointHelper+EndPointEqualityComparerImpl,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.EndPointEqualityComparerImpl");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.ExponentiallyWeightedMovingAverage,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.ExponentiallyWeightedMovingAverage");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.Feature,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.Feature");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.FixedCountBatchableSourceSerializer`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.FixedCountBatchableSourceSerializer`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.HintForFindAndModifyFeature,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.HintForFindAndModifyFeature");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.IBatchableSource`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.IBatchableSource`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.IClock,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.IClock");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.SrvRecord,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.SrvRecord");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.TxtRecord,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.TxtRecord");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.IDnsResolver,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.IDnsResolver");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.IndexMap,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.IndexMap");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.IndexMap+RangeBased,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.MongoDB.Driver.Core.Misc.IndexMap.RangeBased");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.IndexMap+DictionaryBased,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.MongoDB.Driver.Core.Misc.IndexMap.DictionaryBased");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.InterlockedInt32,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.InterlockedInt32");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.IRandomByteGenerator,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.IRandomByteGenerator");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.IRandomStringGenerator,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.IRandomStringGenerator");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.Metronome,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.Metronome");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.OperatingSystemPlatform,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.OperatingSystemPlatform");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.Range`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.Range`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.ReadAheadEnumerable`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.ReadAheadEnumerable`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.ReadAheadEnumerable`1+ReadAheadEnumerator,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.ReadAheadEnumerator'1");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.ReferenceCounted`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.ReferenceCounted`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.SemanticVersion,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.SemanticVersion");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.SemaphoreSlimRequest,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.SemaphoreSlimRequest");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.SemaphoreSlimSignalable,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.SemaphoreSlimSignalable");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.SemaphoreSlimSignalable+SemaphoreWaitResult,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.MongoDB.Driver.Core.Misc.SemaphoreSlimSignalable.SemaphoreWaitResult");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.SemaphoreSlimSignalable+CancellationContext,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.CancellationContext");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.SemaphoreSlimSignalable+SemaphoreSlimSignalableAwaiter,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.MongoDB.Driver.Core.Misc.SemaphoreSlimSignalable.SemaphoreSlimSignalableAwaiter");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.ServerVersion,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.ServerVersion");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.SizeLimitingBatchableSourceSerializer`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.SizeLimitingBatchableSourceSerializer`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.SystemClock,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.SystemClock");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.TaskExtensions+YieldNoContextAwaitable,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.YieldNoContextAwaitable");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.TaskExtensions+YieldNoContextAwaitable+YieldNoContextAwaiter,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.MongoDB.Driver.Core.Misc.YieldNoContextAwaitable.YieldNoContextAwaiter");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.ToStringComparer`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.ToStringComparer`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.WireVersion+WireVersionInfo,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.WireVersionInfo");
            feature.AddKnownType("MongoDB.Driver.Core.NativeLibraryLoader.DarwinLibraryLoader,MongoDB.Driver.Core", "MongoDB.Driver.Core.NativeLibraryLoader.DarwinLibraryLoader");
            feature.AddKnownType("MongoDB.Driver.Core.NativeLibraryLoader.ILibraryLocator,MongoDB.Driver.Core", "MongoDB.Driver.Core.NativeLibraryLoader.ILibraryLocator");
            feature.AddKnownType("MongoDB.Driver.Core.NativeLibraryLoader.INativeLibraryLoader,MongoDB.Driver.Core", "MongoDB.Driver.Core.NativeLibraryLoader.INativeLibraryLoader");
            feature.AddKnownType("MongoDB.Driver.Core.NativeLibraryLoader.LibraryLoader,MongoDB.Driver.Core", "MongoDB.Driver.Core.NativeLibraryLoader.LibraryLoader");
            feature.AddKnownType("MongoDB.Driver.Core.NativeLibraryLoader.LinuxLibraryLoader,MongoDB.Driver.Core", "MongoDB.Driver.Core.NativeLibraryLoader.LinuxLibraryLoader");
            feature.AddKnownType("MongoDB.Driver.Core.NativeLibraryLoader.PinnedBuffer,MongoDB.Driver.Core", "MongoDB.Driver.Core.NativeLibraryLoader.PinnedBuffer");
            feature.AddKnownType("MongoDB.Driver.Core.NativeLibraryLoader.RelativeLibraryLocatorBase,MongoDB.Driver.Core", "MongoDB.Driver.Core.NativeLibraryLoader.RelativeLibraryLocatorBase");
            feature.AddKnownType("MongoDB.Driver.Core.NativeLibraryLoader.WindowsLibraryLoader,MongoDB.Driver.Core", "MongoDB.Driver.Core.NativeLibraryLoader.WindowsLibraryLoader");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.AggregateExplainOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.AggregateExplainOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.AggregateOperation`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.AggregateOperation`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.AggregateOperation`1+AggregateResult,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.AggregateResult'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.AggregateOperation`1+AggregateResultDeserializer,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.AggregateResultDeserializer'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.AggregateOperation`1+CursorDeserializer,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.CursorDeserializer'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.AggregateToCollectionOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.AggregateToCollectionOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.AggregateToCollectionOperation+MayUseSecondary,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.MayUseSecondary");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.AsyncCursor`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.AsyncCursor`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.AsyncCursorEnumerableOneTimeAdapter`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.AsyncCursorEnumerableOneTimeAdapter`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.AsyncCursorEnumerator`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.AsyncCursorEnumerator`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.AsyncCursorSourceEnumerableAdapter`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.AsyncCursorSourceEnumerableAdapter`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.BulkDeleteOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.BulkDeleteOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.BulkInsertOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.BulkInsertOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.BulkInsertOperation+InsertRequestSerializer,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.InsertRequestSerializer");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.BulkMixedWriteOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.BulkMixedWriteOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.BulkMixedWriteOperation+Batch,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.Batch");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.BulkMixedWriteOperation+BatchHelper,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.BatchHelper");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.BulkMixedWriteOperation+BatchHelper+WriteRequestWithIndex,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.WriteRequestWithIndex");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.BulkUnmixedWriteOperationBase`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.BulkUnmixedWriteOperationBase`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.BulkUnmixedWriteOperationBase`1+BatchHelper,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.BatchHelper'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.BulkUnmixedWriteOperationBase`1+Batch,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.Batch'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.BulkUnmixedWriteOperationEmulatorBase`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.BulkUnmixedWriteOperationEmulatorBase`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.BulkUnmixedWriteOperationEmulatorBase`1+BatchHelper,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.BatchHelper'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.BulkUnmixedWriteOperationEmulatorBase`1+BatchHelper+Batch,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.MongoDB.Driver.Core.Operations.BatchHelper'1.Batch'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.BulkUpdateOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.BulkUpdateOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.BulkWriteBatchResult,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.BulkWriteBatchResult");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.BulkWriteBatchResultCombiner,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.BulkWriteBatchResultCombiner");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.BulkWriteConcernError,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.BulkWriteConcernError");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.BulkWriteOperationError,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.BulkWriteOperationError");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.BulkWriteOperationResult,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.BulkWriteOperationResult");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.BulkWriteOperationResult+Acknowledged,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.MongoDB.Driver.Core.Operations.BulkWriteOperationResult.Acknowledged");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.BulkWriteOperationResult+Unacknowledged,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.MongoDB.Driver.Core.Operations.BulkWriteOperationResult.Unacknowledged");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.BulkWriteOperationResultConverter,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.BulkWriteOperationResultConverter");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.BulkWriteOperationUpsert,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.BulkWriteOperationUpsert");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.ChangeStreamCursor`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.ChangeStreamCursor`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.ChangeStreamCursor`1+ResumeValues,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.ResumeValues'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.IChangeStreamOperation`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.IChangeStreamOperation`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.ChangeStreamOperation`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.ChangeStreamOperation`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.CommandOperationBase`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.CommandOperationBase`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.CountDocumentsOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.CountDocumentsOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.CountOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.CountOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.CreateCollectionOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.CreateCollectionOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.CreateCollectionOperation+CreateCollectionFlags,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.CreateCollectionFlags");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.CreateIndexesOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.CreateIndexesOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.CreateIndexesUsingCommandOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.CreateIndexesUsingCommandOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.CreateIndexRequest,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.CreateIndexRequest");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.CreateViewOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.CreateViewOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.CursorType,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.CursorType");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.DatabaseExistsOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.DatabaseExistsOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.DelayedEvaluationWriteConcernSerializer,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.DelayedEvaluationWriteConcernSerializer");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.DeleteOpcodeOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.DeleteOpcodeOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.DeleteOpcodeOperationEmulator,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.DeleteOpcodeOperationEmulator");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.DeleteRequest,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.DeleteRequest");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.DistinctOperation`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.DistinctOperation`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.DistinctOperation`1+DistinctResult,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.DistinctResult'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.DistinctOperation`1+DistinctResultDeserializer,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.DistinctResultDeserializer'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.DropCollectionOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.DropCollectionOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.DropDatabaseOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.DropDatabaseOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.DropIndexOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.DropIndexOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.ElementDeserializer`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.ElementDeserializer`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.EndTransactionOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.EndTransactionOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.AbortTransactionOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.AbortTransactionOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.CommitTransactionOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.CommitTransactionOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.EstimatedDocumentCountOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.EstimatedDocumentCountOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.EvalOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.EvalOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.IExplainableOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.IExplainableOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.ExplainOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.ExplainOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.ExplainVerbosity,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.ExplainVerbosity");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.FindAndModifyValueDeserializer`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.FindAndModifyValueDeserializer`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.FindOneAndDeleteOperation`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.FindOneAndDeleteOperation`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.FindOneAndReplaceOperation`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.FindOneAndReplaceOperation`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.FindOneAndUpdateOperation`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.FindOneAndUpdateOperation`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.FindOneAndUpdateOperation`1+Validator,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.Validator'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.FindOperation`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.FindOperation`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.GeoNearOperation`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.GeoNearOperation`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.GeoSearchOperation`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.GeoSearchOperation`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.GroupOperation`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.GroupOperation`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.InsertOpcodeOperation`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.InsertOpcodeOperation`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.InsertOpcodeOperationEmulator`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.InsertOpcodeOperationEmulator`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.InsertRequest,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.InsertRequest");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.IReadOperation`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.IReadOperation`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.IWriteOperation`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.IWriteOperation`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.IOperationClock,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.IOperationClock");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.IExecutableInRetryableReadContext`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.IExecutableInRetryableReadContext`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.IExecutableInRetryableWriteContext`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.IExecutableInRetryableWriteContext`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.IRetryableReadOperation`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.IRetryableReadOperation`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.IRetryableWriteOperation`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.IRetryableWriteOperation`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.ListCollectionsOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.ListCollectionsOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.ListDatabasesOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.ListDatabasesOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.ListIndexesOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.ListIndexesOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.ListIndexesUsingCommandOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.ListIndexesUsingCommandOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.MapReduceLegacyOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.MapReduceLegacyOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.MapReduceOperation`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.MapReduceOperation`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.MapReduceOperationBase,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.MapReduceOperationBase");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.MapReduceOutputMode,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.MapReduceOutputMode");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.MapReduceOutputToCollectionOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.MapReduceOutputToCollectionOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.MongoBulkWriteOperationException,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.MongoBulkWriteOperationException");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.OperationClock,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.OperationClock");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.NoOperationClock,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.NoOperationClock");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.ParallelScanOperation`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.ParallelScanOperation`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.PingOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.PingOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.ReadCommandOperation`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.ReadCommandOperation`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.ReIndexOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.ReIndexOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.RenameCollectionOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.RenameCollectionOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.RetryableDeleteCommandOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.RetryableDeleteCommandOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.RetryableDeleteCommandOperation+DeleteRequestSerializer,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.DeleteRequestSerializer");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.RetryableInsertCommandOperation`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.RetryableInsertCommandOperation`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.RetryableInsertCommandOperation`1+InsertSerializer,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.InsertSerializer'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.RetryableReadContext,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.RetryableReadContext");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.RetryableUpdateCommandOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.RetryableUpdateCommandOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.RetryableUpdateCommandOperation+UpdateRequestSerializer,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.UpdateRequestSerializer");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.RetryableWriteCommandOperationBase,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.RetryableWriteCommandOperationBase");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.RetryableWriteCommandOperationBase+CommandArgs,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.CommandArgs");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.RetryableWriteContext,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.RetryableWriteContext");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.ReturnDocument,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.ReturnDocument");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.UpdateOpcodeOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.UpdateOpcodeOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.UpdateOpcodeOperationEmulator,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.UpdateOpcodeOperationEmulator");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.UpdateRequest,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.UpdateRequest");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.UpdateType,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.UpdateType");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.WriteCommandOperation`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.WriteCommandOperation`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.WriteRequest,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.WriteRequest");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.WriteRequestType,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.WriteRequestType");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.ElementNameValidators.ReplacementElementNameValidator,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.ElementNameValidators.ReplacementElementNameValidator");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.ElementNameValidators.UpdateElementNameValidator,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.ElementNameValidators.UpdateElementNameValidator");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.ElementNameValidators.UpdateOrReplacementElementNameValidator,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.ElementNameValidators.UpdateOrReplacementElementNameValidator");
            feature.AddKnownType("MongoDB.Driver.Core.Servers.ClusterClockAdvancingCoreSession,MongoDB.Driver.Core", "MongoDB.Driver.Core.Servers.ClusterClockAdvancingCoreSession");
            feature.AddKnownType("MongoDB.Driver.Core.Servers.DefaultServer,MongoDB.Driver.Core", "MongoDB.Driver.Core.Servers.DefaultServer");
            feature.AddKnownType("MongoDB.Driver.Core.Servers.HeartbeatDelay,MongoDB.Driver.Core", "MongoDB.Driver.Core.Servers.HeartbeatDelay");
            feature.AddKnownType("MongoDB.Driver.Core.Servers.IClusterableServerFactory,MongoDB.Driver.Core", "MongoDB.Driver.Core.Servers.IClusterableServerFactory");
            feature.AddKnownType("MongoDB.Driver.Core.Servers.IServer,MongoDB.Driver.Core", "MongoDB.Driver.Core.Servers.IServer");
            feature.AddKnownType("MongoDB.Driver.Core.Servers.IClusterableServer,MongoDB.Driver.Core", "MongoDB.Driver.Core.Servers.IClusterableServer");
            feature.AddKnownType("MongoDB.Driver.Core.Servers.IServerMonitor,MongoDB.Driver.Core", "MongoDB.Driver.Core.Servers.IServerMonitor");
            feature.AddKnownType("MongoDB.Driver.Core.Servers.IServerMonitorFactory,MongoDB.Driver.Core", "MongoDB.Driver.Core.Servers.IServerMonitorFactory");
            feature.AddKnownType("MongoDB.Driver.Core.Servers.LoadBalancedServer,MongoDB.Driver.Core", "MongoDB.Driver.Core.Servers.LoadBalancedServer");
            feature.AddKnownType("MongoDB.Driver.Core.Servers.IRoundTripTimeMonitor,MongoDB.Driver.Core", "MongoDB.Driver.Core.Servers.IRoundTripTimeMonitor");
            feature.AddKnownType("MongoDB.Driver.Core.Servers.RoundTripTimeMonitor,MongoDB.Driver.Core", "MongoDB.Driver.Core.Servers.RoundTripTimeMonitor");
            feature.AddKnownType("MongoDB.Driver.Core.Servers.Server,MongoDB.Driver.Core", "MongoDB.Driver.Core.Servers.Server");
            feature.AddKnownType("MongoDB.Driver.Core.Servers.Server+ServerChannel,MongoDB.Driver.Core", "MongoDB.Driver.Core.Servers.ServerChannel");
            feature.AddKnownType("MongoDB.Driver.Core.Servers.ServerDescription,MongoDB.Driver.Core", "MongoDB.Driver.Core.Servers.ServerDescription");
            feature.AddKnownType("MongoDB.Driver.Core.Servers.ServerDescriptionChangedEventArgs,MongoDB.Driver.Core", "MongoDB.Driver.Core.Servers.ServerDescriptionChangedEventArgs");
            feature.AddKnownType("MongoDB.Driver.Core.Servers.ServerFactory,MongoDB.Driver.Core", "MongoDB.Driver.Core.Servers.ServerFactory");
            feature.AddKnownType("MongoDB.Driver.Core.Servers.ServerId,MongoDB.Driver.Core", "MongoDB.Driver.Core.Servers.ServerId");
            feature.AddKnownType("MongoDB.Driver.Core.Servers.ServerMonitor,MongoDB.Driver.Core", "MongoDB.Driver.Core.Servers.ServerMonitor");
            feature.AddKnownType("MongoDB.Driver.Core.Servers.ServerMonitorFactory,MongoDB.Driver.Core", "MongoDB.Driver.Core.Servers.ServerMonitorFactory");
            feature.AddKnownType("MongoDB.Driver.Core.Servers.ServerMonitorSettings,MongoDB.Driver.Core", "MongoDB.Driver.Core.Servers.ServerMonitorSettings");
            feature.AddKnownType("MongoDB.Driver.Core.Servers.ServerState,MongoDB.Driver.Core", "MongoDB.Driver.Core.Servers.ServerState");
            feature.AddKnownType("MongoDB.Driver.Core.Servers.ServerType,MongoDB.Driver.Core", "MongoDB.Driver.Core.Servers.ServerType");
            feature.AddKnownType("MongoDB.Driver.Core.Servers.TopologyVersion,MongoDB.Driver.Core", "MongoDB.Driver.Core.Servers.TopologyVersion");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.CommandMessageFieldDecryptor,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.CommandMessageFieldDecryptor");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.CommandMessageFieldEncryptor,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.CommandMessageFieldEncryptor");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.CommandResponseHandling,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.CommandResponseHandling");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.CommandUsingCommandMessageWireProtocol`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.CommandUsingCommandMessageWireProtocol`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.CommandUsingQueryMessageWireProtocol`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.CommandUsingQueryMessageWireProtocol`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.CommandUsingQueryMessageWireProtocol`1+IgnoredReply,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.IgnoredReply'1");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.CommandUsingQueryMessageWireProtocol`1+IgnoredReplySerializer,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.IgnoredReplySerializer'1");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.CommandWireProtocol`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.CommandWireProtocol`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.CursorBatch`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.CursorBatch`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.IBinaryCommandFieldEncryptor,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.IBinaryCommandFieldEncryptor");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.IBinaryDocumentFieldDecryptor,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.IBinaryDocumentFieldDecryptor");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.IWireProtocol,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.IWireProtocol");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.IWireProtocol`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.IWireProtocol`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.QueryWireProtocol`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.QueryWireProtocol`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.WriteWireProtocolBase,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.WriteWireProtocolBase");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.CommandMessage,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.CommandMessage");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.CommandMessageDisposer,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.CommandMessageDisposer");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.PayloadType,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.PayloadType");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.CommandMessageSection,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.CommandMessageSection");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Type0CommandMessageSection,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Type0CommandMessageSection");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Type0CommandMessageSection`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Type0CommandMessageSection`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Type1CommandMessageSection,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Type1CommandMessageSection");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Type1CommandMessageSection`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Type1CommandMessageSection`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.CommandRequestMessage,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.CommandRequestMessage");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.CommandResponseMessage,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.CommandResponseMessage");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.CompressedMessage,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.CompressedMessage");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.MongoDBMessage,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.MongoDBMessage");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.MongoDBMessageType,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.MongoDBMessageType");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.QueryMessage,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.QueryMessage");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.ReplyMessage`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.ReplyMessage`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.RequestMessage,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.RequestMessage");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.ResponseMessage,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.ResponseMessage");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Encoders.CommandResponseMessageEncoderSelector,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Encoders.CommandResponseMessageEncoderSelector");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Encoders.CompressedMessageEncoderSelector,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Encoders.CompressedMessageEncoderSelector");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Encoders.IEncodableMessage,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Encoders.IEncodableMessage");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Encoders.IMessageEncoder,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Encoders.IMessageEncoder");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Encoders.IMessageEncoderFactory,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Encoders.IMessageEncoderFactory");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Encoders.IMessageEncoderPostProcessor,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Encoders.IMessageEncoderPostProcessor");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Encoders.IMessageEncoderSelector,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Encoders.IMessageEncoderSelector");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Encoders.ReplyMessageEncoderSelector`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Encoders.ReplyMessageEncoderSelector`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.BinaryMessageEncoderFactory,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.BinaryMessageEncoderFactory");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.CommandMessageBinaryEncoder,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.CommandMessageBinaryEncoder");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.CommandMessageBinaryEncoder+PostProcessor,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.PostProcessor");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.CommandRequestMessageBinaryEncoder,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.CommandRequestMessageBinaryEncoder");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.CommandResponseMessageBinaryEncoder,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.CommandResponseMessageBinaryEncoder");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.CompressedMessageBinaryEncoder,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.CompressedMessageBinaryEncoder");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.MessageBinaryEncoderBase,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.MessageBinaryEncoderBase");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.Opcode,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.Opcode");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.OpMsgFlags,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.OpMsgFlags");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.QueryMessageBinaryEncoder,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.QueryMessageBinaryEncoder");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.QueryMessageBinaryEncoder+PostProcessor,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.PostProcessor");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.QueryMessageBinaryEncoder+QueryFlags,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.QueryFlags");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.ReplyMessageBinaryEncoder`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.ReplyMessageBinaryEncoder`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.ReplyMessageBinaryEncoder`1+ResponseFlags,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.ResponseFlags'1");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.CommandMessageJsonEncoder,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.CommandMessageJsonEncoder");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.CommandRequestMessageJsonEncoder,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.CommandRequestMessageJsonEncoder");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.CommandResponseMessageJsonEncoder,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.CommandResponseMessageJsonEncoder");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.CompressedMessageJsonEncoder,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.CompressedMessageJsonEncoder");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.JsonMessageEncoderFactory,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.JsonMessageEncoderFactory");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.MessageJsonEncoderBase,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.MessageJsonEncoderBase");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.QueryMessageJsonEncoder,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.QueryMessageJsonEncoder");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.ReplyMessageJsonEncoder`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.ReplyMessageJsonEncoder`1'1");
            feature.AddKnownType("MongoDB.Shared.Hasher,MongoDB.Driver.Core", "MongoDB.Shared.Hasher");
            feature.AddKnownType("System.Runtime.CompilerServices.NativeIntegerAttribute", "NativeIntegerAttribute");
            feature.AddKnownType("MongoDB.Driver.AggregateBucketAutoGranularity,MongoDB.Driver", "MongoDB.Driver.AggregateBucketAutoGranularity");
            feature.AddKnownType("MongoDB.Driver.AggregateBucketAutoOptions,MongoDB.Driver", "MongoDB.Driver.AggregateBucketAutoOptions");
            feature.AddKnownType("MongoDB.Driver.AggregateBucketAutoResult`1,MongoDB.Driver", "MongoDB.Driver.AggregateBucketAutoResult`1'1");
            feature.AddKnownType("MongoDB.Driver.AggregateBucketAutoResultId`1,MongoDB.Driver", "MongoDB.Driver.AggregateBucketAutoResultId`1'1");
            feature.AddKnownType("MongoDB.Driver.AggregateBucketOptions`1,MongoDB.Driver", "MongoDB.Driver.AggregateBucketOptions`1'1");
            feature.AddKnownType("MongoDB.Driver.AggregateBucketResult`1,MongoDB.Driver", "MongoDB.Driver.AggregateBucketResult`1'1");
            feature.AddKnownType("MongoDB.Driver.AggregateCountResult,MongoDB.Driver", "MongoDB.Driver.AggregateCountResult");
            feature.AddKnownType("MongoDB.Driver.AggregateExpressionDefinition`2,MongoDB.Driver", "MongoDB.Driver.AggregateExpressionDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.BsonValueAggregateExpressionDefinition`2,MongoDB.Driver", "MongoDB.Driver.BsonValueAggregateExpressionDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.ExpressionAggregateExpressionDefinition`2,MongoDB.Driver", "MongoDB.Driver.ExpressionAggregateExpressionDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.AggregateFacet`1,MongoDB.Driver", "MongoDB.Driver.AggregateFacet`1'1");
            feature.AddKnownType("MongoDB.Driver.AggregateFacet`2,MongoDB.Driver", "MongoDB.Driver.AggregateFacet`2'2");
            feature.AddKnownType("MongoDB.Driver.AggregateFacetOptions`1,MongoDB.Driver", "MongoDB.Driver.AggregateFacetOptions`1'1");
            feature.AddKnownType("MongoDB.Driver.AggregateFacetResult,MongoDB.Driver", "MongoDB.Driver.AggregateFacetResult");
            feature.AddKnownType("MongoDB.Driver.AggregateFacetResult`1,MongoDB.Driver", "MongoDB.Driver.AggregateFacetResult`1'1");
            feature.AddKnownType("MongoDB.Driver.AggregateFacetResults,MongoDB.Driver", "MongoDB.Driver.AggregateFacetResults");
            feature.AddKnownType("MongoDB.Driver.AggregateFacetResultsSerializer,MongoDB.Driver", "MongoDB.Driver.AggregateFacetResultsSerializer");
            feature.AddKnownType("MongoDB.Driver.AggregateFluent`2,MongoDB.Driver", "MongoDB.Driver.AggregateFluent`2'2");
            feature.AddKnownType("MongoDB.Driver.CollectionAggregateFluent`2,MongoDB.Driver", "MongoDB.Driver.CollectionAggregateFluent`2'2");
            feature.AddKnownType("MongoDB.Driver.DatabaseAggregateFluent`1,MongoDB.Driver", "MongoDB.Driver.DatabaseAggregateFluent`1'1");
            feature.AddKnownType("MongoDB.Driver.AggregateFluentBase`1,MongoDB.Driver", "MongoDB.Driver.AggregateFluentBase`1'1");
            feature.AddKnownType("MongoDB.Driver.AggregateGraphLookupOptions`3,MongoDB.Driver", "MongoDB.Driver.AggregateGraphLookupOptions`3'3");
            feature.AddKnownType("MongoDB.Driver.AggregateLookupOptions`2,MongoDB.Driver", "MongoDB.Driver.AggregateLookupOptions`2'2");
            feature.AddKnownType("MongoDB.Driver.AggregateOptions,MongoDB.Driver", "MongoDB.Driver.AggregateOptions");
            feature.AddKnownType("MongoDB.Driver.AggregateSortByCountResult`1,MongoDB.Driver", "MongoDB.Driver.AggregateSortByCountResult`1'1");
            feature.AddKnownType("MongoDB.Driver.AggregateStringTranslationMode,MongoDB.Driver", "MongoDB.Driver.AggregateStringTranslationMode");
            feature.AddKnownType("MongoDB.Driver.AggregateUnwindOptions`1,MongoDB.Driver", "MongoDB.Driver.AggregateUnwindOptions`1'1");
            feature.AddKnownType("MongoDB.Driver.ArrayFilterDefinition,MongoDB.Driver", "MongoDB.Driver.ArrayFilterDefinition");
            feature.AddKnownType("MongoDB.Driver.ArrayFilterDefinition`1,MongoDB.Driver", "MongoDB.Driver.ArrayFilterDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.BsonDocumentArrayFilterDefinition`1,MongoDB.Driver", "MongoDB.Driver.BsonDocumentArrayFilterDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.JsonArrayFilterDefinition`1,MongoDB.Driver", "MongoDB.Driver.JsonArrayFilterDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.BulkWriteError,MongoDB.Driver", "MongoDB.Driver.BulkWriteError");
            feature.AddKnownType("MongoDB.Driver.BulkWriteOptions,MongoDB.Driver", "MongoDB.Driver.BulkWriteOptions");
            feature.AddKnownType("MongoDB.Driver.BulkWriteResult,MongoDB.Driver", "MongoDB.Driver.BulkWriteResult");
            feature.AddKnownType("MongoDB.Driver.BulkWriteResult`1,MongoDB.Driver", "MongoDB.Driver.BulkWriteResult`1'1");
            feature.AddKnownType("MongoDB.Driver.BulkWriteResult`1+Acknowledged,MongoDB.Driver", "MongoDB.Driver.MongoDB.Driver.BulkWriteResult`1'1.Acknowledged'1");
            feature.AddKnownType("MongoDB.Driver.BulkWriteResult`1+Unacknowledged,MongoDB.Driver", "MongoDB.Driver.MongoDB.Driver.BulkWriteResult`1'1.Unacknowledged'1");
            feature.AddKnownType("MongoDB.Driver.BulkWriteUpsert,MongoDB.Driver", "MongoDB.Driver.BulkWriteUpsert");
            feature.AddKnownType("MongoDB.Driver.ChangeStreamOptions,MongoDB.Driver", "MongoDB.Driver.ChangeStreamOptions");
            feature.AddKnownType("MongoDB.Driver.ChangeStreamStageOptions,MongoDB.Driver", "MongoDB.Driver.ChangeStreamStageOptions");
            feature.AddKnownType("MongoDB.Driver.ClientSessionHandle,MongoDB.Driver", "MongoDB.Driver.ClientSessionHandle");
            feature.AddKnownType("MongoDB.Driver.ClientSessionOptions,MongoDB.Driver", "MongoDB.Driver.ClientSessionOptions");
            feature.AddKnownType("MongoDB.Driver.ClusterKey,MongoDB.Driver", "MongoDB.Driver.ClusterKey");
            feature.AddKnownType("MongoDB.Driver.ClusterRegistry,MongoDB.Driver", "MongoDB.Driver.ClusterRegistry");
            feature.AddKnownType("MongoDB.Driver.RenderedCommand`1,MongoDB.Driver", "MongoDB.Driver.RenderedCommand`1'1");
            feature.AddKnownType("MongoDB.Driver.Command`1,MongoDB.Driver", "MongoDB.Driver.Command`1'1");
            feature.AddKnownType("MongoDB.Driver.BsonDocumentCommand`1,MongoDB.Driver", "MongoDB.Driver.BsonDocumentCommand`1'1");
            feature.AddKnownType("MongoDB.Driver.JsonCommand`1,MongoDB.Driver", "MongoDB.Driver.JsonCommand`1'1");
            feature.AddKnownType("MongoDB.Driver.ObjectCommand`1,MongoDB.Driver", "MongoDB.Driver.ObjectCommand`1'1");
            feature.AddKnownType("MongoDB.Driver.ConnectionMode,MongoDB.Driver", "MongoDB.Driver.ConnectionMode");
            feature.AddKnownType("MongoDB.Driver.CountOptions,MongoDB.Driver", "MongoDB.Driver.CountOptions");
            feature.AddKnownType("MongoDB.Driver.CreateCollectionOptions,MongoDB.Driver", "MongoDB.Driver.CreateCollectionOptions");
            feature.AddKnownType("MongoDB.Driver.CreateCollectionOptions`1,MongoDB.Driver", "MongoDB.Driver.CreateCollectionOptions`1'1");
            feature.AddKnownType("MongoDB.Driver.CreateIndexModel`1,MongoDB.Driver", "MongoDB.Driver.CreateIndexModel`1'1");
            feature.AddKnownType("MongoDB.Driver.CreateIndexOptions,MongoDB.Driver", "MongoDB.Driver.CreateIndexOptions");
            feature.AddKnownType("MongoDB.Driver.CreateIndexOptions`1,MongoDB.Driver", "MongoDB.Driver.CreateIndexOptions`1'1");
            feature.AddKnownType("MongoDB.Driver.CreateManyIndexesOptions,MongoDB.Driver", "MongoDB.Driver.CreateManyIndexesOptions");
            feature.AddKnownType("MongoDB.Driver.CreateOneIndexOptions,MongoDB.Driver", "MongoDB.Driver.CreateOneIndexOptions");
            feature.AddKnownType("MongoDB.Driver.CreateViewOptions`1,MongoDB.Driver", "MongoDB.Driver.CreateViewOptions`1'1");
            feature.AddKnownType("MongoDB.Driver.CursorType,MongoDB.Driver", "MongoDB.Driver.CursorType");
            feature.AddKnownType("MongoDB.Driver.DecryptedSecureString,MongoDB.Driver", "MongoDB.Driver.DecryptedSecureString");
            feature.AddKnownType("MongoDB.Driver.DeleteManyModel`1,MongoDB.Driver", "MongoDB.Driver.DeleteManyModel`1'1");
            feature.AddKnownType("MongoDB.Driver.DeleteOneModel`1,MongoDB.Driver", "MongoDB.Driver.DeleteOneModel`1'1");
            feature.AddKnownType("MongoDB.Driver.DeleteOptions,MongoDB.Driver", "MongoDB.Driver.DeleteOptions");
            feature.AddKnownType("MongoDB.Driver.DeleteResult,MongoDB.Driver", "MongoDB.Driver.DeleteResult");
            feature.AddKnownType("MongoDB.Driver.DeleteResult+Acknowledged,MongoDB.Driver", "MongoDB.Driver.MongoDB.Driver.DeleteResult.Acknowledged");
            feature.AddKnownType("MongoDB.Driver.DeleteResult+Unacknowledged,MongoDB.Driver", "MongoDB.Driver.MongoDB.Driver.DeleteResult.Unacknowledged");
            feature.AddKnownType("MongoDB.Driver.DistinctOptions,MongoDB.Driver", "MongoDB.Driver.DistinctOptions");
            feature.AddKnownType("MongoDB.Driver.DocumentsWindow,MongoDB.Driver", "MongoDB.Driver.DocumentsWindow");
            feature.AddKnownType("MongoDB.Driver.DocumentsWindowBoundary,MongoDB.Driver", "MongoDB.Driver.DocumentsWindowBoundary");
            feature.AddKnownType("MongoDB.Driver.KeywordDocumentsWindowBoundary,MongoDB.Driver", "MongoDB.Driver.KeywordDocumentsWindowBoundary");
            feature.AddKnownType("MongoDB.Driver.PositionDocumentsWindowBoundary,MongoDB.Driver", "MongoDB.Driver.PositionDocumentsWindowBoundary");
            feature.AddKnownType("MongoDB.Driver.DropIndexOptions,MongoDB.Driver", "MongoDB.Driver.DropIndexOptions");
            feature.AddKnownType("MongoDB.Driver.EstimatedDocumentCountOptions,MongoDB.Driver", "MongoDB.Driver.EstimatedDocumentCountOptions");
            feature.AddKnownType("MongoDB.Driver.ExpressionTranslationOptions,MongoDB.Driver", "MongoDB.Driver.ExpressionTranslationOptions");
            feature.AddKnownType("MongoDB.Driver.ExternalEvidence,MongoDB.Driver", "MongoDB.Driver.ExternalEvidence");
            feature.AddKnownType("MongoDB.Driver.RenderedFieldDefinition,MongoDB.Driver", "MongoDB.Driver.RenderedFieldDefinition");
            feature.AddKnownType("MongoDB.Driver.RenderedFieldDefinition`1,MongoDB.Driver", "MongoDB.Driver.RenderedFieldDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.FieldDefinition`1,MongoDB.Driver", "MongoDB.Driver.FieldDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.FieldDefinition`2,MongoDB.Driver", "MongoDB.Driver.FieldDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.ExpressionFieldDefinition`1,MongoDB.Driver", "MongoDB.Driver.ExpressionFieldDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.ExpressionFieldDefinition`2,MongoDB.Driver", "MongoDB.Driver.ExpressionFieldDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.StringFieldDefinition`1,MongoDB.Driver", "MongoDB.Driver.StringFieldDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.StringFieldDefinition`2,MongoDB.Driver", "MongoDB.Driver.StringFieldDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.UntypedFieldDefinitionAdapter`2,MongoDB.Driver", "MongoDB.Driver.UntypedFieldDefinitionAdapter`2'2");
            feature.AddKnownType("MongoDB.Driver.FieldValueSerializerHelper+ConvertIfPossibleSerializer`2,MongoDB.Driver", "MongoDB.Driver.ConvertIfPossibleSerializer`2'2");
            feature.AddKnownType("MongoDB.Driver.FieldValueSerializerHelper+EnumConvertingSerializer`2,MongoDB.Driver", "MongoDB.Driver.EnumConvertingSerializer`2'2");
            feature.AddKnownType("MongoDB.Driver.FieldValueSerializerHelper+IEnumerableSerializer`1,MongoDB.Driver", "MongoDB.Driver.IEnumerableSerializer`1'1");
            feature.AddKnownType("MongoDB.Driver.FieldValueSerializerHelper+NullableEnumConvertingSerializer`2,MongoDB.Driver", "MongoDB.Driver.NullableEnumConvertingSerializer`2'2");
            feature.AddKnownType("MongoDB.Driver.FilterDefinition`1,MongoDB.Driver", "MongoDB.Driver.FilterDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.BsonDocumentFilterDefinition`1,MongoDB.Driver", "MongoDB.Driver.BsonDocumentFilterDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.EmptyFilterDefinition`1,MongoDB.Driver", "MongoDB.Driver.EmptyFilterDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.ExpressionFilterDefinition`1,MongoDB.Driver", "MongoDB.Driver.ExpressionFilterDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.JsonFilterDefinition`1,MongoDB.Driver", "MongoDB.Driver.JsonFilterDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.ObjectFilterDefinition`1,MongoDB.Driver", "MongoDB.Driver.ObjectFilterDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.FilterDefinitionBuilder`1,MongoDB.Driver", "MongoDB.Driver.FilterDefinitionBuilder`1'1");
            feature.AddKnownType("MongoDB.Driver.AndFilterDefinition`1,MongoDB.Driver", "MongoDB.Driver.AndFilterDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.ArrayOperatorFilterDefinition`2,MongoDB.Driver", "MongoDB.Driver.ArrayOperatorFilterDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.ElementMatchFilterDefinition`2,MongoDB.Driver", "MongoDB.Driver.ElementMatchFilterDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.ScalarElementMatchFilterDefinition`1,MongoDB.Driver", "MongoDB.Driver.ScalarElementMatchFilterDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.GeometryOperatorFilterDefinition`2,MongoDB.Driver", "MongoDB.Driver.GeometryOperatorFilterDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.NearFilterDefinition`2,MongoDB.Driver", "MongoDB.Driver.NearFilterDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.NotFilterDefinition`1,MongoDB.Driver", "MongoDB.Driver.NotFilterDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.DocumentOfTypeFilterDefinition`2,MongoDB.Driver", "MongoDB.Driver.DocumentOfTypeFilterDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.FieldOfTypeFilterDefinition`3,MongoDB.Driver", "MongoDB.Driver.FieldOfTypeFilterDefinition`3'3");
            feature.AddKnownType("MongoDB.Driver.OperatorFilterDefinition`1,MongoDB.Driver", "MongoDB.Driver.OperatorFilterDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.OperatorFilterDefinition`2,MongoDB.Driver", "MongoDB.Driver.OperatorFilterDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.OrFilterDefinition`1,MongoDB.Driver", "MongoDB.Driver.OrFilterDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.SimpleFilterDefinition`1,MongoDB.Driver", "MongoDB.Driver.SimpleFilterDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.SimpleFilterDefinition`2,MongoDB.Driver", "MongoDB.Driver.SimpleFilterDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.SingleItemAsArrayOperatorFilterDefinition`2,MongoDB.Driver", "MongoDB.Driver.SingleItemAsArrayOperatorFilterDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.ArrayAsSingleItemOperatorFilterDefinition`2,MongoDB.Driver", "MongoDB.Driver.ArrayAsSingleItemOperatorFilterDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.ArrayAsSingleItemSimpleFilterDefinition`2,MongoDB.Driver", "MongoDB.Driver.ArrayAsSingleItemSimpleFilterDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.ArrayIndexExistsFilterDefinition`1,MongoDB.Driver", "MongoDB.Driver.ArrayIndexExistsFilterDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.UInt32GreaterThanFilterDefinition`1,MongoDB.Driver", "MongoDB.Driver.UInt32GreaterThanFilterDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.UInt32LessThanFilterDefinition`1,MongoDB.Driver", "MongoDB.Driver.UInt32LessThanFilterDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.UInt64GreaterThanFilterDefinition`1,MongoDB.Driver", "MongoDB.Driver.UInt64GreaterThanFilterDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.UInt64LessThanFilterDefinition`1,MongoDB.Driver", "MongoDB.Driver.UInt64LessThanFilterDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.FilteredMongoCollectionBase`1,MongoDB.Driver", "MongoDB.Driver.FilteredMongoCollectionBase`1'1");
            feature.AddKnownType("MongoDB.Driver.FindFluent`2,MongoDB.Driver", "MongoDB.Driver.FindFluent`2'2");
            feature.AddKnownType("MongoDB.Driver.FindFluentBase`2,MongoDB.Driver", "MongoDB.Driver.FindFluentBase`2'2");
            feature.AddKnownType("MongoDB.Driver.FindOneAndDeleteOptions`2,MongoDB.Driver", "MongoDB.Driver.FindOneAndDeleteOptions`2'2");
            feature.AddKnownType("MongoDB.Driver.FindOneAndDeleteOptions`1,MongoDB.Driver", "MongoDB.Driver.FindOneAndDeleteOptions`1'1");
            feature.AddKnownType("MongoDB.Driver.FindOneAndReplaceOptions`2,MongoDB.Driver", "MongoDB.Driver.FindOneAndReplaceOptions`2'2");
            feature.AddKnownType("MongoDB.Driver.FindOneAndReplaceOptions`1,MongoDB.Driver", "MongoDB.Driver.FindOneAndReplaceOptions`1'1");
            feature.AddKnownType("MongoDB.Driver.FindOneAndUpdateOptions`2,MongoDB.Driver", "MongoDB.Driver.FindOneAndUpdateOptions`2'2");
            feature.AddKnownType("MongoDB.Driver.FindOneAndUpdateOptions`1,MongoDB.Driver", "MongoDB.Driver.FindOneAndUpdateOptions`1'1");
            feature.AddKnownType("MongoDB.Driver.FindOptionsBase,MongoDB.Driver", "MongoDB.Driver.FindOptionsBase");
            feature.AddKnownType("MongoDB.Driver.FindOptions,MongoDB.Driver", "MongoDB.Driver.FindOptions");
            feature.AddKnownType("MongoDB.Driver.FindOptions`2,MongoDB.Driver", "MongoDB.Driver.FindOptions`2'2");
            feature.AddKnownType("MongoDB.Driver.FindOptions`1,MongoDB.Driver", "MongoDB.Driver.FindOptions`1'1");
            feature.AddKnownType("MongoDB.Driver.GroupForLinq3Result`3,MongoDB.Driver", "MongoDB.Driver.GroupForLinq3Result`3'3");
            feature.AddKnownType("MongoDB.Driver.IAggregateFluent`1,MongoDB.Driver", "MongoDB.Driver.IAggregateFluent`1'1");
            feature.AddKnownType("MongoDB.Driver.IOrderedAggregateFluent`1,MongoDB.Driver", "MongoDB.Driver.IOrderedAggregateFluent`1'1");
            feature.AddKnownType("MongoDB.Driver.IClientSession,MongoDB.Driver", "MongoDB.Driver.IClientSession");
            feature.AddKnownType("MongoDB.Driver.IClientSessionHandle,MongoDB.Driver", "MongoDB.Driver.IClientSessionHandle");
            feature.AddKnownType("MongoDB.Driver.IFilteredMongoCollection`1,MongoDB.Driver", "MongoDB.Driver.IFilteredMongoCollection`1'1");
            feature.AddKnownType("MongoDB.Driver.IFindFluent`2,MongoDB.Driver", "MongoDB.Driver.IFindFluent`2'2");
            feature.AddKnownType("MongoDB.Driver.IOrderedFindFluent`2,MongoDB.Driver", "MongoDB.Driver.IOrderedFindFluent`2'2");
            feature.AddKnownType("MongoDB.Driver.IInheritableMongoClientSettings,MongoDB.Driver", "MongoDB.Driver.IInheritableMongoClientSettings");
            feature.AddKnownType("MongoDB.Driver.IMongoClient,MongoDB.Driver", "MongoDB.Driver.IMongoClient");
            feature.AddKnownType("MongoDB.Driver.IMongoCollection`1,MongoDB.Driver", "MongoDB.Driver.IMongoCollection`1'1");
            feature.AddKnownType("MongoDB.Driver.IMongoDatabase,MongoDB.Driver", "MongoDB.Driver.IMongoDatabase");
            feature.AddKnownType("MongoDB.Driver.IMongoIndexManager`1,MongoDB.Driver", "MongoDB.Driver.IMongoIndexManager`1'1");
            feature.AddKnownType("MongoDB.Driver.IndexKeysDefinition`1,MongoDB.Driver", "MongoDB.Driver.IndexKeysDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.BsonDocumentIndexKeysDefinition`1,MongoDB.Driver", "MongoDB.Driver.BsonDocumentIndexKeysDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.JsonIndexKeysDefinition`1,MongoDB.Driver", "MongoDB.Driver.JsonIndexKeysDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.IndexKeysDefinitionBuilder`1,MongoDB.Driver", "MongoDB.Driver.IndexKeysDefinitionBuilder`1'1");
            feature.AddKnownType("MongoDB.Driver.CombinedIndexKeysDefinition`1,MongoDB.Driver", "MongoDB.Driver.CombinedIndexKeysDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.DirectionalIndexKeyDefinition`1,MongoDB.Driver", "MongoDB.Driver.DirectionalIndexKeyDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoHaystackIndexKeyDefinition`1,MongoDB.Driver", "MongoDB.Driver.GeoHaystackIndexKeyDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.SimpleIndexKeyDefinition`1,MongoDB.Driver", "MongoDB.Driver.SimpleIndexKeyDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.WildcardIndexKeyDefinition`1,MongoDB.Driver", "MongoDB.Driver.WildcardIndexKeyDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.IndexOptionDefaults,MongoDB.Driver", "MongoDB.Driver.IndexOptionDefaults");
            feature.AddKnownType("MongoDB.Driver.InsertManyOptions,MongoDB.Driver", "MongoDB.Driver.InsertManyOptions");
            feature.AddKnownType("MongoDB.Driver.InsertOneModel`1,MongoDB.Driver", "MongoDB.Driver.InsertOneModel`1'1");
            feature.AddKnownType("MongoDB.Driver.InsertOneOptions,MongoDB.Driver", "MongoDB.Driver.InsertOneOptions");
            feature.AddKnownType("MongoDB.Driver.IOperationExecutor,MongoDB.Driver", "MongoDB.Driver.IOperationExecutor");
            feature.AddKnownType("MongoDB.Driver.IServerSession,MongoDB.Driver", "MongoDB.Driver.IServerSession");
            feature.AddKnownType("MongoDB.Driver.ISetWindowFieldsPartition`1,MongoDB.Driver", "MongoDB.Driver.ISetWindowFieldsPartition`1'1");
            feature.AddKnownType("MongoDB.Driver.ListCollectionNamesOptions,MongoDB.Driver", "MongoDB.Driver.ListCollectionNamesOptions");
            feature.AddKnownType("MongoDB.Driver.ListCollectionsOptions,MongoDB.Driver", "MongoDB.Driver.ListCollectionsOptions");
            feature.AddKnownType("MongoDB.Driver.ListDatabaseNamesOptions,MongoDB.Driver", "MongoDB.Driver.ListDatabaseNamesOptions");
            feature.AddKnownType("MongoDB.Driver.ListDatabasesOptions,MongoDB.Driver", "MongoDB.Driver.ListDatabasesOptions");
            feature.AddKnownType("MongoDB.Driver.ListIndexesOptions,MongoDB.Driver", "MongoDB.Driver.ListIndexesOptions");
            feature.AddKnownType("MongoDB.Driver.MapReduceOptions`2,MongoDB.Driver", "MongoDB.Driver.MapReduceOptions`2'2");
            feature.AddKnownType("MongoDB.Driver.MapReduceOutputOptions,MongoDB.Driver", "MongoDB.Driver.MapReduceOutputOptions");
            feature.AddKnownType("MongoDB.Driver.MapReduceOutputOptions+InlineOutput,MongoDB.Driver", "MongoDB.Driver.InlineOutput");
            feature.AddKnownType("MongoDB.Driver.MapReduceOutputOptions+CollectionOutput,MongoDB.Driver", "MongoDB.Driver.CollectionOutput");
            feature.AddKnownType("MongoDB.Driver.MergeStageWhenMatched,MongoDB.Driver", "MongoDB.Driver.MergeStageWhenMatched");
            feature.AddKnownType("MongoDB.Driver.MergeStageWhenNotMatched,MongoDB.Driver", "MongoDB.Driver.MergeStageWhenNotMatched");
            feature.AddKnownType("MongoDB.Driver.MergeStageOptions`1,MongoDB.Driver", "MongoDB.Driver.MergeStageOptions`1'1");
            feature.AddKnownType("MongoDB.Driver.MongoBulkWriteException,MongoDB.Driver", "MongoDB.Driver.MongoBulkWriteException");
            feature.AddKnownType("MongoDB.Driver.MongoBulkWriteException`1,MongoDB.Driver", "MongoDB.Driver.MongoBulkWriteException`1'1");
            feature.AddKnownType("MongoDB.Driver.MongoClient,MongoDB.Driver", "MongoDB.Driver.MongoClient");
            feature.AddKnownType("MongoDB.Driver.MongoClient+AreSessionsSupportedServerSelector,MongoDB.Driver", "MongoDB.Driver.AreSessionsSupportedServerSelector");
            feature.AddKnownType("MongoDB.Driver.MongoClientBase,MongoDB.Driver", "MongoDB.Driver.MongoClientBase");
            feature.AddKnownType("MongoDB.Driver.MongoClientSettings,MongoDB.Driver", "MongoDB.Driver.MongoClientSettings");
            feature.AddKnownType("MongoDB.Driver.MongoCollectionBase`1,MongoDB.Driver", "MongoDB.Driver.MongoCollectionBase`1'1");
            feature.AddKnownType("MongoDB.Driver.MongoCollectionImpl`1,MongoDB.Driver", "MongoDB.Driver.MongoCollectionImpl`1'1");
            feature.AddKnownType("MongoDB.Driver.MongoCollectionImpl`1+MongoIndexManager,MongoDB.Driver", "MongoDB.Driver.MongoIndexManager'1");
            feature.AddKnownType("MongoDB.Driver.MongoCollectionSettings,MongoDB.Driver", "MongoDB.Driver.MongoCollectionSettings");
            feature.AddKnownType("MongoDB.Driver.MongoCredential,MongoDB.Driver", "MongoDB.Driver.MongoCredential");
            feature.AddKnownType("MongoDB.Driver.MongoCredentialStore,MongoDB.Driver", "MongoDB.Driver.MongoCredentialStore");
            feature.AddKnownType("MongoDB.Driver.MongoDatabaseBase,MongoDB.Driver", "MongoDB.Driver.MongoDatabaseBase");
            feature.AddKnownType("MongoDB.Driver.MongoDatabaseImpl,MongoDB.Driver", "MongoDB.Driver.MongoDatabaseImpl");
            feature.AddKnownType("MongoDB.Driver.MongoDatabaseSettings,MongoDB.Driver", "MongoDB.Driver.MongoDatabaseSettings");
            feature.AddKnownType("MongoDB.Driver.MongoDBRef,MongoDB.Driver", "MongoDB.Driver.MongoDBRef");
            feature.AddKnownType("MongoDB.Driver.MongoDBRefSerializer,MongoDB.Driver", "MongoDB.Driver.MongoDBRefSerializer");
            feature.AddKnownType("MongoDB.Driver.MongoExternalAwsIdentity,MongoDB.Driver", "MongoDB.Driver.MongoExternalAwsIdentity");
            feature.AddKnownType("MongoDB.Driver.MongoExternalIdentity,MongoDB.Driver", "MongoDB.Driver.MongoExternalIdentity");
            feature.AddKnownType("MongoDB.Driver.MongoIdentity,MongoDB.Driver", "MongoDB.Driver.MongoIdentity");
            feature.AddKnownType("MongoDB.Driver.MongoIdentityEvidence,MongoDB.Driver", "MongoDB.Driver.MongoIdentityEvidence");
            feature.AddKnownType("MongoDB.Driver.MongoIndexManagerBase`1,MongoDB.Driver", "MongoDB.Driver.MongoIndexManagerBase`1'1");
            feature.AddKnownType("MongoDB.Driver.MongoInternalIdentity,MongoDB.Driver", "MongoDB.Driver.MongoInternalIdentity");
            feature.AddKnownType("MongoDB.Driver.MongoServerAddress,MongoDB.Driver", "MongoDB.Driver.MongoServerAddress");
            feature.AddKnownType("MongoDB.Driver.MongoUrl,MongoDB.Driver", "MongoDB.Driver.MongoUrl");
            feature.AddKnownType("MongoDB.Driver.MongoUrlBuilder,MongoDB.Driver", "MongoDB.Driver.MongoUrlBuilder");
            feature.AddKnownType("MongoDB.Driver.MongoWriteException,MongoDB.Driver", "MongoDB.Driver.MongoWriteException");
            feature.AddKnownType("MongoDB.Driver.MongoX509Identity,MongoDB.Driver", "MongoDB.Driver.MongoX509Identity");
            feature.AddKnownType("MongoDB.Driver.NoPipelineInput,MongoDB.Driver", "MongoDB.Driver.NoPipelineInput");
            feature.AddKnownType("MongoDB.Driver.NoPipelineInputSerializer,MongoDB.Driver", "MongoDB.Driver.NoPipelineInputSerializer");
            feature.AddKnownType("MongoDB.Driver.OfTypeMongoCollection`2,MongoDB.Driver", "MongoDB.Driver.OfTypeMongoCollection`2'2");
            feature.AddKnownType("MongoDB.Driver.OfTypeSerializer`2,MongoDB.Driver", "MongoDB.Driver.OfTypeSerializer`2'2");
            feature.AddKnownType("MongoDB.Driver.OperationExecutor,MongoDB.Driver", "MongoDB.Driver.OperationExecutor");
            feature.AddKnownType("MongoDB.Driver.PasswordEvidence,MongoDB.Driver", "MongoDB.Driver.PasswordEvidence");
            feature.AddKnownType("MongoDB.Driver.RenderedPipelineDefinition`1,MongoDB.Driver", "MongoDB.Driver.RenderedPipelineDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.PipelineDefinition`2,MongoDB.Driver", "MongoDB.Driver.PipelineDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.BsonDocumentStagePipelineDefinition`2,MongoDB.Driver", "MongoDB.Driver.BsonDocumentStagePipelineDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.PipelineStagePipelineDefinition`2,MongoDB.Driver", "MongoDB.Driver.PipelineStagePipelineDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.OptimizingPipelineDefinition`2,MongoDB.Driver", "MongoDB.Driver.OptimizingPipelineDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.AppendedStagePipelineDefinition`3,MongoDB.Driver", "MongoDB.Driver.AppendedStagePipelineDefinition`3'3");
            feature.AddKnownType("MongoDB.Driver.EmptyPipelineDefinition`1,MongoDB.Driver", "MongoDB.Driver.EmptyPipelineDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.PrependedStagePipelineDefinition`3,MongoDB.Driver", "MongoDB.Driver.PrependedStagePipelineDefinition`3'3");
            feature.AddKnownType("MongoDB.Driver.ReplaceOutputSerializerPipelineDefinition`3,MongoDB.Driver", "MongoDB.Driver.ReplaceOutputSerializerPipelineDefinition`3'3");
            feature.AddKnownType("MongoDB.Driver.IRenderedPipelineStageDefinition,MongoDB.Driver", "MongoDB.Driver.IRenderedPipelineStageDefinition");
            feature.AddKnownType("MongoDB.Driver.RenderedPipelineStageDefinition`1,MongoDB.Driver", "MongoDB.Driver.RenderedPipelineStageDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.IPipelineStageDefinition,MongoDB.Driver", "MongoDB.Driver.IPipelineStageDefinition");
            feature.AddKnownType("MongoDB.Driver.PipelineStageDefinition`2,MongoDB.Driver", "MongoDB.Driver.PipelineStageDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.BsonDocumentPipelineStageDefinition`2,MongoDB.Driver", "MongoDB.Driver.BsonDocumentPipelineStageDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.JsonPipelineStageDefinition`2,MongoDB.Driver", "MongoDB.Driver.JsonPipelineStageDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.DelegatedPipelineStageDefinition`2,MongoDB.Driver", "MongoDB.Driver.DelegatedPipelineStageDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.ExpressionBucketOutputProjection`3,MongoDB.Driver", "MongoDB.Driver.ExpressionBucketOutputProjection`3'3");
            feature.AddKnownType("MongoDB.Driver.GroupExpressionProjection`3,MongoDB.Driver", "MongoDB.Driver.GroupExpressionProjection`3'3");
            feature.AddKnownType("MongoDB.Driver.ProjectExpressionProjection`2,MongoDB.Driver", "MongoDB.Driver.ProjectExpressionProjection`2'2");
            feature.AddKnownType("MongoDB.Driver.SortPipelineStageDefinition`1,MongoDB.Driver", "MongoDB.Driver.SortPipelineStageDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.RenderedProjectionDefinition`1,MongoDB.Driver", "MongoDB.Driver.RenderedProjectionDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.ProjectionDefinition`1,MongoDB.Driver", "MongoDB.Driver.ProjectionDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.ProjectionDefinition`2,MongoDB.Driver", "MongoDB.Driver.ProjectionDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.BsonDocumentProjectionDefinition`1,MongoDB.Driver", "MongoDB.Driver.BsonDocumentProjectionDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.BsonDocumentProjectionDefinition`2,MongoDB.Driver", "MongoDB.Driver.BsonDocumentProjectionDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.FindExpressionProjectionDefinition`2,MongoDB.Driver", "MongoDB.Driver.FindExpressionProjectionDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.JsonProjectionDefinition`1,MongoDB.Driver", "MongoDB.Driver.JsonProjectionDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.JsonProjectionDefinition`2,MongoDB.Driver", "MongoDB.Driver.JsonProjectionDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.ObjectProjectionDefinition`1,MongoDB.Driver", "MongoDB.Driver.ObjectProjectionDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.ObjectProjectionDefinition`2,MongoDB.Driver", "MongoDB.Driver.ObjectProjectionDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.KnownResultTypeProjectionDefinitionAdapter`2,MongoDB.Driver", "MongoDB.Driver.KnownResultTypeProjectionDefinitionAdapter`2'2");
            feature.AddKnownType("MongoDB.Driver.ClientSideDeserializationProjectionDefinition`2,MongoDB.Driver", "MongoDB.Driver.ClientSideDeserializationProjectionDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.ProjectionDefinitionBuilder`1,MongoDB.Driver", "MongoDB.Driver.ProjectionDefinitionBuilder`1'1");
            feature.AddKnownType("MongoDB.Driver.CombinedProjectionDefinition`1,MongoDB.Driver", "MongoDB.Driver.CombinedProjectionDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.ElementMatchProjectionDefinition`2,MongoDB.Driver", "MongoDB.Driver.ElementMatchProjectionDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.PositionalOperatorProjectionDefinition`1,MongoDB.Driver", "MongoDB.Driver.PositionalOperatorProjectionDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.SingleFieldProjectionDefinition`1,MongoDB.Driver", "MongoDB.Driver.SingleFieldProjectionDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.RangeWindow,MongoDB.Driver", "MongoDB.Driver.RangeWindow");
            feature.AddKnownType("MongoDB.Driver.RangeWindowBoundary,MongoDB.Driver", "MongoDB.Driver.RangeWindowBoundary");
            feature.AddKnownType("MongoDB.Driver.KeywordRangeWindowBoundary,MongoDB.Driver", "MongoDB.Driver.KeywordRangeWindowBoundary");
            feature.AddKnownType("MongoDB.Driver.ValueRangeWindowBoundary,MongoDB.Driver", "MongoDB.Driver.ValueRangeWindowBoundary");
            feature.AddKnownType("MongoDB.Driver.ValueRangeWindowBoundary`1,MongoDB.Driver", "MongoDB.Driver.ValueRangeWindowBoundary`1'1");
            feature.AddKnownType("MongoDB.Driver.TimeRangeWindowBoundary,MongoDB.Driver", "MongoDB.Driver.TimeRangeWindowBoundary");
            feature.AddKnownType("MongoDB.Driver.ValueRangeWindowBoundaryConvertingValueSerializer`2,MongoDB.Driver", "MongoDB.Driver.ValueRangeWindowBoundaryConvertingValueSerializer`2'2");
            feature.AddKnownType("MongoDB.Driver.RenameCollectionOptions,MongoDB.Driver", "MongoDB.Driver.RenameCollectionOptions");
            feature.AddKnownType("MongoDB.Driver.ReplaceOneModel`1,MongoDB.Driver", "MongoDB.Driver.ReplaceOneModel`1'1");
            feature.AddKnownType("MongoDB.Driver.ReplaceOneResult,MongoDB.Driver", "MongoDB.Driver.ReplaceOneResult");
            feature.AddKnownType("MongoDB.Driver.ReplaceOneResult+Acknowledged,MongoDB.Driver", "MongoDB.Driver.MongoDB.Driver.ReplaceOneResult.Acknowledged");
            feature.AddKnownType("MongoDB.Driver.ReplaceOneResult+Unacknowledged,MongoDB.Driver", "MongoDB.Driver.MongoDB.Driver.ReplaceOneResult.Unacknowledged");
            feature.AddKnownType("MongoDB.Driver.ReplaceOptions,MongoDB.Driver", "MongoDB.Driver.ReplaceOptions");
            feature.AddKnownType("MongoDB.Driver.ReturnDocument,MongoDB.Driver", "MongoDB.Driver.ReturnDocument");
            feature.AddKnownType("MongoDB.Driver.ServerSession,MongoDB.Driver", "MongoDB.Driver.ServerSession");
            feature.AddKnownType("MongoDB.Driver.Setting`1,MongoDB.Driver", "MongoDB.Driver.Setting`1'1");
            feature.AddKnownType("MongoDB.Driver.SetWindowFieldsWindow,MongoDB.Driver", "MongoDB.Driver.SetWindowFieldsWindow");
            feature.AddKnownType("MongoDB.Driver.SortDirection,MongoDB.Driver", "MongoDB.Driver.SortDirection");
            feature.AddKnownType("MongoDB.Driver.SortDefinition`1,MongoDB.Driver", "MongoDB.Driver.SortDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.BsonDocumentSortDefinition`1,MongoDB.Driver", "MongoDB.Driver.BsonDocumentSortDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.JsonSortDefinition`1,MongoDB.Driver", "MongoDB.Driver.JsonSortDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.ObjectSortDefinition`1,MongoDB.Driver", "MongoDB.Driver.ObjectSortDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.SortDefinitionBuilder`1,MongoDB.Driver", "MongoDB.Driver.SortDefinitionBuilder`1'1");
            feature.AddKnownType("MongoDB.Driver.CombinedSortDefinition`1,MongoDB.Driver", "MongoDB.Driver.CombinedSortDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.DirectionalSortDefinition`1,MongoDB.Driver", "MongoDB.Driver.DirectionalSortDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.SslSettings,MongoDB.Driver", "MongoDB.Driver.SslSettings");
            feature.AddKnownType("MongoDB.Driver.SslSettings+X509CertificateCollectionEqualityComparer,MongoDB.Driver", "MongoDB.Driver.X509CertificateCollectionEqualityComparer");
            feature.AddKnownType("MongoDB.Driver.TextSearchOptions,MongoDB.Driver", "MongoDB.Driver.TextSearchOptions");
            feature.AddKnownType("MongoDB.Driver.TransactionExecutor+CallbackOutcome`1,MongoDB.Driver", "MongoDB.Driver.CallbackOutcome`1'1");
            feature.AddKnownType("MongoDB.Driver.TransactionExecutor+CallbackOutcome`1+WithResult,MongoDB.Driver", "MongoDB.Driver.MongoDB.Driver.CallbackOutcome`1'1.WithResult'1");
            feature.AddKnownType("MongoDB.Driver.TransactionExecutor+CallbackOutcome`1+WithShouldRetryTransaction,MongoDB.Driver", "MongoDB.Driver.MongoDB.Driver.CallbackOutcome`1'1.WithShouldRetryTransaction'1");
            feature.AddKnownType("MongoDB.Driver.UpdateDefinition`1,MongoDB.Driver", "MongoDB.Driver.UpdateDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.PipelineUpdateDefinition`1,MongoDB.Driver", "MongoDB.Driver.PipelineUpdateDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.BsonDocumentUpdateDefinition`1,MongoDB.Driver", "MongoDB.Driver.BsonDocumentUpdateDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.JsonUpdateDefinition`1,MongoDB.Driver", "MongoDB.Driver.JsonUpdateDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.ObjectUpdateDefinition`1,MongoDB.Driver", "MongoDB.Driver.ObjectUpdateDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.UpdateDefinitionCurrentDateType,MongoDB.Driver", "MongoDB.Driver.UpdateDefinitionCurrentDateType");
            feature.AddKnownType("MongoDB.Driver.UpdateDefinitionBuilder`1,MongoDB.Driver", "MongoDB.Driver.UpdateDefinitionBuilder`1'1");
            feature.AddKnownType("MongoDB.Driver.AddToSetUpdateDefinition`2,MongoDB.Driver", "MongoDB.Driver.AddToSetUpdateDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.CombinedUpdateDefinition`1,MongoDB.Driver", "MongoDB.Driver.CombinedUpdateDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.BitwiseOperatorUpdateDefinition`2,MongoDB.Driver", "MongoDB.Driver.BitwiseOperatorUpdateDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.OperatorUpdateDefinition`1,MongoDB.Driver", "MongoDB.Driver.OperatorUpdateDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.OperatorUpdateDefinition`2,MongoDB.Driver", "MongoDB.Driver.OperatorUpdateDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.PullUpdateDefinition`2,MongoDB.Driver", "MongoDB.Driver.PullUpdateDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.PushUpdateDefinition`2,MongoDB.Driver", "MongoDB.Driver.PushUpdateDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.UpdateManyModel`1,MongoDB.Driver", "MongoDB.Driver.UpdateManyModel`1'1");
            feature.AddKnownType("MongoDB.Driver.UpdateOneModel`1,MongoDB.Driver", "MongoDB.Driver.UpdateOneModel`1'1");
            feature.AddKnownType("MongoDB.Driver.UpdateOptions,MongoDB.Driver", "MongoDB.Driver.UpdateOptions");
            feature.AddKnownType("MongoDB.Driver.UpdateResult,MongoDB.Driver", "MongoDB.Driver.UpdateResult");
            feature.AddKnownType("MongoDB.Driver.UpdateResult+Acknowledged,MongoDB.Driver", "MongoDB.Driver.MongoDB.Driver.UpdateResult.Acknowledged");
            feature.AddKnownType("MongoDB.Driver.UpdateResult+Unacknowledged,MongoDB.Driver", "MongoDB.Driver.MongoDB.Driver.UpdateResult.Unacknowledged");
            feature.AddKnownType("MongoDB.Driver.WriteConcernError,MongoDB.Driver", "MongoDB.Driver.WriteConcernError");
            feature.AddKnownType("MongoDB.Driver.WriteError,MongoDB.Driver", "MongoDB.Driver.WriteError");
            feature.AddKnownType("MongoDB.Driver.WriteModel`1,MongoDB.Driver", "MongoDB.Driver.WriteModel`1'1");
            feature.AddKnownType("MongoDB.Driver.WriteModelType,MongoDB.Driver", "MongoDB.Driver.WriteModelType");
            feature.AddKnownType("MongoDB.Driver.Encryption.AutoEncryptionLibMongoCryptController,MongoDB.Driver", "MongoDB.Driver.Encryption.AutoEncryptionLibMongoCryptController");
            feature.AddKnownType("MongoDB.Driver.Encryption.AutoEncryptionOptions,MongoDB.Driver", "MongoDB.Driver.Encryption.AutoEncryptionOptions");
            feature.AddKnownType("MongoDB.Driver.Encryption.ClientEncryption,MongoDB.Driver", "MongoDB.Driver.Encryption.ClientEncryption");
            feature.AddKnownType("MongoDB.Driver.Encryption.ClientEncryptionOptions,MongoDB.Driver", "MongoDB.Driver.Encryption.ClientEncryptionOptions");
            feature.AddKnownType("MongoDB.Driver.Encryption.DataKeyOptions,MongoDB.Driver", "MongoDB.Driver.Encryption.DataKeyOptions");
            feature.AddKnownType("MongoDB.Driver.Encryption.EncryptionAlgorithm,MongoDB.Driver", "MongoDB.Driver.Encryption.EncryptionAlgorithm");
            feature.AddKnownType("MongoDB.Driver.Encryption.EncryptOptions,MongoDB.Driver", "MongoDB.Driver.Encryption.EncryptOptions");
            feature.AddKnownType("MongoDB.Driver.Encryption.ExplicitEncryptionLibMongoCryptController,MongoDB.Driver", "MongoDB.Driver.Encryption.ExplicitEncryptionLibMongoCryptController");
            feature.AddKnownType("MongoDB.Driver.Encryption.LibMongoCryptControllerBase,MongoDB.Driver", "MongoDB.Driver.Encryption.LibMongoCryptControllerBase");
            feature.AddKnownType("MongoDB.Driver.Encryption.LibMongoCryptControllerBase+NetworkStreamFactory,MongoDB.Driver", "MongoDB.Driver.Encryption.NetworkStreamFactory");
            feature.AddKnownType("MongoDB.Driver.Encryption.MongocryptdFactory,MongoDB.Driver", "MongoDB.Driver.Encryption.MongocryptdFactory");
            feature.AddKnownType("MongoDB.Driver.Encryption.MongoEncryptionException,MongoDB.Driver", "MongoDB.Driver.Encryption.MongoEncryptionException");
            feature.AddKnownType("MongoDB.Driver.Encryption.NoopBinaryDocumentFieldCryptor,MongoDB.Driver", "MongoDB.Driver.Encryption.NoopBinaryDocumentFieldCryptor");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.GeoJson2DCoordinates,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.GeoJson2DCoordinates");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.GeoJson2DGeographicCoordinates,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.GeoJson2DGeographicCoordinates");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.GeoJson2DProjectedCoordinates,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.GeoJson2DProjectedCoordinates");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.GeoJson3DCoordinates,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.GeoJson3DCoordinates");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.GeoJson3DGeographicCoordinates,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.GeoJson3DGeographicCoordinates");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.GeoJson3DProjectedCoordinates,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.GeoJson3DProjectedCoordinates");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.GeoJsonBoundingBox`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.GeoJsonBoundingBox`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinateReferenceSystem,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinateReferenceSystem");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeature`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeature`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeatureArgs`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeatureArgs`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeatureCollection`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeatureCollection`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometryCollection`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometryCollection`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinearRingCoordinates`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinearRingCoordinates`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineString`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineString`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineStringCoordinates`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineStringCoordinates`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinkedCoordinateReferenceSystem,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinkedCoordinateReferenceSystem");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineString`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineString`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineStringCoordinates`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineStringCoordinates`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPoint`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPoint`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPointCoordinates`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPointCoordinates`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygon`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygon`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygonCoordinates`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygonCoordinates`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.GeoJsonNamedCoordinateReferenceSystem,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.GeoJsonNamedCoordinateReferenceSystem");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.GeoJsonObject`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.GeoJsonObject`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectType,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectType");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygon`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygon`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson2DCoordinatesSerializer,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson2DCoordinatesSerializer");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson2DGeographicCoordinatesSerializer,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson2DGeographicCoordinatesSerializer");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson2DProjectedCoordinatesSerializer,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson2DProjectedCoordinatesSerializer");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson3DCoordinatesSerializer,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson3DCoordinatesSerializer");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson3DGeographicCoordinatesSerializer,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson3DGeographicCoordinatesSerializer");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson3DProjectedCoordinatesSerializer,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson3DProjectedCoordinatesSerializer");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonBoundingBoxSerializer`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonBoundingBoxSerializer`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonCoordinateReferenceSystemSerializer,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonCoordinateReferenceSystemSerializer");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonCoordinatesSerializer,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonCoordinatesSerializer");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonFeatureCollectionSerializer`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonFeatureCollectionSerializer`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonFeatureSerializer`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonFeatureSerializer`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonGeometryCollectionSerializer`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonGeometryCollectionSerializer`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonGeometrySerializer`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonGeometrySerializer`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLinearRingCoordinatesSerializer`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLinearRingCoordinatesSerializer`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLineStringCoordinatesSerializer`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLineStringCoordinatesSerializer`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLineStringSerializer`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLineStringSerializer`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLinkedCoordinateReferenceSystemSerializer,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLinkedCoordinateReferenceSystemSerializer");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiLineStringCoordinatesSerializer`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiLineStringCoordinatesSerializer`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiLineStringSerializer`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiLineStringSerializer`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPointCoordinatesSerializer`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPointCoordinatesSerializer`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPointSerializer`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPointSerializer`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPolygonCoordinatesSerializer`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPolygonCoordinatesSerializer`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPolygonSerializer`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPolygonSerializer`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonNamedCoordinateReferenceSystemSerializer,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonNamedCoordinateReferenceSystemSerializer");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonObjectSerializer`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonObjectSerializer`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonObjectSerializerHelper`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonObjectSerializerHelper`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPointSerializer`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPointSerializer`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPolygonCoordinatesSerializer`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPolygonCoordinatesSerializer`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPolygonSerializer`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPolygonSerializer`1'1");
            feature.AddKnownType("MongoDB.Driver.Linq.DateTimeUnit,MongoDB.Driver", "MongoDB.Driver.Linq.DateTimeUnit");
            feature.AddKnownType("MongoDB.Driver.Linq.UnitOnlyDayTimeUnit,MongoDB.Driver", "MongoDB.Driver.Linq.UnitOnlyDayTimeUnit");
            feature.AddKnownType("MongoDB.Driver.Linq.WeekWithStartOfWeekDayTimeUnit,MongoDB.Driver", "MongoDB.Driver.Linq.WeekWithStartOfWeekDayTimeUnit");
            feature.AddKnownType("MongoDB.Driver.Linq.ExponentialMovingAverageWeighting,MongoDB.Driver", "MongoDB.Driver.Linq.ExponentialMovingAverageWeighting");
            feature.AddKnownType("MongoDB.Driver.Linq.ExponentialMovingAverageAlphaWeighting,MongoDB.Driver", "MongoDB.Driver.Linq.ExponentialMovingAverageAlphaWeighting");
            feature.AddKnownType("MongoDB.Driver.Linq.ExponentialMovingAveragePositionalWeighting,MongoDB.Driver", "MongoDB.Driver.Linq.ExponentialMovingAveragePositionalWeighting");
            feature.AddKnownType("MongoDB.Driver.Linq.ExpressionNotSupportedException,MongoDB.Driver", "MongoDB.Driver.Linq.ExpressionNotSupportedException");
            feature.AddKnownType("MongoDB.Driver.Linq.IMongoQueryable,MongoDB.Driver", "MongoDB.Driver.Linq.IMongoQueryable");
            feature.AddKnownType("MongoDB.Driver.Linq.IMongoQueryable`1,MongoDB.Driver", "MongoDB.Driver.Linq.IMongoQueryable`1'1");
            feature.AddKnownType("MongoDB.Driver.Linq.IOrderedMongoQueryable`1,MongoDB.Driver", "MongoDB.Driver.Linq.IOrderedMongoQueryable`1'1");
            feature.AddKnownType("MongoDB.Driver.Linq.IMongoQueryProvider,MongoDB.Driver", "MongoDB.Driver.Linq.IMongoQueryProvider");
            feature.AddKnownType("MongoDB.Driver.Linq.AggregateQueryableExecutionModel`1,MongoDB.Driver", "MongoDB.Driver.Linq.AggregateQueryableExecutionModel`1'1");
            feature.AddKnownType("MongoDB.Driver.Linq.LinqProvider,MongoDB.Driver", "MongoDB.Driver.Linq.LinqProvider");
            feature.AddKnownType("MongoDB.Driver.Linq.LinqProviderAdapter,MongoDB.Driver", "MongoDB.Driver.Linq.LinqProviderAdapter");
            feature.AddKnownType("MongoDB.Driver.Linq.QueryableExecutionModel,MongoDB.Driver", "MongoDB.Driver.Linq.QueryableExecutionModel");
            feature.AddKnownType("MongoDB.Driver.Linq.WindowTimeUnit,MongoDB.Driver", "MongoDB.Driver.Linq.WindowTimeUnit");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.FieldExpressionFlattener,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.FieldExpressionFlattener");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.IResultTransformer,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.IResultTransformer");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.LinqProviderAdapterV2,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.LinqProviderAdapterV2");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.MongoQueryableImpl`2,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.MongoQueryableImpl`2'2");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.MongoQueryProviderImpl`1,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.MongoQueryProviderImpl`1'1");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.QueryableTranslation,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.QueryableTranslation");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.AccumulatorExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.AccumulatorExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.AccumulatorType,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.AccumulatorType");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.AggregateExpressionExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.AggregateExpressionExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.ArrayIndexExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.ArrayIndexExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.CollectionExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.CollectionExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.ConcatExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.ConcatExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.CorrelatedExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.CorrelatedExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.DefaultIfEmptyExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.DefaultIfEmptyExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.DistinctExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.DistinctExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.DocumentExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.DocumentExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.ExceptExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.ExceptExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.ExpressionComparer,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.ExpressionComparer");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.ExpressionComparer+ScopedDictionary`2,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.ScopedDictionary`2'2");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.ExpressionReplacer,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.ExpressionReplacer");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.ExtensionExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.ExtensionExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.ExtensionExpressionType,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.ExtensionExpressionType");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.ExtensionExpressionVisitor,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.ExtensionExpressionVisitor");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.FieldAsDocumentExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.FieldAsDocumentExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.FieldExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.FieldExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.GroupByExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.GroupByExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.GroupByWithResultSelectorExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.GroupByWithResultSelectorExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.GroupingKeyExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.GroupingKeyExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.GroupJoinExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.GroupJoinExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.IFieldExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.IFieldExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.IHasOutOfCurrentScopePrefix,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.IHasOutOfCurrentScopePrefix");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.InjectedFilterExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.InjectedFilterExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.IntersectExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.IntersectExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.ISerializationExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.ISerializationExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.ISourcedExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.ISourcedExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.JoinExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.JoinExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.OrderByClause,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.OrderByClause");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.OrderByExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.OrderByExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.PipelineExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.PipelineExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.ReverseExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.ReverseExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.SampleExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.SampleExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.SelectExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.SelectExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.SelectManyExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.SelectManyExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.SerializationExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.SerializationExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.SerializedConstantExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.SerializedConstantExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.SkipExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.SkipExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.TakeExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.TakeExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.UnionExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.UnionExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.WhereExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.WhereExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.ZipExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.ZipExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.AggregateResultOperator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.AggregateResultOperator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.AllResultOperator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.AllResultOperator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.AnyResultOperator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.AnyResultOperator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.ArrayResultOperator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.ArrayResultOperator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.AverageResultOperator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.AverageResultOperator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.ContainsResultOperator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.ContainsResultOperator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.CountResultOperator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.CountResultOperator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.FirstResultOperator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.FirstResultOperator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.HashSetResultOperator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.HashSetResultOperator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.LastResultOperator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.LastResultOperator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.ListResultOperator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.ListResultOperator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.MaxResultOperator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.MaxResultOperator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.MinResultOperator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.MinResultOperator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.SingleResultOperator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.SingleResultOperator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.StandardDeviationResultOperator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.StandardDeviationResultOperator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.SumResultOperator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.SumResultOperator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.AccumulatorBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.AccumulatorBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.CompositeMethodCallBinder`1,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.CompositeMethodCallBinder`1'1");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.CorrelatedAccumulatorRemover,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.CorrelatedAccumulatorRemover");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.CorrelatedGroupRewriter,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.CorrelatedGroupRewriter");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.CorrelatedGroupRewriter+AccumulatorGatherer,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.AccumulatorGatherer");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.IBindingContext,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.IBindingContext");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.IMethodCallBinder`1,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.IMethodCallBinder`1'1");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.MethodInfoMethodCallBinder`1,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.MethodInfoMethodCallBinder`1'1");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.MultipleWhereMerger,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.MultipleWhereMerger");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.NameBasedMethodCallBinder`1,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.NameBasedMethodCallBinder`1'1");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.NameBasedMethodCallBinder`1+Registration,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Registration'1");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.OutOfCurrentScopePrefixCollector,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.OutOfCurrentScopePrefixCollector");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.PartialEvaluator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.PartialEvaluator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.PartialEvaluator+Nominator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Nominator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.PartialEvaluator+ReflectionEvaluator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.ReflectionEvaluator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.PipelineBinderBase`1,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.PipelineBinderBase`1'1");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.PipelineBindingContext,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.PipelineBindingContext");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.PreviouslyUsedSerializerFinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.PreviouslyUsedSerializerFinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.ProjectionMapping,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.ProjectionMapping");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.ProjectionMemberMapping,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.ProjectionMemberMapping");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.ProjectionMapper,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.ProjectionMapper");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.SerializationBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.SerializationBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.SerializerBuilder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.SerializerBuilder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Transformer,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Transformer");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.EmbeddedPipelineBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.EmbeddedPipelineBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.EmbeddedPipelineBindingContext,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.EmbeddedPipelineBindingContext");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.AggregateBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.AggregateBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.AllBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.AllBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.AnyBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.AnyBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.AsQueryableBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.AsQueryableBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.AverageBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.AverageBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.ConcatBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.ConcatBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.ContainsBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.ContainsBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.CountBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.CountBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.DefaultIfEmptyBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.DefaultIfEmptyBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.DistinctBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.DistinctBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.ExceptBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.ExceptBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.FirstBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.FirstBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.IntersectBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.IntersectBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.LastBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.LastBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.MaxBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.MaxBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.MinBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.MinBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.OfTypeBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.OfTypeBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.ReverseBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.ReverseBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.SelectBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.SelectBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.SkipBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.SkipBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.StandardDeviationBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.StandardDeviationBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.SumBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.SumBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.TakeBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.TakeBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.ToArrayBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.ToArrayBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.ToHashSetBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.ToHashSetBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.ToListBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.ToListBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.UnionBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.UnionBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.WhereBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.WhereBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.ZipBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.ZipBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.PipelineBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.PipelineBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.AnyBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.AnyBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.AverageBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.AverageBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.CountBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.CountBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.DistinctBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.DistinctBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.FirstBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.FirstBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.GroupByBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.GroupByBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.GroupByBinder+Grouping`2,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.Grouping`2'2");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.GroupByBinder+GroupingDeserializer`2,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.GroupingDeserializer`2'2");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.GroupByWithResultSelectorBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.GroupByWithResultSelectorBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.JoinBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.JoinBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.JoinSerializer`1,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.JoinSerializer`1'1");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.JoinSerializer`1+FieldHidingBsonReader,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.FieldHidingBsonReader'1");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.JoinSerializer`1+FieldHidingBsonReader+FieldHiderBookmark,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.FieldHiderBookmark'1");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.MaxBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.MaxBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.MinBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.MinBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.OfTypeBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.OfTypeBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.OrderByBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.OrderByBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.SampleBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.SampleBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.SelectBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.SelectBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.SelectingResultOperatorBinderBase,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.SelectingResultOperatorBinderBase");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.SelectManyBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.SelectManyBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.SingleBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.SingleBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.SkipBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.SkipBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.StandardDeviationPopulationBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.StandardDeviationPopulationBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.StandardDeviationSampleBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.StandardDeviationSampleBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.SumBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.SumBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.TakeBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.TakeBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.ThenByBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.ThenByBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.WhereBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.WhereBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Transformers.CollectionConstructorTransformer,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Transformers.CollectionConstructorTransformer");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Transformers.ConstantOnRightTransformer,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Transformers.ConstantOnRightTransformer");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Transformers.EqualsAnyBooleanTransformer,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Transformers.EqualsAnyBooleanTransformer");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Transformers.ExpressionTransformerRegistry,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Transformers.ExpressionTransformerRegistry");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Transformers.FirstLastNormalizingTransformer,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Transformers.FirstLastNormalizingTransformer");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Transformers.IExpressionTransformer`1,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Transformers.IExpressionTransformer`1'1");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Transformers.NullableTransformer,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Transformers.NullableTransformer");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Transformers.SelectSelectCombiningTransformer,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Transformers.SelectSelectCombiningTransformer");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Transformers.VBCoalesceTransformer,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Transformers.VBCoalesceTransformer");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Transformers.VBCompareStringTransformer,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Transformers.VBCompareStringTransformer");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Transformers.VBInformationIsNothingTransformer,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Transformers.VBInformationIsNothingTransformer");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Transformers.VBNothingConversionRemovalTransformer,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Transformers.VBNothingConversionRemovalTransformer");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Transformers.VBStringIndexComparisonTransformer,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Transformers.VBStringIndexComparisonTransformer");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Translators.AggregateLanguageTranslator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Translators.AggregateLanguageTranslator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Translators.FieldNamePrefixer,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Translators.FieldNamePrefixer");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Translators.FindProjectionTranslator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Translators.FindProjectionTranslator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Translators.FindProjectionTranslator+SerializationExpressionGatherer,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Translators.SerializationExpressionGatherer");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Translators.FindProjectionTranslator+ProjectedObjectFieldReplacer,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Translators.ProjectedObjectFieldReplacer");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Translators.PredicateTranslator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Translators.PredicateTranslator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Translators.PredicateTranslator+DocumentToFieldConverter,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Translators.DocumentToFieldConverter");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Translators.ProjectedObject,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Translators.ProjectedObject");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Translators.ProjectedObjectDeserializer,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Translators.ProjectedObjectDeserializer");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Translators.QueryableTranslator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Translators.QueryableTranslator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.GroupExpressionStageDefinitions`3,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.GroupExpressionStageDefinitions`3'3");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.GroupExpressionStageDefinitions`3+GroupStageDefinition,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.GroupStageDefinition'3");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.GroupExpressionStageDefinitions`3+GroupStageDefinition+PseudoQueryProvider,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.PseudoQueryProvider'3");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.GroupExpressionStageDefinitions`3+GroupStageDefinition+PseudoSource,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.PseudoSource'3");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.GroupExpressionStageDefinitions`3+GroupStageDefinition+DummyIGroupingSerializer,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.DummyIGroupingSerializer'3");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.GroupExpressionStageDefinitions`3+ProjectStageDefinition,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.ProjectStageDefinition'3");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.LinqProviderAdapterV3,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.LinqProviderAdapterV3");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.MongoQuery`1,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.MongoQuery`1'1");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.MongoQuery`2,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.MongoQuery`2'2");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.MongoQueryProvider,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.MongoQueryProvider");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.MongoQueryProvider`1,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.MongoQueryProvider`1'1");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.AstAccumulatorField,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.AstAccumulatorField");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.AstComputedField,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.AstComputedField");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.AstFindProjection`1,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.AstFindProjection`1'1");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.AstFindProjectionField,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.AstFindProjectionField");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.AstFindProjectionExcludeField,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.AstFindProjectionExcludeField");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.AstFindProjectionIncludeField,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.AstFindProjectionIncludeField");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.AstFindProjectionSerializer`2,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.AstFindProjectionSerializer`2'2");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.AstNode,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.AstNode");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.AstNodeType,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.AstNodeType");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.AstPipeline,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.AstPipeline");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.AstVarBinding,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.AstVarBinding");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstAccumulatorExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstAccumulatorExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstAccumulatorOperator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstAccumulatorOperator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstAndExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstAndExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstBinaryExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstBinaryExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstBinaryOperator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstBinaryOperator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstComputedArrayExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstComputedArrayExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstComputedDocumentExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstComputedDocumentExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstCondExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstCondExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstConstantExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstConstantExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstConvertExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstConvertExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstCustomAccumulatorExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstCustomAccumulatorExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstDateAddExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstDateAddExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstDateDiffExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstDateDiffExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstDateFromIsoWeekPartsExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstDateFromIsoWeekPartsExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstDateFromPartsExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstDateFromPartsExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstDateFromStringExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstDateFromStringExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstDatePart,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstDatePart");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstDatePartExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstDatePartExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstDateSubtractExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstDateSubtractExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstDateToPartsExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstDateToPartsExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstDateToStringExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstDateToStringExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstDateTruncExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstDateTruncExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstFieldPathExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstFieldPathExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstFilterExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstFilterExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstFunctionExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstFunctionExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstGetFieldExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstGetFieldExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstIndexOfArrayExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstIndexOfArrayExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstIndexOfBytesExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstIndexOfBytesExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstIndexOfCPExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstIndexOfCPExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstLetExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstLetExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstLTrimExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstLTrimExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstMapExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstMapExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstNaryExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstNaryExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstNaryOperator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstNaryOperator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstOrExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstOrExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstRangeExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstRangeExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstReduceExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstReduceExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstRegexExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstRegexExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstRegexOperator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstRegexOperator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstReplaceAllExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstReplaceAllExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstReplaceOneExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstReplaceOneExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstRTrimExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstRTrimExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstSetWindowFieldsOperator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstSetWindowFieldsOperator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstSetWindowFieldsWindow,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstSetWindowFieldsWindow");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstSetWindowFieldsWindowExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstSetWindowFieldsWindowExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstSliceExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstSliceExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstSwitchExpressionBranch,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstSwitchExpressionBranch");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstSwitchExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstSwitchExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstTernaryExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstTernaryExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstTernaryOperator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstTernaryOperator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstTrimExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstTrimExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstUnaryExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstUnaryExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstUnaryOperator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstUnaryOperator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstVarExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstVarExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstZipExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstZipExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstAllFilterOperation,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstAllFilterOperation");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstAndFilter,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstAndFilter");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstBitsAllClearFilterOperation,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstBitsAllClearFilterOperation");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstBitsAllSetFilterOperation,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstBitsAllSetFilterOperation");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstBitsAnyClearFilterOperation,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstBitsAnyClearFilterOperation");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstBitsAnySetFilterOperation,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstBitsAnySetFilterOperation");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstComparisonFilterOperation,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstComparisonFilterOperation");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstComparisonFilterOperator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstComparisonFilterOperator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstElemMatchFilterOperation,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstElemMatchFilterOperation");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstExistsFilterOperation,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstExistsFilterOperation");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstExprFilter,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstExprFilter");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstFieldOperationFilter,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstFieldOperationFilter");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstFilter,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstFilter");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstFilterField,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstFilterField");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstFilterOperation,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstFilterOperation");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstGeoIntersectsFilterOperation,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstGeoIntersectsFilterOperation");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstGeoWithinBoxFilterOperation,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstGeoWithinBoxFilterOperation");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstGeoWithinCenterFilterOperation,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstGeoWithinCenterFilterOperation");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstGeoWithinCenterSphereFilterOperation,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstGeoWithinCenterSphereFilterOperation");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstGeoWithinFilterOperation,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstGeoWithinFilterOperation");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstInFilterOperation,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstInFilterOperation");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstJsonSchemaFilter,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstJsonSchemaFilter");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstMatchesEverythingFilter,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstMatchesEverythingFilter");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstMatchesNothingFilter,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstMatchesNothingFilter");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstModFilterOperation,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstModFilterOperation");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstNearFilterOperation,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstNearFilterOperation");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstNearSphereFilterOperation,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstNearSphereFilterOperation");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstNinFilterOperation,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstNinFilterOperation");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstNorFilter,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstNorFilter");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstNotFilterOperation,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstNotFilterOperation");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstOrFilter,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstOrFilter");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstRawFilter,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstRawFilter");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstRegexFilterOperation,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstRegexFilterOperation");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstSizeFilterOperation,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstSizeFilterOperation");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstTextFilter,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstTextFilter");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstTypeFilterOperation,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstTypeFilterOperation");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstWhereFilter,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstWhereFilter");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Optimizers.AstGroupPipelineOptimizer,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Optimizers.AstGroupPipelineOptimizer");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Optimizers.AstGroupPipelineOptimizer+AccumulatorSet,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Optimizers.AccumulatorSet");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Optimizers.AstGroupPipelineOptimizer+AccumulatorMover,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Optimizers.AccumulatorMover");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Optimizers.AstGroupPipelineOptimizer+UnableToRemoveReferenceToElementsException,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Optimizers.MongoDB.Driver.Linq.Linq3Implementation.Ast.Optimizers.AstGroupPipelineOptimizer.UnableToRemoveReferenceToElementsException");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Optimizers.AstSimplifier,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Optimizers.AstSimplifier");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstAddFieldsStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstAddFieldsStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstBucketAutoStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstBucketAutoStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstBucketStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstBucketStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstCollStatsStageCount,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstCollStatsStageCount");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstCollStatsStageLatencyStats,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstCollStatsStageLatencyStats");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstCollStatsStageQueryExecStats,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstCollStatsStageQueryExecStats");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstCollStatsStageStorageStats,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstCollStatsStageStorageStats");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstCollStatsStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstCollStatsStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstCountStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstCountStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstCurrentOpStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstCurrentOpStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstFacetStageFacet,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstFacetStageFacet");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstFacetStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstFacetStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstGeoNearStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstGeoNearStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstGraphLookupStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstGraphLookupStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstGroupStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstGroupStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstIndexStatsStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstIndexStatsStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstLimitStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstLimitStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstListLocalSessionsStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstListLocalSessionsStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstListSessionsStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstListSessionsStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstLookupStageMatch,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstLookupStageMatch");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstLookupStageEqualityMatch,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstLookupStageEqualityMatch");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstLookupStageUncorrelatedMatch,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstLookupStageUncorrelatedMatch");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstLookupStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstLookupStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstMatchStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstMatchStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstMergeStageWhenMatched,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstMergeStageWhenMatched");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstMergeStageWhenNotMatched,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstMergeStageWhenNotMatched");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstMergeStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstMergeStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstOutStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstOutStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstPlanCacheStatsStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstPlanCacheStatsStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstProjectStageSpecification,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstProjectStageSpecification");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstProjectStageExcludeFieldSpecification,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstProjectStageExcludeFieldSpecification");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstProjectStageIncludeFieldSpecification,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstProjectStageIncludeFieldSpecification");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstProjectStageSetFieldSpecification,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstProjectStageSetFieldSpecification");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstProjectStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstProjectStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstRedactStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstRedactStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstReplaceRootStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstReplaceRootStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstReplaceWithStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstReplaceWithStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstSampleStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstSampleStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstSetStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstSetStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstSkipStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstSkipStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstSortByCountStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstSortByCountStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstSortField,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstSortField");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstSortOrder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstSortOrder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstAscendingSortOrder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstAscendingSortOrder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstDescendingSortOrder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstDescendingSortOrder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstMetaTextScoreSortOrder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstMetaTextScoreSortOrder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstSortStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstSortStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstUnionWithStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstUnionWithStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstUnsetStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstUnsetStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstUnwindStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstUnwindStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Visitors.AstNodeReplacer,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Visitors.AstNodeReplacer");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Visitors.AstNodeVisitor,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Visitors.AstNodeVisitor");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Misc.ExpressionReplacer,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Misc.ExpressionReplacer");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Misc.FieldInfo,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Misc.FieldInfo");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Misc.Grouping`2,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Misc.Grouping`2'2");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Misc.NameGenerator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Misc.NameGenerator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Misc.PartialEvaluator+SubtreeEvaluator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Misc.SubtreeEvaluator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Misc.PartialEvaluator+Nominator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Misc.Nominator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Misc.ReferenceEqualityComparer`1,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Misc.ReferenceEqualityComparer`1'1");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Misc.Symbol,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Misc.Symbol");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Misc.SymbolTable,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Misc.SymbolTable");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Serializers.EnumUnderlyingTypeSerializer`2,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Serializers.EnumUnderlyingTypeSerializer`2'2");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Serializers.IEnumerableSerializer`1,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Serializers.IEnumerableSerializer`1'1");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Serializers.IGroupingSerializer`2,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Serializers.IGroupingSerializer`2'2");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Serializers.ISetWindowFieldsPartitionSerializer,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Serializers.ISetWindowFieldsPartitionSerializer");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Serializers.ISetWindowFieldsPartitionSerializer`1,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Serializers.ISetWindowFieldsPartitionSerializer`1'1");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Serializers.IWrappedEnumerableSerializer,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Serializers.IWrappedEnumerableSerializer");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Serializers.IWrappedValueSerializer,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Serializers.IWrappedValueSerializer");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Serializers.WrappedValueSerializer`1,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Serializers.WrappedValueSerializer`1'1");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Serializers.KnownSerializers.KnownSerializerFinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Serializers.KnownSerializers.KnownSerializerFinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Serializers.KnownSerializers.KnownSerializersNode,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Serializers.KnownSerializers.KnownSerializersNode");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Serializers.KnownSerializers.KnownSerializersRegistry,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Serializers.KnownSerializers.KnownSerializersRegistry");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Translators.TranslationContext,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Translators.TranslationContext");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Translators.TranslationContextData,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Translators.TranslationContextData");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToAggregationExpressionTranslators.AggregationExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToAggregationExpressionTranslators.AggregationExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToExecutableQueryTranslators.AllMethodToExecutableQueryTranslator+AllFinalizer,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToExecutableQueryTranslators.AllFinalizer");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToExecutableQueryTranslators.AnyMethodToExecutableQueryTranslator+AnyFinalizer,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToExecutableQueryTranslators.AnyFinalizer");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToExecutableQueryTranslators.ContainsMethodToExecutableQueryTranslator+ContainsFinalizer,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToExecutableQueryTranslators.ContainsFinalizer");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToExecutableQueryTranslators.ExecutableQuery`1,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToExecutableQueryTranslators.ExecutableQuery`1'1");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToExecutableQueryTranslators.ExecutableQuery`2,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToExecutableQueryTranslators.ExecutableQuery`2'2");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToExecutableQueryTranslators.ExecutableQuery`3,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToExecutableQueryTranslators.ExecutableQuery`3'3");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToExecutableQueryTranslators.ExpressionToExecutableQueryTranslator+IdentityFinalizer`1,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToExecutableQueryTranslators.IdentityFinalizer`1'1");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToExecutableQueryTranslators.IExecutableQueryFinalizer`2,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToExecutableQueryTranslators.IExecutableQueryFinalizer`2'2");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToExecutableQueryTranslators.Finalizers.FirstFinalizer`1,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToExecutableQueryTranslators.Finalizers.FirstFinalizer`1'1");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToExecutableQueryTranslators.Finalizers.FirstOrDefaultFinalizer`1,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToExecutableQueryTranslators.Finalizers.FirstOrDefaultFinalizer`1'1");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToExecutableQueryTranslators.Finalizers.SingleFinalizer`1,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToExecutableQueryTranslators.Finalizers.SingleFinalizer`1'1");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToExecutableQueryTranslators.Finalizers.SingleOrDefaultFinalizer`1,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToExecutableQueryTranslators.Finalizers.SingleOrDefaultFinalizer`1'1");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToFilterTranslators.MethodTranslators.StringExpressionToRegexFilterTranslator+Modifiers,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToFilterTranslators.MethodTranslators.Modifiers");
            feature.AddKnownType("MongoDB.Driver.Support.IndexMap,MongoDB.Driver", "MongoDB.Driver.Support.IndexMap");
            feature.AddKnownType("MongoDB.Driver.Support.IndexMap+RangeBased,MongoDB.Driver", "MongoDB.Driver.Support.MongoDB.Driver.Support.IndexMap.RangeBased");
            feature.AddKnownType("MongoDB.Driver.Support.IndexMap+DictionaryBased,MongoDB.Driver", "MongoDB.Driver.Support.MongoDB.Driver.Support.IndexMap.DictionaryBased");
            feature.AddKnownType("MongoDB.Libmongocrypt.Binary,MongoDB.Libmongocrypt", "MongoDB.Libmongocrypt.Binary");
            feature.AddKnownType("MongoDB.Libmongocrypt.BinarySafeHandle,MongoDB.Libmongocrypt", "MongoDB.Libmongocrypt.BinarySafeHandle");
            feature.AddKnownType("MongoDB.Libmongocrypt.CryptMode,MongoDB.Libmongocrypt", "MongoDB.Libmongocrypt.CryptMode");
            feature.AddKnownType("MongoDB.Libmongocrypt.ContextSafeHandle,MongoDB.Libmongocrypt", "MongoDB.Libmongocrypt.ContextSafeHandle");
            feature.AddKnownType("MongoDB.Libmongocrypt.CryptClient,MongoDB.Libmongocrypt", "MongoDB.Libmongocrypt.CryptClient");
            feature.AddKnownType("MongoDB.Libmongocrypt.CryptClientFactory,MongoDB.Libmongocrypt", "MongoDB.Libmongocrypt.CryptClientFactory");
            feature.AddKnownType("MongoDB.Libmongocrypt.CryptContext,MongoDB.Libmongocrypt", "MongoDB.Libmongocrypt.CryptContext");
            feature.AddKnownType("MongoDB.Libmongocrypt.CryptContext+StateCode,MongoDB.Libmongocrypt", "MongoDB.Libmongocrypt.MongoDB.Libmongocrypt.CryptContext.StateCode");
            feature.AddKnownType("MongoDB.Libmongocrypt.CryptException,MongoDB.Libmongocrypt", "MongoDB.Libmongocrypt.CryptException");
            feature.AddKnownType("MongoDB.Libmongocrypt.CryptOptions,MongoDB.Libmongocrypt", "MongoDB.Libmongocrypt.CryptOptions");
            feature.AddKnownType("MongoDB.Libmongocrypt.IStatus,MongoDB.Libmongocrypt", "MongoDB.Libmongocrypt.IStatus");
            feature.AddKnownType("MongoDB.Libmongocrypt.KmsCredentials,MongoDB.Libmongocrypt", "MongoDB.Libmongocrypt.KmsCredentials");
            feature.AddKnownType("MongoDB.Libmongocrypt.KmsKeyId,MongoDB.Libmongocrypt", "MongoDB.Libmongocrypt.KmsKeyId");
            feature.AddKnownType("MongoDB.Libmongocrypt.KmsRequest,MongoDB.Libmongocrypt", "MongoDB.Libmongocrypt.KmsRequest");
            feature.AddKnownType("MongoDB.Libmongocrypt.KmsRequestCollection,MongoDB.Libmongocrypt", "MongoDB.Libmongocrypt.KmsRequestCollection");
            feature.AddKnownType("MongoDB.Libmongocrypt.Library,MongoDB.Libmongocrypt", "MongoDB.Libmongocrypt.Library");
            feature.AddKnownType("MongoDB.Libmongocrypt.Library+StatusType,MongoDB.Libmongocrypt", "MongoDB.Libmongocrypt.StatusType");
            feature.AddKnownType("MongoDB.Libmongocrypt.Library+Delegates,MongoDB.Libmongocrypt", "MongoDB.Libmongocrypt.Delegates");
            feature.AddKnownType("MongoDB.Libmongocrypt.LibraryLoader,MongoDB.Libmongocrypt", "MongoDB.Libmongocrypt.LibraryLoader");
            feature.AddKnownType("MongoDB.Libmongocrypt.LibraryLoader+FunctionNotFoundException,MongoDB.Libmongocrypt", "MongoDB.Libmongocrypt.MongoDB.Libmongocrypt.LibraryLoader.FunctionNotFoundException");
            feature.AddKnownType("MongoDB.Libmongocrypt.LibraryLoader+ISharedLibraryLoader,MongoDB.Libmongocrypt", "MongoDB.Libmongocrypt.ISharedLibraryLoader");
            feature.AddKnownType("MongoDB.Libmongocrypt.LibraryLoader+DarwinLibraryLoader,MongoDB.Libmongocrypt", "MongoDB.Libmongocrypt.DarwinLibraryLoader");
            feature.AddKnownType("MongoDB.Libmongocrypt.LibraryLoader+LinuxLibrary,MongoDB.Libmongocrypt", "MongoDB.Libmongocrypt.LinuxLibrary");
            feature.AddKnownType("MongoDB.Libmongocrypt.LibraryLoader+WindowsLibrary,MongoDB.Libmongocrypt", "MongoDB.Libmongocrypt.WindowsLibrary");
            feature.AddKnownType("MongoDB.Libmongocrypt.LibraryLoadingException,MongoDB.Libmongocrypt", "MongoDB.Libmongocrypt.LibraryLoadingException");
            feature.AddKnownType("MongoDB.Libmongocrypt.LogLevel,MongoDB.Libmongocrypt", "MongoDB.Libmongocrypt.LogLevel");
            feature.AddKnownType("MongoDB.Libmongocrypt.MongoCryptSafeHandle,MongoDB.Libmongocrypt", "MongoDB.Libmongocrypt.MongoCryptSafeHandle");
            feature.AddKnownType("MongoDB.Libmongocrypt.OperatingSystemPlatform,MongoDB.Libmongocrypt", "MongoDB.Libmongocrypt.OperatingSystemPlatform");
            feature.AddKnownType("MongoDB.Libmongocrypt.PinnedBinary,MongoDB.Libmongocrypt", "MongoDB.Libmongocrypt.PinnedBinary");
            feature.AddKnownType("MongoDB.Libmongocrypt.Status,MongoDB.Libmongocrypt", "MongoDB.Libmongocrypt.Status");
            feature.AddKnownType("MongoDB.Libmongocrypt.StatusSafeHandle,MongoDB.Libmongocrypt", "MongoDB.Libmongocrypt.StatusSafeHandle");
            feature.AddKnownType("LaunchPB.ProtoCode,Protocol", "LaunchPB.ProtoCode");
            feature.AddKnownType("LaunchPB.RegisterResult,Protocol", "LaunchPB.RegisterResult");
            feature.AddKnownType("LaunchPB.LoginResult,Protocol", "LaunchPB.LoginResult");
            feature.AddKnownType("LaunchPB.Register,Protocol", "LaunchPB.Register");
            feature.AddKnownType("LaunchPB.RegisterResp,Protocol", "LaunchPB.RegisterResp");
            feature.AddKnownType("LaunchPB.Login,Protocol", "LaunchPB.Login");
            feature.AddKnownType("LaunchPB.LoginResp,Protocol", "LaunchPB.LoginResp");
            feature.AddKnownType("LaunchPB.Hero,Protocol", "LaunchPB.Hero");
            feature.AddKnownType("Protocol.Class1,Protocol", "Protocol.Class1");
            feature.AddKnownType("Serilog.ILogger,Serilog", "Serilog.ILogger");
            feature.AddKnownType("Serilog.LoggerConfiguration,Serilog", "Serilog.LoggerConfiguration");
            feature.AddKnownType("Serilog.Capturing.PropertyValueConverter,Serilog", "Serilog.Capturing.PropertyValueConverter");
            feature.AddKnownType("Serilog.Capturing.PropertyValueConverter+DepthLimiter,Serilog", "Serilog.Capturing.DepthLimiter");
            feature.AddKnownType("Serilog.Capturing.MessageTemplateProcessor,Serilog", "Serilog.Capturing.MessageTemplateProcessor");
            feature.AddKnownType("Serilog.Capturing.PropertyBinder,Serilog", "Serilog.Capturing.PropertyBinder");
            feature.AddKnownType("Serilog.Configuration.ILoggerSettings,Serilog", "Serilog.Configuration.ILoggerSettings");
            feature.AddKnownType("Serilog.Configuration.LoggerAuditSinkConfiguration,Serilog", "Serilog.Configuration.LoggerAuditSinkConfiguration");
            feature.AddKnownType("Serilog.Configuration.LoggerDestructuringConfiguration,Serilog", "Serilog.Configuration.LoggerDestructuringConfiguration");
            feature.AddKnownType("Serilog.Configuration.LoggerEnrichmentConfiguration,Serilog", "Serilog.Configuration.LoggerEnrichmentConfiguration");
            feature.AddKnownType("Serilog.Configuration.LoggerFilterConfiguration,Serilog", "Serilog.Configuration.LoggerFilterConfiguration");
            feature.AddKnownType("Serilog.Configuration.LoggerMinimumLevelConfiguration,Serilog", "Serilog.Configuration.LoggerMinimumLevelConfiguration");
            feature.AddKnownType("Serilog.Configuration.LoggerSettingsConfiguration,Serilog", "Serilog.Configuration.LoggerSettingsConfiguration");
            feature.AddKnownType("Serilog.Configuration.LoggerSinkConfiguration,Serilog", "Serilog.Configuration.LoggerSinkConfiguration");
            feature.AddKnownType("Serilog.Context.ImmutableStack`1,Serilog", "Serilog.Context.ImmutableStack`1'1");
            feature.AddKnownType("Serilog.Context.ImmutableStack`1+Enumerator,Serilog", "Serilog.Context.Enumerator'1");
            feature.AddKnownType("Serilog.Context.LogContext+ContextStackBookmark,Serilog", "Serilog.Context.ContextStackBookmark");
            feature.AddKnownType("Serilog.Context.LogContextEnricher,Serilog", "Serilog.Context.LogContextEnricher");
            feature.AddKnownType("Serilog.Core.CustomDefaultMethodImplementationAttribute,Serilog", "Serilog.Core.CustomDefaultMethodImplementationAttribute");
            feature.AddKnownType("Serilog.Core.IDestructuringPolicy,Serilog", "Serilog.Core.IDestructuringPolicy");
            feature.AddKnownType("Serilog.Core.ILogEventEnricher,Serilog", "Serilog.Core.ILogEventEnricher");
            feature.AddKnownType("Serilog.Core.ILogEventFilter,Serilog", "Serilog.Core.ILogEventFilter");
            feature.AddKnownType("Serilog.Core.ILogEventPropertyFactory,Serilog", "Serilog.Core.ILogEventPropertyFactory");
            feature.AddKnownType("Serilog.Core.ILogEventPropertyValueFactory,Serilog", "Serilog.Core.ILogEventPropertyValueFactory");
            feature.AddKnownType("Serilog.Core.ILogEventSink,Serilog", "Serilog.Core.ILogEventSink");
            feature.AddKnownType("Serilog.Core.IMessageTemplateParser,Serilog", "Serilog.Core.IMessageTemplateParser");
            feature.AddKnownType("Serilog.Core.IScalarConversionPolicy,Serilog", "Serilog.Core.IScalarConversionPolicy");
            feature.AddKnownType("Serilog.Core.LevelOverrideMap,Serilog", "Serilog.Core.LevelOverrideMap");
            feature.AddKnownType("Serilog.Core.LevelOverrideMap+LevelOverride,Serilog", "Serilog.Core.LevelOverride");
            feature.AddKnownType("Serilog.Core.Logger,Serilog", "Serilog.Core.Logger");
            feature.AddKnownType("Serilog.Core.LoggingLevelSwitch,Serilog", "Serilog.Core.LoggingLevelSwitch");
            feature.AddKnownType("Serilog.Core.MessageTemplateFormatMethodAttribute,Serilog", "Serilog.Core.MessageTemplateFormatMethodAttribute");
            feature.AddKnownType("Serilog.Core.Enrichers.ConditionalEnricher,Serilog", "Serilog.Core.Enrichers.ConditionalEnricher");
            feature.AddKnownType("Serilog.Core.Enrichers.EmptyEnricher,Serilog", "Serilog.Core.Enrichers.EmptyEnricher");
            feature.AddKnownType("Serilog.Core.Enrichers.FixedPropertyEnricher,Serilog", "Serilog.Core.Enrichers.FixedPropertyEnricher");
            feature.AddKnownType("Serilog.Core.Enrichers.PropertyEnricher,Serilog", "Serilog.Core.Enrichers.PropertyEnricher");
            feature.AddKnownType("Serilog.Core.Enrichers.SafeAggregateEnricher,Serilog", "Serilog.Core.Enrichers.SafeAggregateEnricher");
            feature.AddKnownType("Serilog.Core.Filters.DelegateFilter,Serilog", "Serilog.Core.Filters.DelegateFilter");
            feature.AddKnownType("Serilog.Core.Pipeline.MessageTemplateCache,Serilog", "Serilog.Core.Pipeline.MessageTemplateCache");
            feature.AddKnownType("Serilog.Core.Pipeline.SilentLogger,Serilog", "Serilog.Core.Pipeline.SilentLogger");
            feature.AddKnownType("Serilog.Core.Sinks.AggregateSink,Serilog", "Serilog.Core.Sinks.AggregateSink");
            feature.AddKnownType("Serilog.Core.Sinks.ConditionalSink,Serilog", "Serilog.Core.Sinks.ConditionalSink");
            feature.AddKnownType("Serilog.Core.Sinks.DisposeDelegatingSink,Serilog", "Serilog.Core.Sinks.DisposeDelegatingSink");
            feature.AddKnownType("Serilog.Core.Sinks.DisposingAggregateSink,Serilog", "Serilog.Core.Sinks.DisposingAggregateSink");
            feature.AddKnownType("Serilog.Core.Sinks.FilteringSink,Serilog", "Serilog.Core.Sinks.FilteringSink");
            feature.AddKnownType("Serilog.Core.Sinks.RestrictedSink,Serilog", "Serilog.Core.Sinks.RestrictedSink");
            feature.AddKnownType("Serilog.Core.Sinks.SafeAggregateSink,Serilog", "Serilog.Core.Sinks.SafeAggregateSink");
            feature.AddKnownType("Serilog.Core.Sinks.SecondaryLoggerSink,Serilog", "Serilog.Core.Sinks.SecondaryLoggerSink");
            feature.AddKnownType("Serilog.Data.LogEventPropertyValueRewriter`1,Serilog", "Serilog.Data.LogEventPropertyValueRewriter`1'1");
            feature.AddKnownType("Serilog.Data.LogEventPropertyValueVisitor`2,Serilog", "Serilog.Data.LogEventPropertyValueVisitor`2'2");
            feature.AddKnownType("Serilog.Debugging.LoggingFailedException,Serilog", "Serilog.Debugging.LoggingFailedException");
            feature.AddKnownType("Serilog.Events.DictionaryValue,Serilog", "Serilog.Events.DictionaryValue");
            feature.AddKnownType("Serilog.Events.EventProperty,Serilog", "Serilog.Events.EventProperty");
            feature.AddKnownType("Serilog.Events.LogEvent,Serilog", "Serilog.Events.LogEvent");
            feature.AddKnownType("Serilog.Events.LogEventLevel,Serilog", "Serilog.Events.LogEventLevel");
            feature.AddKnownType("Serilog.Events.LogEventProperty,Serilog", "Serilog.Events.LogEventProperty");
            feature.AddKnownType("Serilog.Events.LogEventPropertyValue,Serilog", "Serilog.Events.LogEventPropertyValue");
            feature.AddKnownType("Serilog.Events.MessageTemplate,Serilog", "Serilog.Events.MessageTemplate");
            feature.AddKnownType("Serilog.Events.ScalarValue,Serilog", "Serilog.Events.ScalarValue");
            feature.AddKnownType("Serilog.Events.SequenceValue,Serilog", "Serilog.Events.SequenceValue");
            feature.AddKnownType("Serilog.Events.StructureValue,Serilog", "Serilog.Events.StructureValue");
            feature.AddKnownType("Serilog.Formatting.ITextFormatter,Serilog", "Serilog.Formatting.ITextFormatter");
            feature.AddKnownType("Serilog.Formatting.Display.MessageTemplateTextFormatter,Serilog", "Serilog.Formatting.Display.MessageTemplateTextFormatter");
            feature.AddKnownType("Serilog.Formatting.Display.Obsolete.LiteralStringValue,Serilog", "Serilog.Formatting.Display.Obsolete.LiteralStringValue");
            feature.AddKnownType("Serilog.Formatting.Display.Obsolete.LogEventLevelValue,Serilog", "Serilog.Formatting.Display.Obsolete.LogEventLevelValue");
            feature.AddKnownType("Serilog.Formatting.Display.Obsolete.LogEventPropertiesValue,Serilog", "Serilog.Formatting.Display.Obsolete.LogEventPropertiesValue");
            feature.AddKnownType("Serilog.Formatting.Display.Obsolete.LogEventPropertyMessageValue,Serilog", "Serilog.Formatting.Display.Obsolete.LogEventPropertyMessageValue");
            feature.AddKnownType("Serilog.Formatting.Json.JsonFormatter,Serilog", "Serilog.Formatting.Json.JsonFormatter");
            feature.AddKnownType("Serilog.Formatting.Json.JsonValueFormatter,Serilog", "Serilog.Formatting.Json.JsonValueFormatter");
            feature.AddKnownType("Serilog.Formatting.Raw.RawFormatter,Serilog", "Serilog.Formatting.Raw.RawFormatter");
            feature.AddKnownType("Serilog.Parsing.Alignment,Serilog", "Serilog.Parsing.Alignment");
            feature.AddKnownType("Serilog.Parsing.AlignmentDirection,Serilog", "Serilog.Parsing.AlignmentDirection");
            feature.AddKnownType("Serilog.Parsing.Destructuring,Serilog", "Serilog.Parsing.Destructuring");
            feature.AddKnownType("Serilog.Parsing.MessageTemplateParser,Serilog", "Serilog.Parsing.MessageTemplateParser");
            feature.AddKnownType("Serilog.Parsing.MessageTemplateToken,Serilog", "Serilog.Parsing.MessageTemplateToken");
            feature.AddKnownType("Serilog.Parsing.PropertyToken,Serilog", "Serilog.Parsing.PropertyToken");
            feature.AddKnownType("Serilog.Parsing.TextToken,Serilog", "Serilog.Parsing.TextToken");
            feature.AddKnownType("Serilog.Policies.ByteArrayScalarConversionPolicy,Serilog", "Serilog.Policies.ByteArrayScalarConversionPolicy");
            feature.AddKnownType("Serilog.Policies.DelegateDestructuringPolicy,Serilog", "Serilog.Policies.DelegateDestructuringPolicy");
            feature.AddKnownType("Serilog.Policies.EnumScalarConversionPolicy,Serilog", "Serilog.Policies.EnumScalarConversionPolicy");
            feature.AddKnownType("Serilog.Policies.ProjectedDestructuringPolicy,Serilog", "Serilog.Policies.ProjectedDestructuringPolicy");
            feature.AddKnownType("Serilog.Policies.ReflectionTypesScalarDestructuringPolicy,Serilog", "Serilog.Policies.ReflectionTypesScalarDestructuringPolicy");
            feature.AddKnownType("Serilog.Policies.SimpleScalarConversionPolicy,Serilog", "Serilog.Policies.SimpleScalarConversionPolicy");
            feature.AddKnownType("Serilog.Settings.KeyValuePairs.KeyValuePairSettings,Serilog", "Serilog.Settings.KeyValuePairs.KeyValuePairSettings");
            feature.AddKnownType("Serilog.Settings.KeyValuePairs.KeyValuePairSettings+ConfigurationMethodCall,Serilog", "Serilog.Settings.KeyValuePairs.ConfigurationMethodCall");
            feature.AddKnownType("Serilog.Settings.KeyValuePairs.SettingValueConversions,Serilog", "Serilog.Settings.KeyValuePairs.SettingValueConversions");
            feature.AddKnownType("Serilog.Sinks.SystemConsole.ConsoleSink,Serilog.Sinks.Console", "Serilog.Sinks.SystemConsole.ConsoleSink");
            feature.AddKnownType("Serilog.Sinks.SystemConsole.Formatting.ThemedDisplayValueFormatter,Serilog.Sinks.Console", "Serilog.Sinks.SystemConsole.Formatting.ThemedDisplayValueFormatter");
            feature.AddKnownType("Serilog.Sinks.SystemConsole.Formatting.ThemedJsonValueFormatter,Serilog.Sinks.Console", "Serilog.Sinks.SystemConsole.Formatting.ThemedJsonValueFormatter");
            feature.AddKnownType("Serilog.Sinks.SystemConsole.Formatting.ThemedValueFormatter,Serilog.Sinks.Console", "Serilog.Sinks.SystemConsole.Formatting.ThemedValueFormatter");
            feature.AddKnownType("Serilog.Sinks.SystemConsole.Formatting.ThemedValueFormatterState,Serilog.Sinks.Console", "Serilog.Sinks.SystemConsole.Formatting.ThemedValueFormatterState");
            feature.AddKnownType("Serilog.Sinks.SystemConsole.Output.EventPropertyTokenRenderer,Serilog.Sinks.Console", "Serilog.Sinks.SystemConsole.Output.EventPropertyTokenRenderer");
            feature.AddKnownType("Serilog.Sinks.SystemConsole.Output.ExceptionTokenRenderer,Serilog.Sinks.Console", "Serilog.Sinks.SystemConsole.Output.ExceptionTokenRenderer");
            feature.AddKnownType("Serilog.Sinks.SystemConsole.Output.LevelTokenRenderer,Serilog.Sinks.Console", "Serilog.Sinks.SystemConsole.Output.LevelTokenRenderer");
            feature.AddKnownType("Serilog.Sinks.SystemConsole.Output.MessageTemplateOutputTokenRenderer,Serilog.Sinks.Console", "Serilog.Sinks.SystemConsole.Output.MessageTemplateOutputTokenRenderer");
            feature.AddKnownType("Serilog.Sinks.SystemConsole.Output.NewLineTokenRenderer,Serilog.Sinks.Console", "Serilog.Sinks.SystemConsole.Output.NewLineTokenRenderer");
            feature.AddKnownType("Serilog.Sinks.SystemConsole.Output.OutputTemplateRenderer,Serilog.Sinks.Console", "Serilog.Sinks.SystemConsole.Output.OutputTemplateRenderer");
            feature.AddKnownType("Serilog.Sinks.SystemConsole.Output.OutputTemplateTokenRenderer,Serilog.Sinks.Console", "Serilog.Sinks.SystemConsole.Output.OutputTemplateTokenRenderer");
            feature.AddKnownType("Serilog.Sinks.SystemConsole.Output.PropertiesTokenRenderer,Serilog.Sinks.Console", "Serilog.Sinks.SystemConsole.Output.PropertiesTokenRenderer");
            feature.AddKnownType("Serilog.Sinks.SystemConsole.Output.TextTokenRenderer,Serilog.Sinks.Console", "Serilog.Sinks.SystemConsole.Output.TextTokenRenderer");
            feature.AddKnownType("Serilog.Sinks.SystemConsole.Output.TimestampTokenRenderer,Serilog.Sinks.Console", "Serilog.Sinks.SystemConsole.Output.TimestampTokenRenderer");
            feature.AddKnownType("Serilog.Sinks.SystemConsole.Rendering.ThemedMessageTemplateRenderer,Serilog.Sinks.Console", "Serilog.Sinks.SystemConsole.Rendering.ThemedMessageTemplateRenderer");
            feature.AddKnownType("Serilog.Sinks.SystemConsole.Themes.AnsiConsoleTheme,Serilog.Sinks.Console", "Serilog.Sinks.SystemConsole.Themes.AnsiConsoleTheme");
            feature.AddKnownType("Serilog.Sinks.SystemConsole.Themes.ConsoleTheme,Serilog.Sinks.Console", "Serilog.Sinks.SystemConsole.Themes.ConsoleTheme");
            feature.AddKnownType("Serilog.Sinks.SystemConsole.Themes.ConsoleThemeStyle,Serilog.Sinks.Console", "Serilog.Sinks.SystemConsole.Themes.ConsoleThemeStyle");
            feature.AddKnownType("Serilog.Sinks.SystemConsole.Themes.EmptyConsoleTheme,Serilog.Sinks.Console", "Serilog.Sinks.SystemConsole.Themes.EmptyConsoleTheme");
            feature.AddKnownType("Serilog.Sinks.SystemConsole.Themes.StyleReset,Serilog.Sinks.Console", "Serilog.Sinks.SystemConsole.Themes.StyleReset");
            feature.AddKnownType("Serilog.Sinks.SystemConsole.Themes.SystemConsoleTheme,Serilog.Sinks.Console", "Serilog.Sinks.SystemConsole.Themes.SystemConsoleTheme");
            feature.AddKnownType("Serilog.Sinks.SystemConsole.Themes.SystemConsoleThemeStyle,Serilog.Sinks.Console", "Serilog.Sinks.SystemConsole.Themes.SystemConsoleThemeStyle");
            feature.AddKnownType("Serilog.RollingInterval,Serilog.Sinks.File", "Serilog.RollingInterval");
            feature.AddKnownType("Serilog.Sinks.File.FileLifecycleHooks,Serilog.Sinks.File", "Serilog.Sinks.File.FileLifecycleHooks");
            feature.AddKnownType("Serilog.Sinks.File.FileSink,Serilog.Sinks.File", "Serilog.Sinks.File.FileSink");
            feature.AddKnownType("Serilog.Sinks.File.IFileSink,Serilog.Sinks.File", "Serilog.Sinks.File.IFileSink");
            feature.AddKnownType("Serilog.Sinks.File.IFlushableFileSink,Serilog.Sinks.File", "Serilog.Sinks.File.IFlushableFileSink");
            feature.AddKnownType("Serilog.Sinks.File.NullSink,Serilog.Sinks.File", "Serilog.Sinks.File.NullSink");
            feature.AddKnownType("Serilog.Sinks.File.PathRoller,Serilog.Sinks.File", "Serilog.Sinks.File.PathRoller");
            feature.AddKnownType("Serilog.Sinks.File.PeriodicFlushToDiskSink,Serilog.Sinks.File", "Serilog.Sinks.File.PeriodicFlushToDiskSink");
            feature.AddKnownType("Serilog.Sinks.File.RollingFileSink,Serilog.Sinks.File", "Serilog.Sinks.File.RollingFileSink");
            feature.AddKnownType("Serilog.Sinks.File.RollingLogFile,Serilog.Sinks.File", "Serilog.Sinks.File.RollingLogFile");
            feature.AddKnownType("Serilog.Sinks.File.SharedFileSink,Serilog.Sinks.File", "Serilog.Sinks.File.SharedFileSink");
            feature.AddKnownType("Serilog.Sinks.File.WriteCountingStream,Serilog.Sinks.File", "Serilog.Sinks.File.WriteCountingStream");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,SharpCompress", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("SharpCompress.Lazy`1,SharpCompress", "SharpCompress.Lazy`1'1");
            feature.AddKnownType("SharpCompress.LazyReadOnlyCollection`1,SharpCompress", "SharpCompress.LazyReadOnlyCollection`1'1");
            feature.AddKnownType("SharpCompress.LazyReadOnlyCollection`1+LazyLoader,SharpCompress", "SharpCompress.LazyLoader'1");
            feature.AddKnownType("SharpCompress.ReadOnlyCollection`1,SharpCompress", "SharpCompress.ReadOnlyCollection`1'1");
            feature.AddKnownType("SharpCompress.Archives.AbstractArchive`2,SharpCompress", "SharpCompress.Archives.AbstractArchive`2'2");
            feature.AddKnownType("SharpCompress.Archives.AbstractWritableArchive`2,SharpCompress", "SharpCompress.Archives.AbstractWritableArchive`2'2");
            feature.AddKnownType("SharpCompress.Archives.AbstractWritableArchive`2+RebuildPauseDisposable,SharpCompress", "SharpCompress.Archives.RebuildPauseDisposable'2");
            feature.AddKnownType("SharpCompress.Archives.IArchive,SharpCompress", "SharpCompress.Archives.IArchive");
            feature.AddKnownType("SharpCompress.Archives.IArchiveEntry,SharpCompress", "SharpCompress.Archives.IArchiveEntry");
            feature.AddKnownType("SharpCompress.Archives.IArchiveExtractionListener,SharpCompress", "SharpCompress.Archives.IArchiveExtractionListener");
            feature.AddKnownType("SharpCompress.Archives.IWritableArchive,SharpCompress", "SharpCompress.Archives.IWritableArchive");
            feature.AddKnownType("SharpCompress.Archives.IWritableArchiveEntry,SharpCompress", "SharpCompress.Archives.IWritableArchiveEntry");
            feature.AddKnownType("SharpCompress.Archives.GZip.GZipArchive,SharpCompress", "SharpCompress.Archives.GZip.GZipArchive");
            feature.AddKnownType("SharpCompress.Archives.GZip.GZipArchiveEntry,SharpCompress", "SharpCompress.Archives.GZip.GZipArchiveEntry");
            feature.AddKnownType("SharpCompress.Archives.GZip.GZipWritableArchiveEntry,SharpCompress", "SharpCompress.Archives.GZip.GZipWritableArchiveEntry");
            feature.AddKnownType("SharpCompress.Archives.Rar.FileInfoRarArchiveVolume,SharpCompress", "SharpCompress.Archives.Rar.FileInfoRarArchiveVolume");
            feature.AddKnownType("SharpCompress.Archives.Rar.FileInfoRarFilePart,SharpCompress", "SharpCompress.Archives.Rar.FileInfoRarFilePart");
            feature.AddKnownType("SharpCompress.Archives.Rar.RarArchive,SharpCompress", "SharpCompress.Archives.Rar.RarArchive");
            feature.AddKnownType("SharpCompress.Archives.Rar.RarArchiveEntry,SharpCompress", "SharpCompress.Archives.Rar.RarArchiveEntry");
            feature.AddKnownType("SharpCompress.Archives.Rar.SeekableFilePart,SharpCompress", "SharpCompress.Archives.Rar.SeekableFilePart");
            feature.AddKnownType("SharpCompress.Archives.Rar.StreamRarArchiveVolume,SharpCompress", "SharpCompress.Archives.Rar.StreamRarArchiveVolume");
            feature.AddKnownType("SharpCompress.Archives.SevenZip.SevenZipArchive,SharpCompress", "SharpCompress.Archives.SevenZip.SevenZipArchive");
            feature.AddKnownType("SharpCompress.Archives.SevenZip.SevenZipArchive+SevenZipReader,SharpCompress", "SharpCompress.Archives.SevenZip.SevenZipReader");
            feature.AddKnownType("SharpCompress.Archives.SevenZip.SevenZipArchive+PasswordProvider,SharpCompress", "SharpCompress.Archives.SevenZip.PasswordProvider");
            feature.AddKnownType("SharpCompress.Archives.SevenZip.SevenZipArchiveEntry,SharpCompress", "SharpCompress.Archives.SevenZip.SevenZipArchiveEntry");
            feature.AddKnownType("SharpCompress.Archives.Tar.TarArchive,SharpCompress", "SharpCompress.Archives.Tar.TarArchive");
            feature.AddKnownType("SharpCompress.Archives.Tar.TarArchiveEntry,SharpCompress", "SharpCompress.Archives.Tar.TarArchiveEntry");
            feature.AddKnownType("SharpCompress.Archives.Tar.TarWritableArchiveEntry,SharpCompress", "SharpCompress.Archives.Tar.TarWritableArchiveEntry");
            feature.AddKnownType("SharpCompress.Archives.Zip.ZipArchive,SharpCompress", "SharpCompress.Archives.Zip.ZipArchive");
            feature.AddKnownType("SharpCompress.Archives.Zip.ZipArchiveEntry,SharpCompress", "SharpCompress.Archives.Zip.ZipArchiveEntry");
            feature.AddKnownType("SharpCompress.Archives.Zip.ZipWritableArchiveEntry,SharpCompress", "SharpCompress.Archives.Zip.ZipWritableArchiveEntry");
            feature.AddKnownType("SharpCompress.Common.ArchiveEncoding,SharpCompress", "SharpCompress.Common.ArchiveEncoding");
            feature.AddKnownType("SharpCompress.Common.ArchiveException,SharpCompress", "SharpCompress.Common.ArchiveException");
            feature.AddKnownType("SharpCompress.Common.ArchiveExtractionEventArgs`1,SharpCompress", "SharpCompress.Common.ArchiveExtractionEventArgs`1'1");
            feature.AddKnownType("SharpCompress.Common.ArchiveType,SharpCompress", "SharpCompress.Common.ArchiveType");
            feature.AddKnownType("SharpCompress.Common.CompressedBytesReadEventArgs,SharpCompress", "SharpCompress.Common.CompressedBytesReadEventArgs");
            feature.AddKnownType("SharpCompress.Common.CompressionType,SharpCompress", "SharpCompress.Common.CompressionType");
            feature.AddKnownType("SharpCompress.Common.CryptographicException,SharpCompress", "SharpCompress.Common.CryptographicException");
            feature.AddKnownType("SharpCompress.Common.Entry,SharpCompress", "SharpCompress.Common.Entry");
            feature.AddKnownType("SharpCompress.Common.EntryStream,SharpCompress", "SharpCompress.Common.EntryStream");
            feature.AddKnownType("SharpCompress.Common.ExtractionException,SharpCompress", "SharpCompress.Common.ExtractionException");
            feature.AddKnownType("SharpCompress.Common.ExtractionOptions,SharpCompress", "SharpCompress.Common.ExtractionOptions");
            feature.AddKnownType("SharpCompress.Common.FilePart,SharpCompress", "SharpCompress.Common.FilePart");
            feature.AddKnownType("SharpCompress.Common.FilePartExtractionBeginEventArgs,SharpCompress", "SharpCompress.Common.FilePartExtractionBeginEventArgs");
            feature.AddKnownType("SharpCompress.Common.IEntry,SharpCompress", "SharpCompress.Common.IEntry");
            feature.AddKnownType("SharpCompress.Common.IExtractionListener,SharpCompress", "SharpCompress.Common.IExtractionListener");
            feature.AddKnownType("SharpCompress.Common.IncompleteArchiveException,SharpCompress", "SharpCompress.Common.IncompleteArchiveException");
            feature.AddKnownType("SharpCompress.Common.InvalidFormatException,SharpCompress", "SharpCompress.Common.InvalidFormatException");
            feature.AddKnownType("SharpCompress.Common.IVolume,SharpCompress", "SharpCompress.Common.IVolume");
            feature.AddKnownType("SharpCompress.Common.MultipartStreamRequiredException,SharpCompress", "SharpCompress.Common.MultipartStreamRequiredException");
            feature.AddKnownType("SharpCompress.Common.MultiVolumeExtractionException,SharpCompress", "SharpCompress.Common.MultiVolumeExtractionException");
            feature.AddKnownType("SharpCompress.Common.OptionsBase,SharpCompress", "SharpCompress.Common.OptionsBase");
            feature.AddKnownType("SharpCompress.Common.PasswordProtectedException,SharpCompress", "SharpCompress.Common.PasswordProtectedException");
            feature.AddKnownType("SharpCompress.Common.ReaderExtractionEventArgs`1,SharpCompress", "SharpCompress.Common.ReaderExtractionEventArgs`1'1");
            feature.AddKnownType("SharpCompress.Common.Volume,SharpCompress", "SharpCompress.Common.Volume");
            feature.AddKnownType("SharpCompress.Common.GZip.GZipEntry,SharpCompress", "SharpCompress.Common.GZip.GZipEntry");
            feature.AddKnownType("SharpCompress.Common.GZip.GZipFilePart,SharpCompress", "SharpCompress.Common.GZip.GZipFilePart");
            feature.AddKnownType("SharpCompress.Common.GZip.GZipVolume,SharpCompress", "SharpCompress.Common.GZip.GZipVolume");
            feature.AddKnownType("SharpCompress.Common.Rar.RarCrcBinaryReader,SharpCompress", "SharpCompress.Common.Rar.RarCrcBinaryReader");
            feature.AddKnownType("SharpCompress.Common.Rar.RarCryptoBinaryReader,SharpCompress", "SharpCompress.Common.Rar.RarCryptoBinaryReader");
            feature.AddKnownType("SharpCompress.Common.Rar.RarCryptoWrapper,SharpCompress", "SharpCompress.Common.Rar.RarCryptoWrapper");
            feature.AddKnownType("SharpCompress.Common.Rar.RarEntry,SharpCompress", "SharpCompress.Common.Rar.RarEntry");
            feature.AddKnownType("SharpCompress.Common.Rar.RarFilePart,SharpCompress", "SharpCompress.Common.Rar.RarFilePart");
            feature.AddKnownType("SharpCompress.Common.Rar.RarRijndael,SharpCompress", "SharpCompress.Common.Rar.RarRijndael");
            feature.AddKnownType("SharpCompress.Common.Rar.RarVolume,SharpCompress", "SharpCompress.Common.Rar.RarVolume");
            feature.AddKnownType("SharpCompress.Common.Rar.Headers.ArchiveCryptHeader,SharpCompress", "SharpCompress.Common.Rar.Headers.ArchiveCryptHeader");
            feature.AddKnownType("SharpCompress.Common.Rar.Headers.ArchiveHeader,SharpCompress", "SharpCompress.Common.Rar.Headers.ArchiveHeader");
            feature.AddKnownType("SharpCompress.Common.Rar.Headers.AvHeader,SharpCompress", "SharpCompress.Common.Rar.Headers.AvHeader");
            feature.AddKnownType("SharpCompress.Common.Rar.Headers.CommentHeader,SharpCompress", "SharpCompress.Common.Rar.Headers.CommentHeader");
            feature.AddKnownType("SharpCompress.Common.Rar.Headers.EndArchiveHeader,SharpCompress", "SharpCompress.Common.Rar.Headers.EndArchiveHeader");
            feature.AddKnownType("SharpCompress.Common.Rar.Headers.FileHeader,SharpCompress", "SharpCompress.Common.Rar.Headers.FileHeader");
            feature.AddKnownType("SharpCompress.Common.Rar.Headers.HeaderType,SharpCompress", "SharpCompress.Common.Rar.Headers.HeaderType");
            feature.AddKnownType("SharpCompress.Common.Rar.Headers.IRarHeader,SharpCompress", "SharpCompress.Common.Rar.Headers.IRarHeader");
            feature.AddKnownType("SharpCompress.Common.Rar.Headers.MarkHeader,SharpCompress", "SharpCompress.Common.Rar.Headers.MarkHeader");
            feature.AddKnownType("SharpCompress.Common.Rar.Headers.NewSubHeaderType,SharpCompress", "SharpCompress.Common.Rar.Headers.NewSubHeaderType");
            feature.AddKnownType("SharpCompress.Common.Rar.Headers.ProtectHeader,SharpCompress", "SharpCompress.Common.Rar.Headers.ProtectHeader");
            feature.AddKnownType("SharpCompress.Common.Rar.Headers.RarHeader,SharpCompress", "SharpCompress.Common.Rar.Headers.RarHeader");
            feature.AddKnownType("SharpCompress.Common.Rar.Headers.RarHeaderFactory,SharpCompress", "SharpCompress.Common.Rar.Headers.RarHeaderFactory");
            feature.AddKnownType("SharpCompress.Common.Rar.Headers.SignHeader,SharpCompress", "SharpCompress.Common.Rar.Headers.SignHeader");
            feature.AddKnownType("SharpCompress.Common.SevenZip.ArchiveDatabase,SharpCompress", "SharpCompress.Common.SevenZip.ArchiveDatabase");
            feature.AddKnownType("SharpCompress.Common.SevenZip.ArchiveReader,SharpCompress", "SharpCompress.Common.SevenZip.ArchiveReader");
            feature.AddKnownType("SharpCompress.Common.SevenZip.ArchiveReader+CExtractFolderInfo,SharpCompress", "SharpCompress.Common.SevenZip.CExtractFolderInfo");
            feature.AddKnownType("SharpCompress.Common.SevenZip.ArchiveReader+FolderUnpackStream,SharpCompress", "SharpCompress.Common.SevenZip.FolderUnpackStream");
            feature.AddKnownType("SharpCompress.Common.SevenZip.CBindPair,SharpCompress", "SharpCompress.Common.SevenZip.CBindPair");
            feature.AddKnownType("SharpCompress.Common.SevenZip.CCoderInfo,SharpCompress", "SharpCompress.Common.SevenZip.CCoderInfo");
            feature.AddKnownType("SharpCompress.Common.SevenZip.CFileItem,SharpCompress", "SharpCompress.Common.SevenZip.CFileItem");
            feature.AddKnownType("SharpCompress.Common.SevenZip.CFolder,SharpCompress", "SharpCompress.Common.SevenZip.CFolder");
            feature.AddKnownType("SharpCompress.Common.SevenZip.CMethodId,SharpCompress", "SharpCompress.Common.SevenZip.CMethodId");
            feature.AddKnownType("SharpCompress.Common.SevenZip.CStreamSwitch,SharpCompress", "SharpCompress.Common.SevenZip.CStreamSwitch");
            feature.AddKnownType("SharpCompress.Common.SevenZip.DataReader,SharpCompress", "SharpCompress.Common.SevenZip.DataReader");
            feature.AddKnownType("SharpCompress.Common.SevenZip.SevenZipEntry,SharpCompress", "SharpCompress.Common.SevenZip.SevenZipEntry");
            feature.AddKnownType("SharpCompress.Common.SevenZip.SevenZipFilePart,SharpCompress", "SharpCompress.Common.SevenZip.SevenZipFilePart");
            feature.AddKnownType("SharpCompress.Common.SevenZip.SevenZipVolume,SharpCompress", "SharpCompress.Common.SevenZip.SevenZipVolume");
            feature.AddKnownType("SharpCompress.Common.Tar.TarEntry,SharpCompress", "SharpCompress.Common.Tar.TarEntry");
            feature.AddKnownType("SharpCompress.Common.Tar.TarFilePart,SharpCompress", "SharpCompress.Common.Tar.TarFilePart");
            feature.AddKnownType("SharpCompress.Common.Tar.TarReadOnlySubStream,SharpCompress", "SharpCompress.Common.Tar.TarReadOnlySubStream");
            feature.AddKnownType("SharpCompress.Common.Tar.TarVolume,SharpCompress", "SharpCompress.Common.Tar.TarVolume");
            feature.AddKnownType("SharpCompress.Common.Tar.Headers.EntryType,SharpCompress", "SharpCompress.Common.Tar.Headers.EntryType");
            feature.AddKnownType("SharpCompress.Common.Tar.Headers.TarHeader,SharpCompress", "SharpCompress.Common.Tar.Headers.TarHeader");
            feature.AddKnownType("SharpCompress.Common.Zip.CryptoMode,SharpCompress", "SharpCompress.Common.Zip.CryptoMode");
            feature.AddKnownType("SharpCompress.Common.Zip.PkwareTraditionalCryptoStream,SharpCompress", "SharpCompress.Common.Zip.PkwareTraditionalCryptoStream");
            feature.AddKnownType("SharpCompress.Common.Zip.PkwareTraditionalEncryptionData,SharpCompress", "SharpCompress.Common.Zip.PkwareTraditionalEncryptionData");
            feature.AddKnownType("SharpCompress.Common.Zip.SeekableZipFilePart,SharpCompress", "SharpCompress.Common.Zip.SeekableZipFilePart");
            feature.AddKnownType("SharpCompress.Common.Zip.SeekableZipHeaderFactory,SharpCompress", "SharpCompress.Common.Zip.SeekableZipHeaderFactory");
            feature.AddKnownType("SharpCompress.Common.Zip.StreamingZipFilePart,SharpCompress", "SharpCompress.Common.Zip.StreamingZipFilePart");
            feature.AddKnownType("SharpCompress.Common.Zip.StreamingZipHeaderFactory,SharpCompress", "SharpCompress.Common.Zip.StreamingZipHeaderFactory");
            feature.AddKnownType("SharpCompress.Common.Zip.WinzipAesCryptoStream,SharpCompress", "SharpCompress.Common.Zip.WinzipAesCryptoStream");
            feature.AddKnownType("SharpCompress.Common.Zip.WinzipAesEncryptionData,SharpCompress", "SharpCompress.Common.Zip.WinzipAesEncryptionData");
            feature.AddKnownType("SharpCompress.Common.Zip.WinzipAesKeySize,SharpCompress", "SharpCompress.Common.Zip.WinzipAesKeySize");
            feature.AddKnownType("SharpCompress.Common.Zip.ZipCompressionMethod,SharpCompress", "SharpCompress.Common.Zip.ZipCompressionMethod");
            feature.AddKnownType("SharpCompress.Common.Zip.ZipEntry,SharpCompress", "SharpCompress.Common.Zip.ZipEntry");
            feature.AddKnownType("SharpCompress.Common.Zip.ZipFilePart,SharpCompress", "SharpCompress.Common.Zip.ZipFilePart");
            feature.AddKnownType("SharpCompress.Common.Zip.ZipHeaderFactory,SharpCompress", "SharpCompress.Common.Zip.ZipHeaderFactory");
            feature.AddKnownType("SharpCompress.Common.Zip.ZipVolume,SharpCompress", "SharpCompress.Common.Zip.ZipVolume");
            feature.AddKnownType("SharpCompress.Common.Zip.Headers.DirectoryEndHeader,SharpCompress", "SharpCompress.Common.Zip.Headers.DirectoryEndHeader");
            feature.AddKnownType("SharpCompress.Common.Zip.Headers.DirectoryEntryHeader,SharpCompress", "SharpCompress.Common.Zip.Headers.DirectoryEntryHeader");
            feature.AddKnownType("SharpCompress.Common.Zip.Headers.HeaderFlags,SharpCompress", "SharpCompress.Common.Zip.Headers.HeaderFlags");
            feature.AddKnownType("SharpCompress.Common.Zip.Headers.IgnoreHeader,SharpCompress", "SharpCompress.Common.Zip.Headers.IgnoreHeader");
            feature.AddKnownType("SharpCompress.Common.Zip.Headers.LocalEntryHeader,SharpCompress", "SharpCompress.Common.Zip.Headers.LocalEntryHeader");
            feature.AddKnownType("SharpCompress.Common.Zip.Headers.ExtraDataType,SharpCompress", "SharpCompress.Common.Zip.Headers.ExtraDataType");
            feature.AddKnownType("SharpCompress.Common.Zip.Headers.ExtraData,SharpCompress", "SharpCompress.Common.Zip.Headers.ExtraData");
            feature.AddKnownType("SharpCompress.Common.Zip.Headers.ExtraUnicodePathExtraField,SharpCompress", "SharpCompress.Common.Zip.Headers.ExtraUnicodePathExtraField");
            feature.AddKnownType("SharpCompress.Common.Zip.Headers.Zip64ExtendedInformationExtraField,SharpCompress", "SharpCompress.Common.Zip.Headers.Zip64ExtendedInformationExtraField");
            feature.AddKnownType("SharpCompress.Common.Zip.Headers.SplitHeader,SharpCompress", "SharpCompress.Common.Zip.Headers.SplitHeader");
            feature.AddKnownType("SharpCompress.Common.Zip.Headers.Zip64DirectoryEndHeader,SharpCompress", "SharpCompress.Common.Zip.Headers.Zip64DirectoryEndHeader");
            feature.AddKnownType("SharpCompress.Common.Zip.Headers.Zip64DirectoryEndLocatorHeader,SharpCompress", "SharpCompress.Common.Zip.Headers.Zip64DirectoryEndLocatorHeader");
            feature.AddKnownType("SharpCompress.Common.Zip.Headers.ZipFileEntry,SharpCompress", "SharpCompress.Common.Zip.Headers.ZipFileEntry");
            feature.AddKnownType("SharpCompress.Common.Zip.Headers.ZipHeader,SharpCompress", "SharpCompress.Common.Zip.Headers.ZipHeader");
            feature.AddKnownType("SharpCompress.Common.Zip.Headers.ZipHeaderType,SharpCompress", "SharpCompress.Common.Zip.Headers.ZipHeaderType");
            feature.AddKnownType("SharpCompress.Compressors.CompressionMode,SharpCompress", "SharpCompress.Compressors.CompressionMode");
            feature.AddKnownType("SharpCompress.Compressors.ADC.ADCStream,SharpCompress", "SharpCompress.Compressors.ADC.ADCStream");
            feature.AddKnownType("SharpCompress.Compressors.BZip2.BZip2Constants,SharpCompress", "SharpCompress.Compressors.BZip2.BZip2Constants");
            feature.AddKnownType("SharpCompress.Compressors.BZip2.BZip2Stream,SharpCompress", "SharpCompress.Compressors.BZip2.BZip2Stream");
            feature.AddKnownType("SharpCompress.Compressors.BZip2.CBZip2InputStream,SharpCompress", "SharpCompress.Compressors.BZip2.CBZip2InputStream");
            feature.AddKnownType("SharpCompress.Compressors.BZip2.CBZip2OutputStream,SharpCompress", "SharpCompress.Compressors.BZip2.CBZip2OutputStream");
            feature.AddKnownType("SharpCompress.Compressors.BZip2.CBZip2OutputStream+StackElem,SharpCompress", "SharpCompress.Compressors.BZip2.StackElem");
            feature.AddKnownType("SharpCompress.Compressors.BZip2.CRC,SharpCompress", "SharpCompress.Compressors.BZip2.CRC");
            feature.AddKnownType("SharpCompress.Compressors.Deflate.CRC32,SharpCompress", "SharpCompress.Compressors.Deflate.CRC32");
            feature.AddKnownType("SharpCompress.Compressors.Deflate.DeflateManager,SharpCompress", "SharpCompress.Compressors.Deflate.DeflateManager");
            feature.AddKnownType("SharpCompress.Compressors.Deflate.DeflateManager+BlockState,SharpCompress", "SharpCompress.Compressors.Deflate.BlockState");
            feature.AddKnownType("SharpCompress.Compressors.Deflate.DeflateManager+DeflateFlavor,SharpCompress", "SharpCompress.Compressors.Deflate.DeflateFlavor");
            feature.AddKnownType("SharpCompress.Compressors.Deflate.DeflateManager+Config,SharpCompress", "SharpCompress.Compressors.Deflate.Config");
            feature.AddKnownType("SharpCompress.Compressors.Deflate.DeflateManager+Tree,SharpCompress", "SharpCompress.Compressors.Deflate.Tree");
            feature.AddKnownType("SharpCompress.Compressors.Deflate.DeflateStream,SharpCompress", "SharpCompress.Compressors.Deflate.DeflateStream");
            feature.AddKnownType("SharpCompress.Compressors.Deflate.FlushType,SharpCompress", "SharpCompress.Compressors.Deflate.FlushType");
            feature.AddKnownType("SharpCompress.Compressors.Deflate.GZipStream,SharpCompress", "SharpCompress.Compressors.Deflate.GZipStream");
            feature.AddKnownType("SharpCompress.Compressors.Deflate.InflateBlocks,SharpCompress", "SharpCompress.Compressors.Deflate.InflateBlocks");
            feature.AddKnownType("SharpCompress.Compressors.Deflate.InflateBlocks+InflateBlockMode,SharpCompress", "SharpCompress.Compressors.Deflate.InflateBlockMode");
            feature.AddKnownType("SharpCompress.Compressors.Deflate.InflateCodes,SharpCompress", "SharpCompress.Compressors.Deflate.InflateCodes");
            feature.AddKnownType("SharpCompress.Compressors.Deflate.InflateManager,SharpCompress", "SharpCompress.Compressors.Deflate.InflateManager");
            feature.AddKnownType("SharpCompress.Compressors.Deflate.InflateManager+InflateManagerMode,SharpCompress", "SharpCompress.Compressors.Deflate.InflateManagerMode");
            feature.AddKnownType("SharpCompress.Compressors.Deflate.InfTree,SharpCompress", "SharpCompress.Compressors.Deflate.InfTree");
            feature.AddKnownType("SharpCompress.Compressors.Deflate.CompressionLevel,SharpCompress", "SharpCompress.Compressors.Deflate.CompressionLevel");
            feature.AddKnownType("SharpCompress.Compressors.Deflate.CompressionStrategy,SharpCompress", "SharpCompress.Compressors.Deflate.CompressionStrategy");
            feature.AddKnownType("SharpCompress.Compressors.Deflate.ZlibException,SharpCompress", "SharpCompress.Compressors.Deflate.ZlibException");
            feature.AddKnownType("SharpCompress.Compressors.Deflate.SharedUtils,SharpCompress", "SharpCompress.Compressors.Deflate.SharedUtils");
            feature.AddKnownType("SharpCompress.Compressors.Deflate.StaticTree,SharpCompress", "SharpCompress.Compressors.Deflate.StaticTree");
            feature.AddKnownType("SharpCompress.Compressors.Deflate.ZlibStreamFlavor,SharpCompress", "SharpCompress.Compressors.Deflate.ZlibStreamFlavor");
            feature.AddKnownType("SharpCompress.Compressors.Deflate.ZlibBaseStream,SharpCompress", "SharpCompress.Compressors.Deflate.ZlibBaseStream");
            feature.AddKnownType("SharpCompress.Compressors.Deflate.ZlibBaseStream+StreamMode,SharpCompress", "SharpCompress.Compressors.Deflate.StreamMode");
            feature.AddKnownType("SharpCompress.Compressors.Deflate.ZlibCodec,SharpCompress", "SharpCompress.Compressors.Deflate.ZlibCodec");
            feature.AddKnownType("SharpCompress.Compressors.Deflate.ZlibStream,SharpCompress", "SharpCompress.Compressors.Deflate.ZlibStream");
            feature.AddKnownType("SharpCompress.Compressors.Deflate64.BlockType,SharpCompress", "SharpCompress.Compressors.Deflate64.BlockType");
            feature.AddKnownType("SharpCompress.Compressors.Deflate64.Deflate64Stream,SharpCompress", "SharpCompress.Compressors.Deflate64.Deflate64Stream");
            feature.AddKnownType("SharpCompress.Compressors.Deflate64.DeflateInput,SharpCompress", "SharpCompress.Compressors.Deflate64.DeflateInput");
            feature.AddKnownType("SharpCompress.Compressors.Deflate64.DeflateInput+InputState,SharpCompress", "SharpCompress.Compressors.Deflate64.InputState");
            feature.AddKnownType("SharpCompress.Compressors.Deflate64.HuffmanTree,SharpCompress", "SharpCompress.Compressors.Deflate64.HuffmanTree");
            feature.AddKnownType("SharpCompress.Compressors.Deflate64.InflaterManaged,SharpCompress", "SharpCompress.Compressors.Deflate64.InflaterManaged");
            feature.AddKnownType("SharpCompress.Compressors.Deflate64.InflaterState,SharpCompress", "SharpCompress.Compressors.Deflate64.InflaterState");
            feature.AddKnownType("SharpCompress.Compressors.Deflate64.InputBuffer,SharpCompress", "SharpCompress.Compressors.Deflate64.InputBuffer");
            feature.AddKnownType("SharpCompress.Compressors.Deflate64.Match,SharpCompress", "SharpCompress.Compressors.Deflate64.Match");
            feature.AddKnownType("SharpCompress.Compressors.Deflate64.MatchState,SharpCompress", "SharpCompress.Compressors.Deflate64.MatchState");
            feature.AddKnownType("SharpCompress.Compressors.Deflate64.OutputWindow,SharpCompress", "SharpCompress.Compressors.Deflate64.OutputWindow");
            feature.AddKnownType("SharpCompress.Compressors.Filters.BCJ2Filter,SharpCompress", "SharpCompress.Compressors.Filters.BCJ2Filter");
            feature.AddKnownType("SharpCompress.Compressors.Filters.BCJFilter,SharpCompress", "SharpCompress.Compressors.Filters.BCJFilter");
            feature.AddKnownType("SharpCompress.Compressors.Filters.Filter,SharpCompress", "SharpCompress.Compressors.Filters.Filter");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.AesDecoderStream,SharpCompress", "SharpCompress.Compressors.LZMA.AesDecoderStream");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.Bcj2DecoderStream,SharpCompress", "SharpCompress.Compressors.LZMA.Bcj2DecoderStream");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.Bcj2DecoderStream+RangeDecoder,SharpCompress", "SharpCompress.Compressors.LZMA.RangeDecoder");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.Bcj2DecoderStream+StatusDecoder,SharpCompress", "SharpCompress.Compressors.LZMA.StatusDecoder");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.BitVector,SharpCompress", "SharpCompress.Compressors.LZMA.BitVector");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.DecoderStream2,SharpCompress", "SharpCompress.Compressors.LZMA.DecoderStream2");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.DataErrorException,SharpCompress", "SharpCompress.Compressors.LZMA.DataErrorException");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.InvalidParamException,SharpCompress", "SharpCompress.Compressors.LZMA.InvalidParamException");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.ICodeProgress,SharpCompress", "SharpCompress.Compressors.LZMA.ICodeProgress");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.ICoder,SharpCompress", "SharpCompress.Compressors.LZMA.ICoder");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.CoderPropId,SharpCompress", "SharpCompress.Compressors.LZMA.CoderPropId");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.ISetCoderProperties,SharpCompress", "SharpCompress.Compressors.LZMA.ISetCoderProperties");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.IWriteCoderProperties,SharpCompress", "SharpCompress.Compressors.LZMA.IWriteCoderProperties");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.ISetDecoderProperties,SharpCompress", "SharpCompress.Compressors.LZMA.ISetDecoderProperties");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.LZipStream,SharpCompress", "SharpCompress.Compressors.LZMA.LZipStream");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.Base,SharpCompress", "SharpCompress.Compressors.LZMA.Base");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.Base+State,SharpCompress", "SharpCompress.Compressors.LZMA.SharpCompress.Compressors.LZMA.Base.State");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.Decoder,SharpCompress", "SharpCompress.Compressors.LZMA.Decoder");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.Decoder+LenDecoder,SharpCompress", "SharpCompress.Compressors.LZMA.LenDecoder");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.Decoder+LiteralDecoder,SharpCompress", "SharpCompress.Compressors.LZMA.LiteralDecoder");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.Decoder+LiteralDecoder+Decoder2,SharpCompress", "SharpCompress.Compressors.LZMA.Decoder2");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.Encoder,SharpCompress", "SharpCompress.Compressors.LZMA.Encoder");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.Encoder+EMatchFinderType,SharpCompress", "SharpCompress.Compressors.LZMA.EMatchFinderType");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.Encoder+LiteralEncoder,SharpCompress", "SharpCompress.Compressors.LZMA.LiteralEncoder");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.Encoder+LiteralEncoder+Encoder2,SharpCompress", "SharpCompress.Compressors.LZMA.SharpCompress.Compressors.LZMA.LiteralEncoder.Encoder2");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.Encoder+LenEncoder,SharpCompress", "SharpCompress.Compressors.LZMA.LenEncoder");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.Encoder+LenPriceTableEncoder,SharpCompress", "SharpCompress.Compressors.LZMA.LenPriceTableEncoder");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.Encoder+Optimal,SharpCompress", "SharpCompress.Compressors.LZMA.Optimal");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.LzmaEncoderProperties,SharpCompress", "SharpCompress.Compressors.LZMA.LzmaEncoderProperties");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.LzmaStream,SharpCompress", "SharpCompress.Compressors.LZMA.LzmaStream");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.LZ.BinTree,SharpCompress", "SharpCompress.Compressors.LZMA.LZ.BinTree");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.LZ.InWindow,SharpCompress", "SharpCompress.Compressors.LZMA.LZ.InWindow");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.LZ.OutWindow,SharpCompress", "SharpCompress.Compressors.LZMA.LZ.OutWindow");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.RangeCoder.Encoder,SharpCompress", "SharpCompress.Compressors.LZMA.RangeCoder.Encoder");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.RangeCoder.Decoder,SharpCompress", "SharpCompress.Compressors.LZMA.RangeCoder.Decoder");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.RangeCoder.BitEncoder,SharpCompress", "SharpCompress.Compressors.LZMA.RangeCoder.BitEncoder");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.RangeCoder.BitDecoder,SharpCompress", "SharpCompress.Compressors.LZMA.RangeCoder.BitDecoder");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.RangeCoder.BitTreeEncoder,SharpCompress", "SharpCompress.Compressors.LZMA.RangeCoder.BitTreeEncoder");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.RangeCoder.BitTreeDecoder,SharpCompress", "SharpCompress.Compressors.LZMA.RangeCoder.BitTreeDecoder");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.Utilites.CrcBuilderStream,SharpCompress", "SharpCompress.Compressors.LZMA.Utilites.CrcBuilderStream");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.Utilites.CrcCheckStream,SharpCompress", "SharpCompress.Compressors.LZMA.Utilites.CrcCheckStream");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.Utilites.IPasswordProvider,SharpCompress", "SharpCompress.Compressors.LZMA.Utilites.IPasswordProvider");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.Utilites.BlockType,SharpCompress", "SharpCompress.Compressors.LZMA.Utilites.BlockType");
            feature.AddKnownType("SharpCompress.Compressors.PPMd.PpmdProperties,SharpCompress", "SharpCompress.Compressors.PPMd.PpmdProperties");
            feature.AddKnownType("SharpCompress.Compressors.PPMd.PpmdStream,SharpCompress", "SharpCompress.Compressors.PPMd.PpmdStream");
            feature.AddKnownType("SharpCompress.Compressors.PPMd.PpmdVersion,SharpCompress", "SharpCompress.Compressors.PPMd.PpmdVersion");
            feature.AddKnownType("SharpCompress.Compressors.PPMd.H.FreqData,SharpCompress", "SharpCompress.Compressors.PPMd.H.FreqData");
            feature.AddKnownType("SharpCompress.Compressors.PPMd.H.ModelPpm,SharpCompress", "SharpCompress.Compressors.PPMd.H.ModelPpm");
            feature.AddKnownType("SharpCompress.Compressors.PPMd.H.Pointer,SharpCompress", "SharpCompress.Compressors.PPMd.H.Pointer");
            feature.AddKnownType("SharpCompress.Compressors.PPMd.H.PpmContext,SharpCompress", "SharpCompress.Compressors.PPMd.H.PpmContext");
            feature.AddKnownType("SharpCompress.Compressors.PPMd.H.RangeCoder,SharpCompress", "SharpCompress.Compressors.PPMd.H.RangeCoder");
            feature.AddKnownType("SharpCompress.Compressors.PPMd.H.SubRange,SharpCompress", "SharpCompress.Compressors.PPMd.H.SubRange");
            feature.AddKnownType("SharpCompress.Compressors.PPMd.H.RarMemBlock,SharpCompress", "SharpCompress.Compressors.PPMd.H.RarMemBlock");
            feature.AddKnownType("SharpCompress.Compressors.PPMd.H.RarNode,SharpCompress", "SharpCompress.Compressors.PPMd.H.RarNode");
            feature.AddKnownType("SharpCompress.Compressors.PPMd.H.See2Context,SharpCompress", "SharpCompress.Compressors.PPMd.H.See2Context");
            feature.AddKnownType("SharpCompress.Compressors.PPMd.H.State,SharpCompress", "SharpCompress.Compressors.PPMd.H.State");
            feature.AddKnownType("SharpCompress.Compressors.PPMd.H.StateRef,SharpCompress", "SharpCompress.Compressors.PPMd.H.StateRef");
            feature.AddKnownType("SharpCompress.Compressors.PPMd.H.SubAllocator,SharpCompress", "SharpCompress.Compressors.PPMd.H.SubAllocator");
            feature.AddKnownType("SharpCompress.Compressors.PPMd.I1.Allocator,SharpCompress", "SharpCompress.Compressors.PPMd.I1.Allocator");
            feature.AddKnownType("SharpCompress.Compressors.PPMd.I1.Coder,SharpCompress", "SharpCompress.Compressors.PPMd.I1.Coder");
            feature.AddKnownType("SharpCompress.Compressors.PPMd.I1.MemoryNode,SharpCompress", "SharpCompress.Compressors.PPMd.I1.MemoryNode");
            feature.AddKnownType("SharpCompress.Compressors.PPMd.I1.Model,SharpCompress", "SharpCompress.Compressors.PPMd.I1.Model");
            feature.AddKnownType("SharpCompress.Compressors.PPMd.I1.Model+PpmContext,SharpCompress", "SharpCompress.Compressors.PPMd.I1.PpmContext");
            feature.AddKnownType("SharpCompress.Compressors.PPMd.I1.ModelRestorationMethod,SharpCompress", "SharpCompress.Compressors.PPMd.I1.ModelRestorationMethod");
            feature.AddKnownType("SharpCompress.Compressors.PPMd.I1.Pointer,SharpCompress", "SharpCompress.Compressors.PPMd.I1.Pointer");
            feature.AddKnownType("SharpCompress.Compressors.PPMd.I1.PpmState,SharpCompress", "SharpCompress.Compressors.PPMd.I1.PpmState");
            feature.AddKnownType("SharpCompress.Compressors.PPMd.I1.See2Context,SharpCompress", "SharpCompress.Compressors.PPMd.I1.See2Context");
            feature.AddKnownType("SharpCompress.Compressors.Rar.IRarUnpack,SharpCompress", "SharpCompress.Compressors.Rar.IRarUnpack");
            feature.AddKnownType("SharpCompress.Compressors.Rar.MultiVolumeReadOnlyStream,SharpCompress", "SharpCompress.Compressors.Rar.MultiVolumeReadOnlyStream");
            feature.AddKnownType("SharpCompress.Compressors.Rar.RarCrcStream,SharpCompress", "SharpCompress.Compressors.Rar.RarCrcStream");
            feature.AddKnownType("SharpCompress.Compressors.Rar.RarStream,SharpCompress", "SharpCompress.Compressors.Rar.RarStream");
            feature.AddKnownType("SharpCompress.Compressors.Rar.UnpackV1.Unpack,SharpCompress", "SharpCompress.Compressors.Rar.UnpackV1.Unpack");
            feature.AddKnownType("SharpCompress.Compressors.Rar.UnpackV1.UnpackFilter,SharpCompress", "SharpCompress.Compressors.Rar.UnpackV1.UnpackFilter");
            feature.AddKnownType("SharpCompress.Compressors.Rar.UnpackV1.Decode.AudioVariables,SharpCompress", "SharpCompress.Compressors.Rar.UnpackV1.Decode.AudioVariables");
            feature.AddKnownType("SharpCompress.Compressors.Rar.UnpackV1.Decode.BitDecode,SharpCompress", "SharpCompress.Compressors.Rar.UnpackV1.Decode.BitDecode");
            feature.AddKnownType("SharpCompress.Compressors.Rar.UnpackV1.Decode.CodeType,SharpCompress", "SharpCompress.Compressors.Rar.UnpackV1.Decode.CodeType");
            feature.AddKnownType("SharpCompress.Compressors.Rar.UnpackV1.Decode.Decode,SharpCompress", "SharpCompress.Compressors.Rar.UnpackV1.Decode.Decode");
            feature.AddKnownType("SharpCompress.Compressors.Rar.UnpackV1.Decode.DistDecode,SharpCompress", "SharpCompress.Compressors.Rar.UnpackV1.Decode.DistDecode");
            feature.AddKnownType("SharpCompress.Compressors.Rar.UnpackV1.Decode.FilterType,SharpCompress", "SharpCompress.Compressors.Rar.UnpackV1.Decode.FilterType");
            feature.AddKnownType("SharpCompress.Compressors.Rar.UnpackV1.Decode.LitDecode,SharpCompress", "SharpCompress.Compressors.Rar.UnpackV1.Decode.LitDecode");
            feature.AddKnownType("SharpCompress.Compressors.Rar.UnpackV1.Decode.LowDistDecode,SharpCompress", "SharpCompress.Compressors.Rar.UnpackV1.Decode.LowDistDecode");
            feature.AddKnownType("SharpCompress.Compressors.Rar.UnpackV1.Decode.MultDecode,SharpCompress", "SharpCompress.Compressors.Rar.UnpackV1.Decode.MultDecode");
            feature.AddKnownType("SharpCompress.Compressors.Rar.UnpackV1.Decode.RepDecode,SharpCompress", "SharpCompress.Compressors.Rar.UnpackV1.Decode.RepDecode");
            feature.AddKnownType("SharpCompress.Compressors.Rar.UnpackV1.PPM.BlockTypes,SharpCompress", "SharpCompress.Compressors.Rar.UnpackV1.PPM.BlockTypes");
            feature.AddKnownType("SharpCompress.Compressors.Rar.UnpackV2017.BitInput,SharpCompress", "SharpCompress.Compressors.Rar.UnpackV2017.BitInput");
            feature.AddKnownType("SharpCompress.Compressors.Rar.UnpackV2017.FragmentedWindow,SharpCompress", "SharpCompress.Compressors.Rar.UnpackV2017.FragmentedWindow");
            feature.AddKnownType("SharpCompress.Compressors.Rar.UnpackV2017.Unpack,SharpCompress", "SharpCompress.Compressors.Rar.UnpackV2017.Unpack");
            feature.AddKnownType("SharpCompress.Compressors.Rar.UnpackV2017.DecodeTable,SharpCompress", "SharpCompress.Compressors.Rar.UnpackV2017.DecodeTable");
            feature.AddKnownType("SharpCompress.Compressors.Rar.UnpackV2017.UnpackBlockHeader,SharpCompress", "SharpCompress.Compressors.Rar.UnpackV2017.UnpackBlockHeader");
            feature.AddKnownType("SharpCompress.Compressors.Rar.UnpackV2017.UnpackBlockTables,SharpCompress", "SharpCompress.Compressors.Rar.UnpackV2017.UnpackBlockTables");
            feature.AddKnownType("SharpCompress.Compressors.Rar.UnpackV2017.UnpackFilter,SharpCompress", "SharpCompress.Compressors.Rar.UnpackV2017.UnpackFilter");
            feature.AddKnownType("SharpCompress.Compressors.Rar.UnpackV2017.UnpackFilter30,SharpCompress", "SharpCompress.Compressors.Rar.UnpackV2017.UnpackFilter30");
            feature.AddKnownType("SharpCompress.Compressors.Rar.UnpackV2017.AudioVariables,SharpCompress", "SharpCompress.Compressors.Rar.UnpackV2017.AudioVariables");
            feature.AddKnownType("SharpCompress.Compressors.Rar.VM.BitInput,SharpCompress", "SharpCompress.Compressors.Rar.VM.BitInput");
            feature.AddKnownType("SharpCompress.Compressors.Rar.VM.RarVM,SharpCompress", "SharpCompress.Compressors.Rar.VM.RarVM");
            feature.AddKnownType("SharpCompress.Compressors.Rar.VM.VMCmdFlags,SharpCompress", "SharpCompress.Compressors.Rar.VM.VMCmdFlags");
            feature.AddKnownType("SharpCompress.Compressors.Rar.VM.VMCommands,SharpCompress", "SharpCompress.Compressors.Rar.VM.VMCommands");
            feature.AddKnownType("SharpCompress.Compressors.Rar.VM.VMFlags,SharpCompress", "SharpCompress.Compressors.Rar.VM.VMFlags");
            feature.AddKnownType("SharpCompress.Compressors.Rar.VM.VMOpType,SharpCompress", "SharpCompress.Compressors.Rar.VM.VMOpType");
            feature.AddKnownType("SharpCompress.Compressors.Rar.VM.VMPreparedCommand,SharpCompress", "SharpCompress.Compressors.Rar.VM.VMPreparedCommand");
            feature.AddKnownType("SharpCompress.Compressors.Rar.VM.VMPreparedOperand,SharpCompress", "SharpCompress.Compressors.Rar.VM.VMPreparedOperand");
            feature.AddKnownType("SharpCompress.Compressors.Rar.VM.VMPreparedProgram,SharpCompress", "SharpCompress.Compressors.Rar.VM.VMPreparedProgram");
            feature.AddKnownType("SharpCompress.Compressors.Rar.VM.VMStandardFilters,SharpCompress", "SharpCompress.Compressors.Rar.VM.VMStandardFilters");
            feature.AddKnownType("SharpCompress.Compressors.Rar.VM.VMStandardFilterSignature,SharpCompress", "SharpCompress.Compressors.Rar.VM.VMStandardFilterSignature");
            feature.AddKnownType("SharpCompress.Compressors.Xz.CheckType,SharpCompress", "SharpCompress.Compressors.Xz.CheckType");
            feature.AddKnownType("SharpCompress.Compressors.Xz.ReadOnlyStream,SharpCompress", "SharpCompress.Compressors.Xz.ReadOnlyStream");
            feature.AddKnownType("SharpCompress.Compressors.Xz.XZBlock,SharpCompress", "SharpCompress.Compressors.Xz.XZBlock");
            feature.AddKnownType("SharpCompress.Compressors.Xz.XZFooter,SharpCompress", "SharpCompress.Compressors.Xz.XZFooter");
            feature.AddKnownType("SharpCompress.Compressors.Xz.XZHeader,SharpCompress", "SharpCompress.Compressors.Xz.XZHeader");
            feature.AddKnownType("SharpCompress.Compressors.Xz.XZIndex,SharpCompress", "SharpCompress.Compressors.Xz.XZIndex");
            feature.AddKnownType("SharpCompress.Compressors.Xz.XZIndexMarkerReachedException,SharpCompress", "SharpCompress.Compressors.Xz.XZIndexMarkerReachedException");
            feature.AddKnownType("SharpCompress.Compressors.Xz.XZIndexRecord,SharpCompress", "SharpCompress.Compressors.Xz.XZIndexRecord");
            feature.AddKnownType("SharpCompress.Compressors.Xz.XZReadOnlyStream,SharpCompress", "SharpCompress.Compressors.Xz.XZReadOnlyStream");
            feature.AddKnownType("SharpCompress.Compressors.Xz.XZStream,SharpCompress", "SharpCompress.Compressors.Xz.XZStream");
            feature.AddKnownType("SharpCompress.Compressors.Xz.Filters.BlockFilter,SharpCompress", "SharpCompress.Compressors.Xz.Filters.BlockFilter");
            feature.AddKnownType("SharpCompress.Compressors.Xz.Filters.BlockFilter+FilterTypes,SharpCompress", "SharpCompress.Compressors.Xz.Filters.SharpCompress.Compressors.Xz.Filters.BlockFilter.FilterTypes");
            feature.AddKnownType("SharpCompress.Compressors.Xz.Filters.Lzma2Filter,SharpCompress", "SharpCompress.Compressors.Xz.Filters.Lzma2Filter");
            feature.AddKnownType("SharpCompress.Crypto.Crc32Stream,SharpCompress", "SharpCompress.Crypto.Crc32Stream");
            feature.AddKnownType("SharpCompress.Crypto.CryptoException,SharpCompress", "SharpCompress.Crypto.CryptoException");
            feature.AddKnownType("SharpCompress.Crypto.DataLengthException,SharpCompress", "SharpCompress.Crypto.DataLengthException");
            feature.AddKnownType("SharpCompress.Crypto.IBlockCipher,SharpCompress", "SharpCompress.Crypto.IBlockCipher");
            feature.AddKnownType("SharpCompress.Crypto.ICipherParameters,SharpCompress", "SharpCompress.Crypto.ICipherParameters");
            feature.AddKnownType("SharpCompress.Crypto.KeyParameter,SharpCompress", "SharpCompress.Crypto.KeyParameter");
            feature.AddKnownType("SharpCompress.Crypto.RijndaelEngine,SharpCompress", "SharpCompress.Crypto.RijndaelEngine");
            feature.AddKnownType("SharpCompress.IO.BufferedSubStream,SharpCompress", "SharpCompress.IO.BufferedSubStream");
            feature.AddKnownType("SharpCompress.IO.CountingWritableSubStream,SharpCompress", "SharpCompress.IO.CountingWritableSubStream");
            feature.AddKnownType("SharpCompress.IO.ListeningStream,SharpCompress", "SharpCompress.IO.ListeningStream");
            feature.AddKnownType("SharpCompress.IO.MarkingBinaryReader,SharpCompress", "SharpCompress.IO.MarkingBinaryReader");
            feature.AddKnownType("SharpCompress.IO.NonDisposingStream,SharpCompress", "SharpCompress.IO.NonDisposingStream");
            feature.AddKnownType("SharpCompress.IO.ReadOnlySubStream,SharpCompress", "SharpCompress.IO.ReadOnlySubStream");
            feature.AddKnownType("SharpCompress.IO.RewindableStream,SharpCompress", "SharpCompress.IO.RewindableStream");
            feature.AddKnownType("SharpCompress.IO.StreamingMode,SharpCompress", "SharpCompress.IO.StreamingMode");
            feature.AddKnownType("SharpCompress.Readers.AbstractReader`2,SharpCompress", "SharpCompress.Readers.AbstractReader`2'2");
            feature.AddKnownType("SharpCompress.Readers.IReader,SharpCompress", "SharpCompress.Readers.IReader");
            feature.AddKnownType("SharpCompress.Readers.IReaderExtractionListener,SharpCompress", "SharpCompress.Readers.IReaderExtractionListener");
            feature.AddKnownType("SharpCompress.Readers.ReaderOptions,SharpCompress", "SharpCompress.Readers.ReaderOptions");
            feature.AddKnownType("SharpCompress.Readers.ReaderProgress,SharpCompress", "SharpCompress.Readers.ReaderProgress");
            feature.AddKnownType("SharpCompress.Readers.GZip.GZipReader,SharpCompress", "SharpCompress.Readers.GZip.GZipReader");
            feature.AddKnownType("SharpCompress.Readers.Rar.MultiVolumeRarReader,SharpCompress", "SharpCompress.Readers.Rar.MultiVolumeRarReader");
            feature.AddKnownType("SharpCompress.Readers.Rar.MultiVolumeRarReader+MultiVolumeStreamEnumerator,SharpCompress", "SharpCompress.Readers.Rar.MultiVolumeStreamEnumerator");
            feature.AddKnownType("SharpCompress.Readers.Rar.NonSeekableStreamFilePart,SharpCompress", "SharpCompress.Readers.Rar.NonSeekableStreamFilePart");
            feature.AddKnownType("SharpCompress.Readers.Rar.RarReader,SharpCompress", "SharpCompress.Readers.Rar.RarReader");
            feature.AddKnownType("SharpCompress.Readers.Rar.RarReaderEntry,SharpCompress", "SharpCompress.Readers.Rar.RarReaderEntry");
            feature.AddKnownType("SharpCompress.Readers.Rar.RarReaderVolume,SharpCompress", "SharpCompress.Readers.Rar.RarReaderVolume");
            feature.AddKnownType("SharpCompress.Readers.Rar.SingleVolumeRarReader,SharpCompress", "SharpCompress.Readers.Rar.SingleVolumeRarReader");
            feature.AddKnownType("SharpCompress.Readers.Tar.TarReader,SharpCompress", "SharpCompress.Readers.Tar.TarReader");
            feature.AddKnownType("SharpCompress.Readers.Zip.ZipReader,SharpCompress", "SharpCompress.Readers.Zip.ZipReader");
            feature.AddKnownType("SharpCompress.Writers.AbstractWriter,SharpCompress", "SharpCompress.Writers.AbstractWriter");
            feature.AddKnownType("SharpCompress.Writers.IWriter,SharpCompress", "SharpCompress.Writers.IWriter");
            feature.AddKnownType("SharpCompress.Writers.WriterOptions,SharpCompress", "SharpCompress.Writers.WriterOptions");
            feature.AddKnownType("SharpCompress.Writers.GZip.GZipWriter,SharpCompress", "SharpCompress.Writers.GZip.GZipWriter");
            feature.AddKnownType("SharpCompress.Writers.GZip.GZipWriterOptions,SharpCompress", "SharpCompress.Writers.GZip.GZipWriterOptions");
            feature.AddKnownType("SharpCompress.Writers.Tar.TarWriter,SharpCompress", "SharpCompress.Writers.Tar.TarWriter");
            feature.AddKnownType("SharpCompress.Writers.Tar.TarWriterOptions,SharpCompress", "SharpCompress.Writers.Tar.TarWriterOptions");
            feature.AddKnownType("SharpCompress.Writers.Zip.ZipCentralDirectoryEntry,SharpCompress", "SharpCompress.Writers.Zip.ZipCentralDirectoryEntry");
            feature.AddKnownType("SharpCompress.Writers.Zip.ZipWriter,SharpCompress", "SharpCompress.Writers.Zip.ZipWriter");
            feature.AddKnownType("SharpCompress.Writers.Zip.ZipWriter+ZipWritingStream,SharpCompress", "SharpCompress.Writers.Zip.ZipWritingStream");
            feature.AddKnownType("SharpCompress.Writers.Zip.ZipWriterEntryOptions,SharpCompress", "SharpCompress.Writers.Zip.ZipWriterEntryOptions");
            feature.AddKnownType("SharpCompress.Writers.Zip.ZipWriterOptions,SharpCompress", "SharpCompress.Writers.Zip.ZipWriterOptions");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Runtime.CompilerServices.Unsafe", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Security.AccessControl", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Diagnostics.CodeAnalysis.AllowNullAttribute", "AllowNullAttribute");
            feature.AddKnownType("System.Diagnostics.CodeAnalysis.DisallowNullAttribute", "DisallowNullAttribute");
            feature.AddKnownType("System.Diagnostics.CodeAnalysis.MaybeNullAttribute", "MaybeNullAttribute");
            feature.AddKnownType("System.Diagnostics.CodeAnalysis.NotNullAttribute", "NotNullAttribute");
            feature.AddKnownType("System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute", "MaybeNullWhenAttribute");
            feature.AddKnownType("System.Diagnostics.CodeAnalysis.NotNullWhenAttribute", "NotNullWhenAttribute");
            feature.AddKnownType("System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute", "NotNullIfNotNullAttribute");
            feature.AddKnownType("System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute", "DoesNotReturnAttribute");
            feature.AddKnownType("System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute", "DoesNotReturnIfAttribute");
            feature.AddKnownType("System.Diagnostics.CodeAnalysis.MemberNotNullAttribute", "MemberNotNullAttribute");
            feature.AddKnownType("System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute", "MemberNotNullWhenAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.Versioning.OSPlatformAttribute", "OSPlatformAttribute");
            feature.AddKnownType("System.Runtime.Versioning.TargetPlatformAttribute", "TargetPlatformAttribute");
            feature.AddKnownType("System.Runtime.Versioning.SupportedOSPlatformAttribute", "SupportedOSPlatformAttribute");
            feature.AddKnownType("System.Runtime.Versioning.UnsupportedOSPlatformAttribute", "UnsupportedOSPlatformAttribute");
            feature.AddKnownType("System.Security.AccessControl.AccessControlActions", "AccessControlActions");
            feature.AddKnownType("System.Security.AccessControl.AccessControlModification", "AccessControlModification");
            feature.AddKnownType("System.Security.AccessControl.AccessControlSections", "AccessControlSections");
            feature.AddKnownType("System.Security.AccessControl.AccessControlType", "AccessControlType");
            feature.AddKnownType("System.Security.AccessControl.AccessRule", "AccessRule");
            feature.AddKnownType("System.Security.AccessControl.AccessRule`1", "AccessRule`1'1");
            feature.AddKnownType("System.Security.AccessControl.AceEnumerator", "AceEnumerator");
            feature.AddKnownType("System.Security.AccessControl.AceFlags", "AceFlags");
            feature.AddKnownType("System.Security.AccessControl.AceQualifier", "AceQualifier");
            feature.AddKnownType("System.Security.AccessControl.AceType", "AceType");
            feature.AddKnownType("System.Security.AccessControl.AuditFlags", "AuditFlags");
            feature.AddKnownType("System.Security.AccessControl.AuditRule", "AuditRule");
            feature.AddKnownType("System.Security.AccessControl.AuditRule`1", "AuditRule`1'1");
            feature.AddKnownType("System.Security.AccessControl.AuthorizationRule", "AuthorizationRule");
            feature.AddKnownType("System.Security.AccessControl.AuthorizationRuleCollection", "AuthorizationRuleCollection");
            feature.AddKnownType("System.Security.AccessControl.CommonAce", "CommonAce");
            feature.AddKnownType("System.Security.AccessControl.CommonAcl", "CommonAcl");
            feature.AddKnownType("System.Security.AccessControl.CommonObjectSecurity", "CommonObjectSecurity");
            feature.AddKnownType("System.Security.AccessControl.CommonSecurityDescriptor", "CommonSecurityDescriptor");
            feature.AddKnownType("System.Security.AccessControl.CompoundAce", "CompoundAce");
            feature.AddKnownType("System.Security.AccessControl.CompoundAceType", "CompoundAceType");
            feature.AddKnownType("System.Security.AccessControl.ControlFlags", "ControlFlags");
            feature.AddKnownType("System.Security.AccessControl.CustomAce", "CustomAce");
            feature.AddKnownType("System.Security.AccessControl.DiscretionaryAcl", "DiscretionaryAcl");
            feature.AddKnownType("System.Security.AccessControl.GenericAce", "GenericAce");
            feature.AddKnownType("System.Security.AccessControl.GenericAcl", "GenericAcl");
            feature.AddKnownType("System.Security.AccessControl.GenericSecurityDescriptor", "GenericSecurityDescriptor");
            feature.AddKnownType("System.Security.AccessControl.InheritanceFlags", "InheritanceFlags");
            feature.AddKnownType("System.Security.AccessControl.KnownAce", "KnownAce");
            feature.AddKnownType("System.Security.AccessControl.NativeObjectSecurity", "NativeObjectSecurity");
            feature.AddKnownType("System.Security.AccessControl.ObjectAccessRule", "ObjectAccessRule");
            feature.AddKnownType("System.Security.AccessControl.ObjectAce", "ObjectAce");
            feature.AddKnownType("System.Security.AccessControl.ObjectAceFlags", "ObjectAceFlags");
            feature.AddKnownType("System.Security.AccessControl.ObjectAuditRule", "ObjectAuditRule");
            feature.AddKnownType("System.Security.AccessControl.ObjectSecurity", "ObjectSecurity");
            feature.AddKnownType("System.Security.AccessControl.ObjectSecurity`1", "ObjectSecurity`1'1");
            feature.AddKnownType("System.Security.AccessControl.PrivilegeNotHeldException", "PrivilegeNotHeldException");
            feature.AddKnownType("System.Security.AccessControl.PropagationFlags", "PropagationFlags");
            feature.AddKnownType("System.Security.AccessControl.QualifiedAce", "QualifiedAce");
            feature.AddKnownType("System.Security.AccessControl.RawAcl", "RawAcl");
            feature.AddKnownType("System.Security.AccessControl.RawSecurityDescriptor", "RawSecurityDescriptor");
            feature.AddKnownType("System.Security.AccessControl.ResourceType", "ResourceType");
            feature.AddKnownType("System.Security.AccessControl.SecurityInfos", "SecurityInfos");
            feature.AddKnownType("System.Security.AccessControl.SystemAcl", "SystemAcl");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Security.Principal.Windows", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Security.Principal.Windows", "Microsoft.Win32.SafeHandles.SafeAccessTokenHandle");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.Versioning.OSPlatformAttribute", "OSPlatformAttribute");
            feature.AddKnownType("System.Runtime.Versioning.TargetPlatformAttribute", "TargetPlatformAttribute");
            feature.AddKnownType("System.Runtime.Versioning.SupportedOSPlatformAttribute", "SupportedOSPlatformAttribute");
            feature.AddKnownType("System.Runtime.Versioning.UnsupportedOSPlatformAttribute", "UnsupportedOSPlatformAttribute");
            feature.AddKnownType("System.Security.Principal.IdentityNotMappedException", "IdentityNotMappedException");
            feature.AddKnownType("System.Security.Principal.IdentityReference", "IdentityReference");
            feature.AddKnownType("System.Security.Principal.IdentityReferenceCollection", "IdentityReferenceCollection");
            feature.AddKnownType("System.Security.Principal.NTAccount", "NTAccount");
            feature.AddKnownType("System.Security.Principal.SecurityIdentifier", "SecurityIdentifier");
            feature.AddKnownType("System.Security.Principal.TokenAccessLevels", "TokenAccessLevels");
            feature.AddKnownType("System.Security.Principal.WellKnownSidType", "WellKnownSidType");
            feature.AddKnownType("System.Security.Principal.WindowsAccountType", "WindowsAccountType");
            feature.AddKnownType("System.Security.Principal.WindowsBuiltInRole", "WindowsBuiltInRole");
            feature.AddKnownType("System.Security.Principal.WindowsIdentity", "WindowsIdentity");
            feature.AddKnownType("System.Security.Principal.WindowsPrincipal", "WindowsPrincipal");
        }
    }
}
#pragma warning restore 162
#pragma warning restore 219
#pragma warning restore 414
#pragma warning restore 618
#pragma warning restore 649
#pragma warning restore 693
#pragma warning restore 1591
#pragma warning restore 1998
#endif
